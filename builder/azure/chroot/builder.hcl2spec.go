// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package chroot

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName          *string           `mapstructure:"packer_build_name" cty:"packer_build_name"`
	PackerBuilderType        *string           `mapstructure:"packer_builder_type" cty:"packer_builder_type"`
	PackerDebug              *bool             `mapstructure:"packer_debug" cty:"packer_debug"`
	PackerForce              *bool             `mapstructure:"packer_force" cty:"packer_force"`
	PackerOnError            *string           `mapstructure:"packer_on_error" cty:"packer_on_error"`
	PackerUserVars           map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables"`
	PackerSensitiveVars      []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables"`
	CloudEnvironmentName     *string           `mapstructure:"cloud_environment_name" required:"false" cty:"cloud_environment_name"`
	ClientID                 *string           `mapstructure:"client_id" cty:"client_id"`
	ClientSecret             *string           `mapstructure:"client_secret" cty:"client_secret"`
	ClientCertPath           *string           `mapstructure:"client_cert_path" cty:"client_cert_path"`
	ClientJWT                *string           `mapstructure:"client_jwt" cty:"client_jwt"`
	ObjectID                 *string           `mapstructure:"object_id" cty:"object_id"`
	TenantID                 *string           `mapstructure:"tenant_id" required:"false" cty:"tenant_id"`
	SubscriptionID           *string           `mapstructure:"subscription_id" cty:"subscription_id"`
	FromScratch              *bool             `mapstructure:"from_scratch" cty:"from_scratch"`
	Source                   *string           `mapstructure:"source" required:"true" cty:"source"`
	CommandWrapper           *string           `mapstructure:"command_wrapper" cty:"command_wrapper"`
	PreMountCommands         []string          `mapstructure:"pre_mount_commands" cty:"pre_mount_commands"`
	MountOptions             []string          `mapstructure:"mount_options" cty:"mount_options"`
	MountPartition           *string           `mapstructure:"mount_partition" cty:"mount_partition"`
	MountPath                *string           `mapstructure:"mount_path" cty:"mount_path"`
	PostMountCommands        []string          `mapstructure:"post_mount_commands" cty:"post_mount_commands"`
	ChrootMounts             [][]string        `mapstructure:"chroot_mounts" cty:"chroot_mounts"`
	CopyFiles                []string          `mapstructure:"copy_files" cty:"copy_files"`
	TemporaryOSDiskName      *string           `mapstructure:"temporary_os_disk_name" cty:"temporary_os_disk_name"`
	OSDiskSizeGB             *int32            `mapstructure:"os_disk_size_gb" cty:"os_disk_size_gb"`
	OSDiskStorageAccountType *string           `mapstructure:"os_disk_storage_account_type" cty:"os_disk_storage_account_type"`
	OSDiskCacheType          *string           `mapstructure:"os_disk_cache_type" cty:"os_disk_cache_type"`
	OSDiskSkipCleanup        *bool             `mapstructure:"os_disk_skip_cleanup" cty:"os_disk_skip_cleanup"`
	ImageResourceID          *string           `mapstructure:"image_resource_id" required:"true" cty:"image_resource_id"`
	ImageHyperVGeneration    *string           `mapstructure:"image_hyperv_generation" cty:"image_hyperv_generation"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"packer_build_name":            &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"packer_builder_type":          &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"packer_debug":                 &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"packer_force":                 &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"packer_on_error":              &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"packer_user_variables":        &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"packer_sensitive_variables":   &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"cloud_environment_name":       &hcldec.AttrSpec{Name: "cloud_environment_name", Type: cty.String, Required: false},
		"client_id":                    &hcldec.AttrSpec{Name: "client_id", Type: cty.String, Required: false},
		"client_secret":                &hcldec.AttrSpec{Name: "client_secret", Type: cty.String, Required: false},
		"client_cert_path":             &hcldec.AttrSpec{Name: "client_cert_path", Type: cty.String, Required: false},
		"client_jwt":                   &hcldec.AttrSpec{Name: "client_jwt", Type: cty.String, Required: false},
		"object_id":                    &hcldec.AttrSpec{Name: "object_id", Type: cty.String, Required: false},
		"tenant_id":                    &hcldec.AttrSpec{Name: "tenant_id", Type: cty.String, Required: false},
		"subscription_id":              &hcldec.AttrSpec{Name: "subscription_id", Type: cty.String, Required: false},
		"from_scratch":                 &hcldec.AttrSpec{Name: "from_scratch", Type: cty.Bool, Required: false},
		"source":                       &hcldec.AttrSpec{Name: "source", Type: cty.String, Required: false},
		"command_wrapper":              &hcldec.AttrSpec{Name: "command_wrapper", Type: cty.String, Required: false},
		"pre_mount_commands":           &hcldec.AttrSpec{Name: "pre_mount_commands", Type: cty.List(cty.String), Required: false},
		"mount_options":                &hcldec.AttrSpec{Name: "mount_options", Type: cty.List(cty.String), Required: false},
		"mount_partition":              &hcldec.AttrSpec{Name: "mount_partition", Type: cty.String, Required: false},
		"mount_path":                   &hcldec.AttrSpec{Name: "mount_path", Type: cty.String, Required: false},
		"post_mount_commands":          &hcldec.AttrSpec{Name: "post_mount_commands", Type: cty.List(cty.String), Required: false},
		"chroot_mounts":                &hcldec.BlockListSpec{TypeName: "chroot_mounts", Nested: &hcldec.AttrSpec{Name: "chroot_mounts", Type: cty.List(cty.String), Required: false}},
		"copy_files":                   &hcldec.AttrSpec{Name: "copy_files", Type: cty.List(cty.String), Required: false},
		"temporary_os_disk_name":       &hcldec.AttrSpec{Name: "temporary_os_disk_name", Type: cty.String, Required: false},
		"os_disk_size_gb":              &hcldec.AttrSpec{Name: "os_disk_size_gb", Type: cty.Number, Required: false},
		"os_disk_storage_account_type": &hcldec.AttrSpec{Name: "os_disk_storage_account_type", Type: cty.String, Required: false},
		"os_disk_cache_type":           &hcldec.AttrSpec{Name: "os_disk_cache_type", Type: cty.String, Required: false},
		"os_disk_skip_cleanup":         &hcldec.AttrSpec{Name: "os_disk_skip_cleanup", Type: cty.Bool, Required: false},
		"image_resource_id":            &hcldec.AttrSpec{Name: "image_resource_id", Type: cty.String, Required: false},
		"image_hyperv_generation":      &hcldec.AttrSpec{Name: "image_hyperv_generation", Type: cty.String, Required: false},
	}
	return s
}
