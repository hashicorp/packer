// Code generated by "mapstructure-to-hcl2 -type ConnectConfig"; DO NOT EDIT.

package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConnectConfig is an auto-generated flat version of ConnectConfig.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConnectConfig struct {
	VCenterServer      *string `mapstructure:"vcenter_server" cty:"vcenter_server" hcl:"vcenter_server"`
	Username           *string `mapstructure:"username" cty:"username" hcl:"username"`
	Password           *string `mapstructure:"password" cty:"password" hcl:"password"`
	InsecureConnection *bool   `mapstructure:"insecure_connection" cty:"insecure_connection" hcl:"insecure_connection"`
	Datacenter         *string `mapstructure:"datacenter" cty:"datacenter" hcl:"datacenter"`
}

// FlatMapstructure returns a new FlatConnectConfig.
// FlatConnectConfig is an auto-generated flat version of ConnectConfig.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*ConnectConfig) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConnectConfig)
}

// HCL2Spec returns the hcl spec of a ConnectConfig.
// This spec is used by HCL to read the fields of ConnectConfig.
// The decoded values from this spec will then be applied to a FlatConnectConfig.
func (*FlatConnectConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"vcenter_server":      &hcldec.AttrSpec{Name: "vcenter_server", Type: cty.String, Required: false},
		"username":            &hcldec.AttrSpec{Name: "username", Type: cty.String, Required: false},
		"password":            &hcldec.AttrSpec{Name: "password", Type: cty.String, Required: false},
		"insecure_connection": &hcldec.AttrSpec{Name: "insecure_connection", Type: cty.Bool, Required: false},
		"datacenter":          &hcldec.AttrSpec{Name: "datacenter", Type: cty.String, Required: false},
	}
	return s
}
