// Code generated by "mapstructure-to-hcl2 -type FloppyConfig"; DO NOT EDIT.

package common

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatFloppyConfig is an auto-generated flat version of FloppyConfig.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatFloppyConfig struct {
	FloppyIMGPath     *string  `mapstructure:"floppy_img_path" cty:"floppy_img_path" hcl:"floppy_img_path"`
	FloppyFiles       []string `mapstructure:"floppy_files" cty:"floppy_files" hcl:"floppy_files"`
	FloppyDirectories []string `mapstructure:"floppy_dirs" cty:"floppy_dirs" hcl:"floppy_dirs"`
	FloppyLabel       *string  `mapstructure:"floppy_label" cty:"floppy_label" hcl:"floppy_label"`
}

// FlatMapstructure returns a new FlatFloppyConfig.
// FlatFloppyConfig is an auto-generated flat version of FloppyConfig.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*FloppyConfig) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatFloppyConfig)
}

// HCL2Spec returns the hcl spec of a FloppyConfig.
// This spec is used by HCL to read the fields of FloppyConfig.
// The decoded values from this spec will then be applied to a FlatFloppyConfig.
func (*FlatFloppyConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"floppy_img_path": &hcldec.AttrSpec{Name: "floppy_img_path", Type: cty.String, Required: false},
		"floppy_files":    &hcldec.AttrSpec{Name: "floppy_files", Type: cty.List(cty.String), Required: false},
		"floppy_dirs":     &hcldec.AttrSpec{Name: "floppy_dirs", Type: cty.List(cty.String), Required: false},
		"floppy_label":    &hcldec.AttrSpec{Name: "floppy_label", Type: cty.String, Required: false},
	}
	return s
}
