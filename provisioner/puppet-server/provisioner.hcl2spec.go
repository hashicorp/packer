// Code generated by "mapstructure-to-hcl2 -type Config"; DO NOT EDIT.
package puppetserver

import (
	"github.com/hashicorp/hcl/v2/hcldec"
	"github.com/zclconf/go-cty/cty"
)

// FlatConfig is an auto-generated flat version of Config.
// Where the contents of a field with a `mapstructure:,squash` tag are bubbled up.
type FlatConfig struct {
	PackerBuildName      *string           `mapstructure:"packer_build_name" cty:"packer_build_name"`
	PackerBuilderType    *string           `mapstructure:"packer_builder_type" cty:"packer_builder_type"`
	PackerDebug          *bool             `mapstructure:"packer_debug" cty:"packer_debug"`
	PackerForce          *bool             `mapstructure:"packer_force" cty:"packer_force"`
	PackerOnError        *string           `mapstructure:"packer_on_error" cty:"packer_on_error"`
	PackerUserVars       map[string]string `mapstructure:"packer_user_variables" cty:"packer_user_variables"`
	PackerSensitiveVars  []string          `mapstructure:"packer_sensitive_variables" cty:"packer_sensitive_variables"`
	CleanStagingDir      *bool             `mapstructure:"clean_staging_directory" cty:"clean_staging_directory"`
	ClientCertPath       *string           `mapstructure:"client_cert_path" cty:"client_cert_path"`
	ClientPrivateKeyPath *string           `mapstructure:"client_private_key_path" cty:"client_private_key_path"`
	ExecuteCommand       *string           `mapstructure:"execute_command" cty:"execute_command"`
	ExtraArguments       []string          `mapstructure:"extra_arguments" cty:"extra_arguments"`
	Facter               map[string]string `cty:"facter"`
	GuestOSType          *string           `mapstructure:"guest_os_type" cty:"guest_os_type"`
	IgnoreExitCodes      *bool             `mapstructure:"ignore_exit_codes" cty:"ignore_exit_codes"`
	PreventSudo          *bool             `mapstructure:"prevent_sudo" cty:"prevent_sudo"`
	PuppetBinDir         *string           `mapstructure:"puppet_bin_dir" cty:"puppet_bin_dir"`
	PuppetNode           *string           `mapstructure:"puppet_node" cty:"puppet_node"`
	PuppetServer         *string           `mapstructure:"puppet_server" cty:"puppet_server"`
	StagingDir           *string           `mapstructure:"staging_dir" cty:"staging_dir"`
	WorkingDir           *string           `mapstructure:"working_directory" cty:"working_directory"`
	ElevatedUser         *string           `mapstructure:"elevated_user" cty:"elevated_user"`
	ElevatedPassword     *string           `mapstructure:"elevated_password" cty:"elevated_password"`
}

// FlatMapstructure returns a new FlatConfig.
// FlatConfig is an auto-generated flat version of Config.
// Where the contents a fields with a `mapstructure:,squash` tag are bubbled up.
func (*Config) FlatMapstructure() interface{ HCL2Spec() map[string]hcldec.Spec } {
	return new(FlatConfig)
}

// HCL2Spec returns the hcl spec of a Config.
// This spec is used by HCL to read the fields of Config.
// The decoded values from this spec will then be applied to a FlatConfig.
func (*FlatConfig) HCL2Spec() map[string]hcldec.Spec {
	s := map[string]hcldec.Spec{
		"packer_build_name":          &hcldec.AttrSpec{Name: "packer_build_name", Type: cty.String, Required: false},
		"packer_builder_type":        &hcldec.AttrSpec{Name: "packer_builder_type", Type: cty.String, Required: false},
		"packer_debug":               &hcldec.AttrSpec{Name: "packer_debug", Type: cty.Bool, Required: false},
		"packer_force":               &hcldec.AttrSpec{Name: "packer_force", Type: cty.Bool, Required: false},
		"packer_on_error":            &hcldec.AttrSpec{Name: "packer_on_error", Type: cty.String, Required: false},
		"packer_user_variables":      &hcldec.BlockAttrsSpec{TypeName: "packer_user_variables", ElementType: cty.String, Required: false},
		"packer_sensitive_variables": &hcldec.AttrSpec{Name: "packer_sensitive_variables", Type: cty.List(cty.String), Required: false},
		"clean_staging_directory":    &hcldec.AttrSpec{Name: "clean_staging_directory", Type: cty.Bool, Required: false},
		"client_cert_path":           &hcldec.AttrSpec{Name: "client_cert_path", Type: cty.String, Required: false},
		"client_private_key_path":    &hcldec.AttrSpec{Name: "client_private_key_path", Type: cty.String, Required: false},
		"execute_command":            &hcldec.AttrSpec{Name: "execute_command", Type: cty.String, Required: false},
		"extra_arguments":            &hcldec.AttrSpec{Name: "extra_arguments", Type: cty.List(cty.String), Required: false},
		"facter":                     &hcldec.BlockAttrsSpec{TypeName: "facter", ElementType: cty.String, Required: false},
		"guest_os_type":              &hcldec.AttrSpec{Name: "guest_os_type", Type: cty.String, Required: false},
		"ignore_exit_codes":          &hcldec.AttrSpec{Name: "ignore_exit_codes", Type: cty.Bool, Required: false},
		"prevent_sudo":               &hcldec.AttrSpec{Name: "prevent_sudo", Type: cty.Bool, Required: false},
		"puppet_bin_dir":             &hcldec.AttrSpec{Name: "puppet_bin_dir", Type: cty.String, Required: false},
		"puppet_node":                &hcldec.AttrSpec{Name: "puppet_node", Type: cty.String, Required: false},
		"puppet_server":              &hcldec.AttrSpec{Name: "puppet_server", Type: cty.String, Required: false},
		"staging_dir":                &hcldec.AttrSpec{Name: "staging_dir", Type: cty.String, Required: false},
		"working_directory":          &hcldec.AttrSpec{Name: "working_directory", Type: cty.String, Required: false},
		"elevated_user":              &hcldec.AttrSpec{Name: "elevated_user", Type: cty.String, Required: false},
		"elevated_password":          &hcldec.AttrSpec{Name: "elevated_password", Type: cty.String, Required: false},
	}
	return s
}
