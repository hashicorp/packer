// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/loadbalancer/v1/health_check.proto

package loadbalancer

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// A HealthCheck resource. For more information, see [Health check](/docs/load-balancer/concepts/health-check).
type HealthCheck struct {
	// Name of the health check. The name must be unique for each target group that attached to a single load balancer. 3-63 characters long.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The interval between health checks. The default is 2 seconds.
	Interval *duration.Duration `protobuf:"bytes,2,opt,name=interval,proto3" json:"interval,omitempty"`
	// Timeout for a target to return a response for the health check. The default is 1 second.
	Timeout *duration.Duration `protobuf:"bytes,3,opt,name=timeout,proto3" json:"timeout,omitempty"`
	// Number of failed health checks before changing the status to `` UNHEALTHY ``. The default is 2.
	UnhealthyThreshold int64 `protobuf:"varint,4,opt,name=unhealthy_threshold,json=unhealthyThreshold,proto3" json:"unhealthy_threshold,omitempty"`
	// Number of successful health checks required in order to set the `` HEALTHY `` status for the target. The default is 2.
	HealthyThreshold int64 `protobuf:"varint,5,opt,name=healthy_threshold,json=healthyThreshold,proto3" json:"healthy_threshold,omitempty"`
	// Protocol to use for the health check. Either TCP or HTTP.
	//
	// Types that are valid to be assigned to Options:
	//	*HealthCheck_TcpOptions_
	//	*HealthCheck_HttpOptions_
	Options              isHealthCheck_Options `protobuf_oneof:"options"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *HealthCheck) Reset()         { *m = HealthCheck{} }
func (m *HealthCheck) String() string { return proto.CompactTextString(m) }
func (*HealthCheck) ProtoMessage()    {}
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b62ad9bb627f411, []int{0}
}

func (m *HealthCheck) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheck.Unmarshal(m, b)
}
func (m *HealthCheck) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheck.Marshal(b, m, deterministic)
}
func (m *HealthCheck) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheck.Merge(m, src)
}
func (m *HealthCheck) XXX_Size() int {
	return xxx_messageInfo_HealthCheck.Size(m)
}
func (m *HealthCheck) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheck.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheck proto.InternalMessageInfo

func (m *HealthCheck) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *HealthCheck) GetInterval() *duration.Duration {
	if m != nil {
		return m.Interval
	}
	return nil
}

func (m *HealthCheck) GetTimeout() *duration.Duration {
	if m != nil {
		return m.Timeout
	}
	return nil
}

func (m *HealthCheck) GetUnhealthyThreshold() int64 {
	if m != nil {
		return m.UnhealthyThreshold
	}
	return 0
}

func (m *HealthCheck) GetHealthyThreshold() int64 {
	if m != nil {
		return m.HealthyThreshold
	}
	return 0
}

type isHealthCheck_Options interface {
	isHealthCheck_Options()
}

type HealthCheck_TcpOptions_ struct {
	TcpOptions *HealthCheck_TcpOptions `protobuf:"bytes,6,opt,name=tcp_options,json=tcpOptions,proto3,oneof"`
}

type HealthCheck_HttpOptions_ struct {
	HttpOptions *HealthCheck_HttpOptions `protobuf:"bytes,7,opt,name=http_options,json=httpOptions,proto3,oneof"`
}

func (*HealthCheck_TcpOptions_) isHealthCheck_Options() {}

func (*HealthCheck_HttpOptions_) isHealthCheck_Options() {}

func (m *HealthCheck) GetOptions() isHealthCheck_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *HealthCheck) GetTcpOptions() *HealthCheck_TcpOptions {
	if x, ok := m.GetOptions().(*HealthCheck_TcpOptions_); ok {
		return x.TcpOptions
	}
	return nil
}

func (m *HealthCheck) GetHttpOptions() *HealthCheck_HttpOptions {
	if x, ok := m.GetOptions().(*HealthCheck_HttpOptions_); ok {
		return x.HttpOptions
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*HealthCheck) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*HealthCheck_TcpOptions_)(nil),
		(*HealthCheck_HttpOptions_)(nil),
	}
}

// Configuration option for a TCP health check.
type HealthCheck_TcpOptions struct {
	// Port to use for TCP health checks.
	Port                 int64    `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheck_TcpOptions) Reset()         { *m = HealthCheck_TcpOptions{} }
func (m *HealthCheck_TcpOptions) String() string { return proto.CompactTextString(m) }
func (*HealthCheck_TcpOptions) ProtoMessage()    {}
func (*HealthCheck_TcpOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b62ad9bb627f411, []int{0, 0}
}

func (m *HealthCheck_TcpOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheck_TcpOptions.Unmarshal(m, b)
}
func (m *HealthCheck_TcpOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheck_TcpOptions.Marshal(b, m, deterministic)
}
func (m *HealthCheck_TcpOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheck_TcpOptions.Merge(m, src)
}
func (m *HealthCheck_TcpOptions) XXX_Size() int {
	return xxx_messageInfo_HealthCheck_TcpOptions.Size(m)
}
func (m *HealthCheck_TcpOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheck_TcpOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheck_TcpOptions proto.InternalMessageInfo

func (m *HealthCheck_TcpOptions) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

// Configuration option for an HTTP health check.
type HealthCheck_HttpOptions struct {
	// Port to use for HTTP health checks.
	Port int64 `protobuf:"varint,1,opt,name=port,proto3" json:"port,omitempty"`
	// URL path to set for health checking requests for every target in the target group.
	// For example `` /ping ``. The default path is `` / ``.
	Path                 string   `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *HealthCheck_HttpOptions) Reset()         { *m = HealthCheck_HttpOptions{} }
func (m *HealthCheck_HttpOptions) String() string { return proto.CompactTextString(m) }
func (*HealthCheck_HttpOptions) ProtoMessage()    {}
func (*HealthCheck_HttpOptions) Descriptor() ([]byte, []int) {
	return fileDescriptor_9b62ad9bb627f411, []int{0, 1}
}

func (m *HealthCheck_HttpOptions) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_HealthCheck_HttpOptions.Unmarshal(m, b)
}
func (m *HealthCheck_HttpOptions) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_HealthCheck_HttpOptions.Marshal(b, m, deterministic)
}
func (m *HealthCheck_HttpOptions) XXX_Merge(src proto.Message) {
	xxx_messageInfo_HealthCheck_HttpOptions.Merge(m, src)
}
func (m *HealthCheck_HttpOptions) XXX_Size() int {
	return xxx_messageInfo_HealthCheck_HttpOptions.Size(m)
}
func (m *HealthCheck_HttpOptions) XXX_DiscardUnknown() {
	xxx_messageInfo_HealthCheck_HttpOptions.DiscardUnknown(m)
}

var xxx_messageInfo_HealthCheck_HttpOptions proto.InternalMessageInfo

func (m *HealthCheck_HttpOptions) GetPort() int64 {
	if m != nil {
		return m.Port
	}
	return 0
}

func (m *HealthCheck_HttpOptions) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func init() {
	proto.RegisterType((*HealthCheck)(nil), "yandex.cloud.loadbalancer.v1.HealthCheck")
	proto.RegisterType((*HealthCheck_TcpOptions)(nil), "yandex.cloud.loadbalancer.v1.HealthCheck.TcpOptions")
	proto.RegisterType((*HealthCheck_HttpOptions)(nil), "yandex.cloud.loadbalancer.v1.HealthCheck.HttpOptions")
}

func init() {
	proto.RegisterFile("yandex/cloud/loadbalancer/v1/health_check.proto", fileDescriptor_9b62ad9bb627f411)
}

var fileDescriptor_9b62ad9bb627f411 = []byte{
	// 454 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0xc1, 0x6f, 0xd3, 0x30,
	0x14, 0xc6, 0x09, 0x0d, 0xeb, 0xf6, 0x82, 0x04, 0x98, 0x4b, 0xa8, 0x18, 0x54, 0x48, 0x48, 0x3d,
	0x60, 0x67, 0x5e, 0xc9, 0xa4, 0x8a, 0x5b, 0xe0, 0xd0, 0x0b, 0x42, 0x8a, 0x26, 0x21, 0xad, 0x9a,
	0x2a, 0x37, 0x31, 0x71, 0x44, 0x1a, 0x87, 0xec, 0xa5, 0x62, 0x03, 0xfe, 0x37, 0x38, 0xf5, 0xcf,
	0xe0, 0xca, 0x99, 0xe3, 0x4e, 0x68, 0x4e, 0xda, 0x66, 0x9b, 0xb4, 0x71, 0xcb, 0x53, 0xbe, 0xdf,
	0xf7, 0xbe, 0xe7, 0x67, 0x83, 0x77, 0x2a, 0xf2, 0x58, 0x7e, 0xf5, 0xa2, 0x4c, 0x57, 0xb1, 0x97,
	0x69, 0x11, 0xcf, 0x44, 0x26, 0xf2, 0x48, 0x96, 0xde, 0x82, 0x7b, 0x4a, 0x8a, 0x0c, 0xd5, 0x34,
	0x52, 0x32, 0xfa, 0xcc, 0x8a, 0x52, 0xa3, 0x26, 0x4f, 0x6b, 0x80, 0x19, 0x80, 0xb5, 0x01, 0xb6,
	0xe0, 0xbd, 0x67, 0x89, 0xd6, 0x49, 0x26, 0x3d, 0xa3, 0x9d, 0x55, 0x9f, 0xbc, 0xb8, 0x2a, 0x05,
	0xa6, 0x3a, 0xaf, 0xe9, 0xde, 0xee, 0xa5, 0x76, 0x0b, 0x91, 0xa5, 0x71, 0xeb, 0xf7, 0x8b, 0xdf,
	0x36, 0x38, 0x63, 0xd3, 0xf3, 0xed, 0x45, 0x4b, 0x32, 0x02, 0x3b, 0x17, 0x73, 0xe9, 0x5a, 0x7d,
	0x6b, 0xb0, 0x13, 0xbc, 0xfc, 0xb3, 0xe4, 0xd6, 0xdf, 0x25, 0xdf, 0xfd, 0x3e, 0x11, 0xf4, 0xec,
	0x78, 0x42, 0x05, 0x3d, 0xdb, 0xa3, 0xa3, 0xe3, 0x6f, 0xfc, 0xd5, 0x01, 0xff, 0x31, 0x69, 0xaa,
	0xd0, 0x20, 0xc4, 0x87, 0xed, 0x34, 0x47, 0x59, 0x2e, 0x44, 0xe6, 0xde, 0xed, 0x5b, 0x03, 0x67,
	0xff, 0x09, 0xab, 0xc3, 0xb1, 0x55, 0x38, 0xf6, 0xae, 0x09, 0x17, 0xae, 0xa5, 0x64, 0x08, 0x5d,
	0x4c, 0xe7, 0x52, 0x57, 0xe8, 0x76, 0x6e, 0xa3, 0x56, 0x4a, 0x32, 0x82, 0xc7, 0x55, 0x5e, 0x9f,
	0xd5, 0xe9, 0x14, 0x55, 0x29, 0x4f, 0x94, 0xce, 0x62, 0xd7, 0xee, 0x5b, 0x83, 0x4e, 0xb0, 0x7d,
	0xbe, 0xe4, 0xf6, 0x3e, 0xe5, 0x7b, 0x21, 0x59, 0x8b, 0x0e, 0x57, 0x1a, 0xe2, 0xc3, 0xa3, 0xeb,
	0xe0, 0xbd, 0x2b, 0xe0, 0xc3, 0x6b, 0xd8, 0x47, 0x70, 0x30, 0x2a, 0xa6, 0xba, 0xb8, 0x08, 0x72,
	0xe2, 0x6e, 0x99, 0xa8, 0xaf, 0xd9, 0x4d, 0xbb, 0x61, 0xad, 0x83, 0x65, 0x87, 0x51, 0xf1, 0xa1,
	0x66, 0xc7, 0x77, 0x42, 0xc0, 0x75, 0x45, 0x8e, 0xe0, 0xbe, 0x42, 0xdc, 0x38, 0x77, 0x8d, 0xb3,
	0xff, 0xff, 0xce, 0x63, 0xc4, 0x96, 0xb5, 0xa3, 0x36, 0x65, 0x8f, 0x02, 0x6c, 0xfa, 0x92, 0xe7,
	0x60, 0x17, 0xba, 0x44, 0xb3, 0xdb, 0x4e, 0xe0, 0x9c, 0x2f, 0x79, 0x97, 0xd3, 0x03, 0xdf, 0x1f,
	0xfa, 0xa1, 0xf9, 0xd1, 0x0b, 0xc0, 0x69, 0x99, 0xdd, 0xaa, 0x27, 0x04, 0xec, 0x42, 0xa0, 0x32,
	0xdb, 0xde, 0x09, 0xcd, 0x77, 0xf0, 0x00, 0xba, 0xcd, 0x24, 0xc4, 0xfe, 0xf9, 0x8b, 0x5b, 0xc1,
	0x17, 0xe8, 0x5f, 0x1a, 0x45, 0x14, 0xe9, 0xd5, 0x71, 0x8e, 0xde, 0x27, 0x29, 0xaa, 0x6a, 0xc6,
	0x22, 0x3d, 0x6f, 0x9e, 0x07, 0xad, 0xef, 0x6b, 0xa2, 0x69, 0x22, 0x73, 0x73, 0x11, 0x6e, 0x7c,
	0x37, 0x6f, 0xda, 0xf5, 0x6c, 0xcb, 0x00, 0xc3, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x29, 0x0b,
	0x71, 0x2a, 0x6b, 0x03, 0x00, 0x00,
}
