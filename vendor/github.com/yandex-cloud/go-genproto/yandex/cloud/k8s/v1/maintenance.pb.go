// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/k8s/v1/maintenance.proto

package k8s

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	dayofweek "google.golang.org/genproto/googleapis/type/dayofweek"
	timeofday "google.golang.org/genproto/googleapis/type/timeofday"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MaintenanceWindow struct {
	// Maintenance policy.
	//
	// Types that are valid to be assigned to Policy:
	//	*MaintenanceWindow_Anytime
	//	*MaintenanceWindow_DailyMaintenanceWindow
	//	*MaintenanceWindow_WeeklyMaintenanceWindow
	Policy               isMaintenanceWindow_Policy `protobuf_oneof:"policy"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *MaintenanceWindow) Reset()         { *m = MaintenanceWindow{} }
func (m *MaintenanceWindow) String() string { return proto.CompactTextString(m) }
func (*MaintenanceWindow) ProtoMessage()    {}
func (*MaintenanceWindow) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed0cf6b897b3d063, []int{0}
}

func (m *MaintenanceWindow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MaintenanceWindow.Unmarshal(m, b)
}
func (m *MaintenanceWindow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MaintenanceWindow.Marshal(b, m, deterministic)
}
func (m *MaintenanceWindow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MaintenanceWindow.Merge(m, src)
}
func (m *MaintenanceWindow) XXX_Size() int {
	return xxx_messageInfo_MaintenanceWindow.Size(m)
}
func (m *MaintenanceWindow) XXX_DiscardUnknown() {
	xxx_messageInfo_MaintenanceWindow.DiscardUnknown(m)
}

var xxx_messageInfo_MaintenanceWindow proto.InternalMessageInfo

type isMaintenanceWindow_Policy interface {
	isMaintenanceWindow_Policy()
}

type MaintenanceWindow_Anytime struct {
	Anytime *AnytimeMaintenanceWindow `protobuf:"bytes,1,opt,name=anytime,proto3,oneof"`
}

type MaintenanceWindow_DailyMaintenanceWindow struct {
	DailyMaintenanceWindow *DailyMaintenanceWindow `protobuf:"bytes,2,opt,name=daily_maintenance_window,json=dailyMaintenanceWindow,proto3,oneof"`
}

type MaintenanceWindow_WeeklyMaintenanceWindow struct {
	WeeklyMaintenanceWindow *WeeklyMaintenanceWindow `protobuf:"bytes,3,opt,name=weekly_maintenance_window,json=weeklyMaintenanceWindow,proto3,oneof"`
}

func (*MaintenanceWindow_Anytime) isMaintenanceWindow_Policy() {}

func (*MaintenanceWindow_DailyMaintenanceWindow) isMaintenanceWindow_Policy() {}

func (*MaintenanceWindow_WeeklyMaintenanceWindow) isMaintenanceWindow_Policy() {}

func (m *MaintenanceWindow) GetPolicy() isMaintenanceWindow_Policy {
	if m != nil {
		return m.Policy
	}
	return nil
}

func (m *MaintenanceWindow) GetAnytime() *AnytimeMaintenanceWindow {
	if x, ok := m.GetPolicy().(*MaintenanceWindow_Anytime); ok {
		return x.Anytime
	}
	return nil
}

func (m *MaintenanceWindow) GetDailyMaintenanceWindow() *DailyMaintenanceWindow {
	if x, ok := m.GetPolicy().(*MaintenanceWindow_DailyMaintenanceWindow); ok {
		return x.DailyMaintenanceWindow
	}
	return nil
}

func (m *MaintenanceWindow) GetWeeklyMaintenanceWindow() *WeeklyMaintenanceWindow {
	if x, ok := m.GetPolicy().(*MaintenanceWindow_WeeklyMaintenanceWindow); ok {
		return x.WeeklyMaintenanceWindow
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*MaintenanceWindow) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*MaintenanceWindow_Anytime)(nil),
		(*MaintenanceWindow_DailyMaintenanceWindow)(nil),
		(*MaintenanceWindow_WeeklyMaintenanceWindow)(nil),
	}
}

type AnytimeMaintenanceWindow struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AnytimeMaintenanceWindow) Reset()         { *m = AnytimeMaintenanceWindow{} }
func (m *AnytimeMaintenanceWindow) String() string { return proto.CompactTextString(m) }
func (*AnytimeMaintenanceWindow) ProtoMessage()    {}
func (*AnytimeMaintenanceWindow) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed0cf6b897b3d063, []int{1}
}

func (m *AnytimeMaintenanceWindow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AnytimeMaintenanceWindow.Unmarshal(m, b)
}
func (m *AnytimeMaintenanceWindow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AnytimeMaintenanceWindow.Marshal(b, m, deterministic)
}
func (m *AnytimeMaintenanceWindow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AnytimeMaintenanceWindow.Merge(m, src)
}
func (m *AnytimeMaintenanceWindow) XXX_Size() int {
	return xxx_messageInfo_AnytimeMaintenanceWindow.Size(m)
}
func (m *AnytimeMaintenanceWindow) XXX_DiscardUnknown() {
	xxx_messageInfo_AnytimeMaintenanceWindow.DiscardUnknown(m)
}

var xxx_messageInfo_AnytimeMaintenanceWindow proto.InternalMessageInfo

type DailyMaintenanceWindow struct {
	// Window start time, in the UTC timezone.
	StartTime *timeofday.TimeOfDay `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Window duration.
	Duration             *duration.Duration `protobuf:"bytes,2,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DailyMaintenanceWindow) Reset()         { *m = DailyMaintenanceWindow{} }
func (m *DailyMaintenanceWindow) String() string { return proto.CompactTextString(m) }
func (*DailyMaintenanceWindow) ProtoMessage()    {}
func (*DailyMaintenanceWindow) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed0cf6b897b3d063, []int{2}
}

func (m *DailyMaintenanceWindow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DailyMaintenanceWindow.Unmarshal(m, b)
}
func (m *DailyMaintenanceWindow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DailyMaintenanceWindow.Marshal(b, m, deterministic)
}
func (m *DailyMaintenanceWindow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DailyMaintenanceWindow.Merge(m, src)
}
func (m *DailyMaintenanceWindow) XXX_Size() int {
	return xxx_messageInfo_DailyMaintenanceWindow.Size(m)
}
func (m *DailyMaintenanceWindow) XXX_DiscardUnknown() {
	xxx_messageInfo_DailyMaintenanceWindow.DiscardUnknown(m)
}

var xxx_messageInfo_DailyMaintenanceWindow proto.InternalMessageInfo

func (m *DailyMaintenanceWindow) GetStartTime() *timeofday.TimeOfDay {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *DailyMaintenanceWindow) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type DaysOfWeekMaintenanceWindow struct {
	// Days of the week when automatic updates are allowed.
	Days []dayofweek.DayOfWeek `protobuf:"varint,1,rep,packed,name=days,proto3,enum=google.type.DayOfWeek" json:"days,omitempty"`
	// Window start time, in the UTC timezone.
	StartTime *timeofday.TimeOfDay `protobuf:"bytes,2,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	// Window duration.
	Duration             *duration.Duration `protobuf:"bytes,3,opt,name=duration,proto3" json:"duration,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *DaysOfWeekMaintenanceWindow) Reset()         { *m = DaysOfWeekMaintenanceWindow{} }
func (m *DaysOfWeekMaintenanceWindow) String() string { return proto.CompactTextString(m) }
func (*DaysOfWeekMaintenanceWindow) ProtoMessage()    {}
func (*DaysOfWeekMaintenanceWindow) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed0cf6b897b3d063, []int{3}
}

func (m *DaysOfWeekMaintenanceWindow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DaysOfWeekMaintenanceWindow.Unmarshal(m, b)
}
func (m *DaysOfWeekMaintenanceWindow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DaysOfWeekMaintenanceWindow.Marshal(b, m, deterministic)
}
func (m *DaysOfWeekMaintenanceWindow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DaysOfWeekMaintenanceWindow.Merge(m, src)
}
func (m *DaysOfWeekMaintenanceWindow) XXX_Size() int {
	return xxx_messageInfo_DaysOfWeekMaintenanceWindow.Size(m)
}
func (m *DaysOfWeekMaintenanceWindow) XXX_DiscardUnknown() {
	xxx_messageInfo_DaysOfWeekMaintenanceWindow.DiscardUnknown(m)
}

var xxx_messageInfo_DaysOfWeekMaintenanceWindow proto.InternalMessageInfo

func (m *DaysOfWeekMaintenanceWindow) GetDays() []dayofweek.DayOfWeek {
	if m != nil {
		return m.Days
	}
	return nil
}

func (m *DaysOfWeekMaintenanceWindow) GetStartTime() *timeofday.TimeOfDay {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *DaysOfWeekMaintenanceWindow) GetDuration() *duration.Duration {
	if m != nil {
		return m.Duration
	}
	return nil
}

type WeeklyMaintenanceWindow struct {
	// Days of the week and the maintenance window for these days when automatic updates are allowed.
	DaysOfWeek           []*DaysOfWeekMaintenanceWindow `protobuf:"bytes,1,rep,name=days_of_week,json=daysOfWeek,proto3" json:"days_of_week,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *WeeklyMaintenanceWindow) Reset()         { *m = WeeklyMaintenanceWindow{} }
func (m *WeeklyMaintenanceWindow) String() string { return proto.CompactTextString(m) }
func (*WeeklyMaintenanceWindow) ProtoMessage()    {}
func (*WeeklyMaintenanceWindow) Descriptor() ([]byte, []int) {
	return fileDescriptor_ed0cf6b897b3d063, []int{4}
}

func (m *WeeklyMaintenanceWindow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WeeklyMaintenanceWindow.Unmarshal(m, b)
}
func (m *WeeklyMaintenanceWindow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WeeklyMaintenanceWindow.Marshal(b, m, deterministic)
}
func (m *WeeklyMaintenanceWindow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WeeklyMaintenanceWindow.Merge(m, src)
}
func (m *WeeklyMaintenanceWindow) XXX_Size() int {
	return xxx_messageInfo_WeeklyMaintenanceWindow.Size(m)
}
func (m *WeeklyMaintenanceWindow) XXX_DiscardUnknown() {
	xxx_messageInfo_WeeklyMaintenanceWindow.DiscardUnknown(m)
}

var xxx_messageInfo_WeeklyMaintenanceWindow proto.InternalMessageInfo

func (m *WeeklyMaintenanceWindow) GetDaysOfWeek() []*DaysOfWeekMaintenanceWindow {
	if m != nil {
		return m.DaysOfWeek
	}
	return nil
}

func init() {
	proto.RegisterType((*MaintenanceWindow)(nil), "yandex.cloud.k8s.v1.MaintenanceWindow")
	proto.RegisterType((*AnytimeMaintenanceWindow)(nil), "yandex.cloud.k8s.v1.AnytimeMaintenanceWindow")
	proto.RegisterType((*DailyMaintenanceWindow)(nil), "yandex.cloud.k8s.v1.DailyMaintenanceWindow")
	proto.RegisterType((*DaysOfWeekMaintenanceWindow)(nil), "yandex.cloud.k8s.v1.DaysOfWeekMaintenanceWindow")
	proto.RegisterType((*WeeklyMaintenanceWindow)(nil), "yandex.cloud.k8s.v1.WeeklyMaintenanceWindow")
}

func init() {
	proto.RegisterFile("yandex/cloud/k8s/v1/maintenance.proto", fileDescriptor_ed0cf6b897b3d063)
}

var fileDescriptor_ed0cf6b897b3d063 = []byte{
	// 484 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x54, 0x41, 0x6b, 0x13, 0x41,
	0x18, 0x75, 0x93, 0x90, 0xea, 0x57, 0x29, 0xb8, 0x42, 0xb2, 0x6d, 0x51, 0x4a, 0x40, 0x28, 0xe8,
	0xce, 0xb8, 0xa9, 0x60, 0x20, 0xa7, 0x2e, 0x7b, 0xd0, 0x83, 0x14, 0x82, 0x58, 0xd0, 0xc3, 0x32,
	0xc9, 0xcc, 0x6e, 0xc6, 0x6c, 0x76, 0x42, 0x76, 0x93, 0x38, 0x57, 0x7f, 0x85, 0x3f, 0x47, 0xf1,
	0x50, 0xcf, 0xfe, 0x0a, 0x7f, 0x83, 0xa7, 0x32, 0xb3, 0x9b, 0x36, 0x69, 0x67, 0x2f, 0x39, 0x26,
	0xef, 0xbd, 0xef, 0x7b, 0xef, 0x7d, 0x93, 0xc0, 0x0b, 0x49, 0x52, 0xca, 0xbe, 0xe1, 0x51, 0x22,
	0x16, 0x14, 0x4f, 0x7a, 0x19, 0x5e, 0x7a, 0x78, 0x4a, 0x78, 0x9a, 0xb3, 0x94, 0xa4, 0x23, 0x86,
	0x66, 0x73, 0x91, 0x0b, 0xfb, 0x69, 0x41, 0x43, 0x9a, 0x86, 0x26, 0xbd, 0x0c, 0x2d, 0xbd, 0xa3,
	0xe3, 0x58, 0x88, 0x38, 0x61, 0x38, 0x97, 0x33, 0x86, 0x29, 0x91, 0x22, 0x5a, 0x31, 0x36, 0x29,
	0x14, 0xdb, 0x60, 0xce, 0xa7, 0x4c, 0x44, 0x94, 0xc8, 0x12, 0x7c, 0x5e, 0x82, 0xfa, 0xd3, 0x70,
	0x11, 0x61, 0xba, 0x98, 0x93, 0x9c, 0x8b, 0xb4, 0xc4, 0x9f, 0x6d, 0xb9, 0x5a, 0x92, 0x84, 0xd3,
	0x0d, 0xb8, 0xf3, 0xbb, 0x06, 0x4f, 0x3e, 0xdc, 0x7a, 0xbc, 0xe4, 0x29, 0x15, 0x2b, 0xfb, 0x3d,
	0xec, 0x91, 0x54, 0xaa, 0x55, 0x8e, 0x75, 0x62, 0x9d, 0xee, 0x77, 0x5d, 0x64, 0x70, 0x8d, 0xce,
	0x0b, 0xce, 0x3d, 0xfd, 0xbb, 0x07, 0x83, 0xb5, 0xde, 0x8e, 0xc1, 0xa1, 0x84, 0x27, 0x32, 0xdc,
	0x68, 0x22, 0x5c, 0x69, 0x9a, 0x53, 0xd3, 0xb3, 0x5f, 0x1a, 0x67, 0x07, 0x4a, 0x64, 0x9a, 0xdc,
	0xa2, 0x46, 0xc4, 0xfe, 0x0a, 0x87, 0xaa, 0x33, 0xf3, 0xa6, 0xba, 0xde, 0xf4, 0xca, 0xb8, 0xe9,
	0x52, 0xab, 0x4c, 0xab, 0xda, 0x2b, 0x33, 0xe4, 0x1f, 0x40, 0x73, 0x26, 0x12, 0x3e, 0x92, 0x76,
	0xe3, 0xe7, 0x2f, 0xcf, 0xea, 0x1c, 0x81, 0x53, 0xd5, 0x45, 0xe7, 0x87, 0x05, 0x2d, 0x73, 0x18,
	0xbb, 0x0f, 0x90, 0xe5, 0x64, 0x9e, 0x87, 0x1b, 0x4d, 0xb7, 0x50, 0x71, 0x50, 0xa4, 0xae, 0x8d,
	0x3e, 0xf2, 0x29, 0xbb, 0x88, 0x02, 0x22, 0xfd, 0xc6, 0xbf, 0x2b, 0xcf, 0x1a, 0x3c, 0xd2, 0x7c,
	0xf5, 0xad, 0x7d, 0x0e, 0x0f, 0xd7, 0xa7, 0x2e, 0x8b, 0x3c, 0x5c, 0x4b, 0xd7, 0x6f, 0x01, 0x05,
	0x25, 0xc1, 0x87, 0xff, 0x57, 0x5e, 0xd3, 0x1b, 0xbb, 0xdd, 0x37, 0xe3, 0xc1, 0x8d, 0xac, 0xf3,
	0xd7, 0x82, 0xe3, 0x80, 0xc8, 0xec, 0x22, 0x52, 0x1d, 0xdc, 0xf7, 0x77, 0x06, 0x0d, 0x4a, 0x64,
	0xe6, 0x58, 0x27, 0xf5, 0xd3, 0x83, 0x3b, 0xce, 0x02, 0x22, 0x0b, 0x99, 0xbf, 0xf7, 0xfd, 0x8f,
	0x57, 0xf7, 0xdc, 0xb7, 0x03, 0x4d, 0xbe, 0x13, 0xaa, 0xb6, 0x7b, 0xa8, 0xfa, 0x6e, 0xa1, 0x96,
	0xd0, 0xae, 0xb8, 0xa8, 0xfd, 0x05, 0x1e, 0x2b, 0x8b, 0xa1, 0x88, 0x42, 0x75, 0x59, 0x9d, 0x6b,
	0xbf, 0xfb, 0xba, 0xe2, 0xfd, 0x55, 0xf6, 0x72, 0x9b, 0x18, 0xe8, 0x0d, 0xcb, 0xff, 0x04, 0xed,
	0xad, 0x39, 0x64, 0xc6, 0xcb, 0x59, 0x9f, 0xfb, 0x31, 0xcf, 0xc7, 0x8b, 0x21, 0x1a, 0x89, 0x29,
	0x2e, 0x38, 0x6e, 0xf1, 0x73, 0x8c, 0x85, 0x1b, 0xb3, 0x54, 0x27, 0xc3, 0x86, 0x7f, 0x8f, 0xfe,
	0xa4, 0x97, 0x0d, 0x9b, 0x1a, 0x3e, 0xbb, 0x0e, 0x00, 0x00, 0xff, 0xff, 0xe6, 0xab, 0x45, 0x99,
	0x5f, 0x04, 0x00, 0x00,
}
