// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/iot/devices/v1/registry_service.proto

package devices

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/yandex-cloud/go-genproto/yandex/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/validation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetRegistryRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetRegistryRequest) Reset()         { *m = GetRegistryRequest{} }
func (m *GetRegistryRequest) String() string { return proto.CompactTextString(m) }
func (*GetRegistryRequest) ProtoMessage()    {}
func (*GetRegistryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{0}
}

func (m *GetRegistryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetRegistryRequest.Unmarshal(m, b)
}
func (m *GetRegistryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetRegistryRequest.Marshal(b, m, deterministic)
}
func (m *GetRegistryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetRegistryRequest.Merge(m, src)
}
func (m *GetRegistryRequest) XXX_Size() int {
	return xxx_messageInfo_GetRegistryRequest.Size(m)
}
func (m *GetRegistryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetRegistryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetRegistryRequest proto.InternalMessageInfo

func (m *GetRegistryRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

type ListRegistriesRequest struct {
	FolderId             string   `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRegistriesRequest) Reset()         { *m = ListRegistriesRequest{} }
func (m *ListRegistriesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRegistriesRequest) ProtoMessage()    {}
func (*ListRegistriesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{1}
}

func (m *ListRegistriesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistriesRequest.Unmarshal(m, b)
}
func (m *ListRegistriesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistriesRequest.Marshal(b, m, deterministic)
}
func (m *ListRegistriesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistriesRequest.Merge(m, src)
}
func (m *ListRegistriesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRegistriesRequest.Size(m)
}
func (m *ListRegistriesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistriesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistriesRequest proto.InternalMessageInfo

func (m *ListRegistriesRequest) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *ListRegistriesRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRegistriesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListRegistriesResponse struct {
	Registries           []*Registry `protobuf:"bytes,1,rep,name=registries,proto3" json:"registries,omitempty"`
	NextPageToken        string      `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *ListRegistriesResponse) Reset()         { *m = ListRegistriesResponse{} }
func (m *ListRegistriesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRegistriesResponse) ProtoMessage()    {}
func (*ListRegistriesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{2}
}

func (m *ListRegistriesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistriesResponse.Unmarshal(m, b)
}
func (m *ListRegistriesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistriesResponse.Marshal(b, m, deterministic)
}
func (m *ListRegistriesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistriesResponse.Merge(m, src)
}
func (m *ListRegistriesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRegistriesResponse.Size(m)
}
func (m *ListRegistriesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistriesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistriesResponse proto.InternalMessageInfo

func (m *ListRegistriesResponse) GetRegistries() []*Registry {
	if m != nil {
		return m.Registries
	}
	return nil
}

func (m *ListRegistriesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateRegistryRequest struct {
	FolderId             string                               `protobuf:"bytes,1,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	Name                 string                               `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                               `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Labels               map[string]string                    `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Certificates         []*CreateRegistryRequest_Certificate `protobuf:"bytes,5,rep,name=certificates,proto3" json:"certificates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                             `json:"-"`
	XXX_unrecognized     []byte                               `json:"-"`
	XXX_sizecache        int32                                `json:"-"`
}

func (m *CreateRegistryRequest) Reset()         { *m = CreateRegistryRequest{} }
func (m *CreateRegistryRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRegistryRequest) ProtoMessage()    {}
func (*CreateRegistryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{3}
}

func (m *CreateRegistryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRegistryRequest.Unmarshal(m, b)
}
func (m *CreateRegistryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRegistryRequest.Marshal(b, m, deterministic)
}
func (m *CreateRegistryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRegistryRequest.Merge(m, src)
}
func (m *CreateRegistryRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRegistryRequest.Size(m)
}
func (m *CreateRegistryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRegistryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRegistryRequest proto.InternalMessageInfo

func (m *CreateRegistryRequest) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *CreateRegistryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRegistryRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateRegistryRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *CreateRegistryRequest) GetCertificates() []*CreateRegistryRequest_Certificate {
	if m != nil {
		return m.Certificates
	}
	return nil
}

type CreateRegistryRequest_Certificate struct {
	CertificateData      string   `protobuf:"bytes,1,opt,name=certificate_data,json=certificateData,proto3" json:"certificate_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRegistryRequest_Certificate) Reset()         { *m = CreateRegistryRequest_Certificate{} }
func (m *CreateRegistryRequest_Certificate) String() string { return proto.CompactTextString(m) }
func (*CreateRegistryRequest_Certificate) ProtoMessage()    {}
func (*CreateRegistryRequest_Certificate) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{3, 1}
}

func (m *CreateRegistryRequest_Certificate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRegistryRequest_Certificate.Unmarshal(m, b)
}
func (m *CreateRegistryRequest_Certificate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRegistryRequest_Certificate.Marshal(b, m, deterministic)
}
func (m *CreateRegistryRequest_Certificate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRegistryRequest_Certificate.Merge(m, src)
}
func (m *CreateRegistryRequest_Certificate) XXX_Size() int {
	return xxx_messageInfo_CreateRegistryRequest_Certificate.Size(m)
}
func (m *CreateRegistryRequest_Certificate) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRegistryRequest_Certificate.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRegistryRequest_Certificate proto.InternalMessageInfo

func (m *CreateRegistryRequest_Certificate) GetCertificateData() string {
	if m != nil {
		return m.CertificateData
	}
	return ""
}

type CreateRegistryMetadata struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRegistryMetadata) Reset()         { *m = CreateRegistryMetadata{} }
func (m *CreateRegistryMetadata) String() string { return proto.CompactTextString(m) }
func (*CreateRegistryMetadata) ProtoMessage()    {}
func (*CreateRegistryMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{4}
}

func (m *CreateRegistryMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRegistryMetadata.Unmarshal(m, b)
}
func (m *CreateRegistryMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRegistryMetadata.Marshal(b, m, deterministic)
}
func (m *CreateRegistryMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRegistryMetadata.Merge(m, src)
}
func (m *CreateRegistryMetadata) XXX_Size() int {
	return xxx_messageInfo_CreateRegistryMetadata.Size(m)
}
func (m *CreateRegistryMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRegistryMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRegistryMetadata proto.InternalMessageInfo

func (m *CreateRegistryMetadata) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

type UpdateRegistryRequest struct {
	RegistryId           string                `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	UpdateMask           *field_mask.FieldMask `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	Name                 string                `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Labels               map[string]string     `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *UpdateRegistryRequest) Reset()         { *m = UpdateRegistryRequest{} }
func (m *UpdateRegistryRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateRegistryRequest) ProtoMessage()    {}
func (*UpdateRegistryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{5}
}

func (m *UpdateRegistryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRegistryRequest.Unmarshal(m, b)
}
func (m *UpdateRegistryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRegistryRequest.Marshal(b, m, deterministic)
}
func (m *UpdateRegistryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRegistryRequest.Merge(m, src)
}
func (m *UpdateRegistryRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateRegistryRequest.Size(m)
}
func (m *UpdateRegistryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRegistryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRegistryRequest proto.InternalMessageInfo

func (m *UpdateRegistryRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *UpdateRegistryRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func (m *UpdateRegistryRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateRegistryRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateRegistryRequest) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

type UpdateRegistryMetadata struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateRegistryMetadata) Reset()         { *m = UpdateRegistryMetadata{} }
func (m *UpdateRegistryMetadata) String() string { return proto.CompactTextString(m) }
func (*UpdateRegistryMetadata) ProtoMessage()    {}
func (*UpdateRegistryMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{6}
}

func (m *UpdateRegistryMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateRegistryMetadata.Unmarshal(m, b)
}
func (m *UpdateRegistryMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateRegistryMetadata.Marshal(b, m, deterministic)
}
func (m *UpdateRegistryMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateRegistryMetadata.Merge(m, src)
}
func (m *UpdateRegistryMetadata) XXX_Size() int {
	return xxx_messageInfo_UpdateRegistryMetadata.Size(m)
}
func (m *UpdateRegistryMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateRegistryMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateRegistryMetadata proto.InternalMessageInfo

func (m *UpdateRegistryMetadata) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

type DeleteRegistryRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRegistryRequest) Reset()         { *m = DeleteRegistryRequest{} }
func (m *DeleteRegistryRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRegistryRequest) ProtoMessage()    {}
func (*DeleteRegistryRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{7}
}

func (m *DeleteRegistryRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRegistryRequest.Unmarshal(m, b)
}
func (m *DeleteRegistryRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRegistryRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRegistryRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRegistryRequest.Merge(m, src)
}
func (m *DeleteRegistryRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRegistryRequest.Size(m)
}
func (m *DeleteRegistryRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRegistryRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRegistryRequest proto.InternalMessageInfo

func (m *DeleteRegistryRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

type DeleteRegistryMetadata struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRegistryMetadata) Reset()         { *m = DeleteRegistryMetadata{} }
func (m *DeleteRegistryMetadata) String() string { return proto.CompactTextString(m) }
func (*DeleteRegistryMetadata) ProtoMessage()    {}
func (*DeleteRegistryMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{8}
}

func (m *DeleteRegistryMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRegistryMetadata.Unmarshal(m, b)
}
func (m *DeleteRegistryMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRegistryMetadata.Marshal(b, m, deterministic)
}
func (m *DeleteRegistryMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRegistryMetadata.Merge(m, src)
}
func (m *DeleteRegistryMetadata) XXX_Size() int {
	return xxx_messageInfo_DeleteRegistryMetadata.Size(m)
}
func (m *DeleteRegistryMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRegistryMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRegistryMetadata proto.InternalMessageInfo

func (m *DeleteRegistryMetadata) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

type ListRegistryCertificatesRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRegistryCertificatesRequest) Reset()         { *m = ListRegistryCertificatesRequest{} }
func (m *ListRegistryCertificatesRequest) String() string { return proto.CompactTextString(m) }
func (*ListRegistryCertificatesRequest) ProtoMessage()    {}
func (*ListRegistryCertificatesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{9}
}

func (m *ListRegistryCertificatesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistryCertificatesRequest.Unmarshal(m, b)
}
func (m *ListRegistryCertificatesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistryCertificatesRequest.Marshal(b, m, deterministic)
}
func (m *ListRegistryCertificatesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistryCertificatesRequest.Merge(m, src)
}
func (m *ListRegistryCertificatesRequest) XXX_Size() int {
	return xxx_messageInfo_ListRegistryCertificatesRequest.Size(m)
}
func (m *ListRegistryCertificatesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistryCertificatesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistryCertificatesRequest proto.InternalMessageInfo

func (m *ListRegistryCertificatesRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

type ListRegistryCertificatesResponse struct {
	Certificates         []*RegistryCertificate `protobuf:"bytes,1,rep,name=certificates,proto3" json:"certificates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListRegistryCertificatesResponse) Reset()         { *m = ListRegistryCertificatesResponse{} }
func (m *ListRegistryCertificatesResponse) String() string { return proto.CompactTextString(m) }
func (*ListRegistryCertificatesResponse) ProtoMessage()    {}
func (*ListRegistryCertificatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{10}
}

func (m *ListRegistryCertificatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistryCertificatesResponse.Unmarshal(m, b)
}
func (m *ListRegistryCertificatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistryCertificatesResponse.Marshal(b, m, deterministic)
}
func (m *ListRegistryCertificatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistryCertificatesResponse.Merge(m, src)
}
func (m *ListRegistryCertificatesResponse) XXX_Size() int {
	return xxx_messageInfo_ListRegistryCertificatesResponse.Size(m)
}
func (m *ListRegistryCertificatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistryCertificatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistryCertificatesResponse proto.InternalMessageInfo

func (m *ListRegistryCertificatesResponse) GetCertificates() []*RegistryCertificate {
	if m != nil {
		return m.Certificates
	}
	return nil
}

type AddRegistryCertificateRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	CertificateData      string   `protobuf:"bytes,3,opt,name=certificate_data,json=certificateData,proto3" json:"certificate_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRegistryCertificateRequest) Reset()         { *m = AddRegistryCertificateRequest{} }
func (m *AddRegistryCertificateRequest) String() string { return proto.CompactTextString(m) }
func (*AddRegistryCertificateRequest) ProtoMessage()    {}
func (*AddRegistryCertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{11}
}

func (m *AddRegistryCertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRegistryCertificateRequest.Unmarshal(m, b)
}
func (m *AddRegistryCertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRegistryCertificateRequest.Marshal(b, m, deterministic)
}
func (m *AddRegistryCertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRegistryCertificateRequest.Merge(m, src)
}
func (m *AddRegistryCertificateRequest) XXX_Size() int {
	return xxx_messageInfo_AddRegistryCertificateRequest.Size(m)
}
func (m *AddRegistryCertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRegistryCertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_AddRegistryCertificateRequest proto.InternalMessageInfo

func (m *AddRegistryCertificateRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *AddRegistryCertificateRequest) GetCertificateData() string {
	if m != nil {
		return m.CertificateData
	}
	return ""
}

type AddRegistryCertificateMetadata struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	Fingerprint          string   `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *AddRegistryCertificateMetadata) Reset()         { *m = AddRegistryCertificateMetadata{} }
func (m *AddRegistryCertificateMetadata) String() string { return proto.CompactTextString(m) }
func (*AddRegistryCertificateMetadata) ProtoMessage()    {}
func (*AddRegistryCertificateMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{12}
}

func (m *AddRegistryCertificateMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddRegistryCertificateMetadata.Unmarshal(m, b)
}
func (m *AddRegistryCertificateMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddRegistryCertificateMetadata.Marshal(b, m, deterministic)
}
func (m *AddRegistryCertificateMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddRegistryCertificateMetadata.Merge(m, src)
}
func (m *AddRegistryCertificateMetadata) XXX_Size() int {
	return xxx_messageInfo_AddRegistryCertificateMetadata.Size(m)
}
func (m *AddRegistryCertificateMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_AddRegistryCertificateMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_AddRegistryCertificateMetadata proto.InternalMessageInfo

func (m *AddRegistryCertificateMetadata) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *AddRegistryCertificateMetadata) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type DeleteRegistryCertificateRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	Fingerprint          string   `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRegistryCertificateRequest) Reset()         { *m = DeleteRegistryCertificateRequest{} }
func (m *DeleteRegistryCertificateRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteRegistryCertificateRequest) ProtoMessage()    {}
func (*DeleteRegistryCertificateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{13}
}

func (m *DeleteRegistryCertificateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRegistryCertificateRequest.Unmarshal(m, b)
}
func (m *DeleteRegistryCertificateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRegistryCertificateRequest.Marshal(b, m, deterministic)
}
func (m *DeleteRegistryCertificateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRegistryCertificateRequest.Merge(m, src)
}
func (m *DeleteRegistryCertificateRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteRegistryCertificateRequest.Size(m)
}
func (m *DeleteRegistryCertificateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRegistryCertificateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRegistryCertificateRequest proto.InternalMessageInfo

func (m *DeleteRegistryCertificateRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *DeleteRegistryCertificateRequest) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type DeleteRegistryCertificateMetadata struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	Fingerprint          string   `protobuf:"bytes,2,opt,name=fingerprint,proto3" json:"fingerprint,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteRegistryCertificateMetadata) Reset()         { *m = DeleteRegistryCertificateMetadata{} }
func (m *DeleteRegistryCertificateMetadata) String() string { return proto.CompactTextString(m) }
func (*DeleteRegistryCertificateMetadata) ProtoMessage()    {}
func (*DeleteRegistryCertificateMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{14}
}

func (m *DeleteRegistryCertificateMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteRegistryCertificateMetadata.Unmarshal(m, b)
}
func (m *DeleteRegistryCertificateMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteRegistryCertificateMetadata.Marshal(b, m, deterministic)
}
func (m *DeleteRegistryCertificateMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteRegistryCertificateMetadata.Merge(m, src)
}
func (m *DeleteRegistryCertificateMetadata) XXX_Size() int {
	return xxx_messageInfo_DeleteRegistryCertificateMetadata.Size(m)
}
func (m *DeleteRegistryCertificateMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteRegistryCertificateMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteRegistryCertificateMetadata proto.InternalMessageInfo

func (m *DeleteRegistryCertificateMetadata) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *DeleteRegistryCertificateMetadata) GetFingerprint() string {
	if m != nil {
		return m.Fingerprint
	}
	return ""
}

type ListDeviceTopicAliasesRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDeviceTopicAliasesRequest) Reset()         { *m = ListDeviceTopicAliasesRequest{} }
func (m *ListDeviceTopicAliasesRequest) String() string { return proto.CompactTextString(m) }
func (*ListDeviceTopicAliasesRequest) ProtoMessage()    {}
func (*ListDeviceTopicAliasesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{15}
}

func (m *ListDeviceTopicAliasesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceTopicAliasesRequest.Unmarshal(m, b)
}
func (m *ListDeviceTopicAliasesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceTopicAliasesRequest.Marshal(b, m, deterministic)
}
func (m *ListDeviceTopicAliasesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceTopicAliasesRequest.Merge(m, src)
}
func (m *ListDeviceTopicAliasesRequest) XXX_Size() int {
	return xxx_messageInfo_ListDeviceTopicAliasesRequest.Size(m)
}
func (m *ListDeviceTopicAliasesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceTopicAliasesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceTopicAliasesRequest proto.InternalMessageInfo

func (m *ListDeviceTopicAliasesRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *ListDeviceTopicAliasesRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDeviceTopicAliasesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListDeviceTopicAliasesResponse struct {
	Aliases              []*DeviceAlias `protobuf:"bytes,1,rep,name=aliases,proto3" json:"aliases,omitempty"`
	NextPageToken        string         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ListDeviceTopicAliasesResponse) Reset()         { *m = ListDeviceTopicAliasesResponse{} }
func (m *ListDeviceTopicAliasesResponse) String() string { return proto.CompactTextString(m) }
func (*ListDeviceTopicAliasesResponse) ProtoMessage()    {}
func (*ListDeviceTopicAliasesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{16}
}

func (m *ListDeviceTopicAliasesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDeviceTopicAliasesResponse.Unmarshal(m, b)
}
func (m *ListDeviceTopicAliasesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDeviceTopicAliasesResponse.Marshal(b, m, deterministic)
}
func (m *ListDeviceTopicAliasesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDeviceTopicAliasesResponse.Merge(m, src)
}
func (m *ListDeviceTopicAliasesResponse) XXX_Size() int {
	return xxx_messageInfo_ListDeviceTopicAliasesResponse.Size(m)
}
func (m *ListDeviceTopicAliasesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDeviceTopicAliasesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDeviceTopicAliasesResponse proto.InternalMessageInfo

func (m *ListDeviceTopicAliasesResponse) GetAliases() []*DeviceAlias {
	if m != nil {
		return m.Aliases
	}
	return nil
}

func (m *ListDeviceTopicAliasesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type ListRegistryOperationsRequest struct {
	RegistryId           string   `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3" json:"registry_id,omitempty"`
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter               string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListRegistryOperationsRequest) Reset()         { *m = ListRegistryOperationsRequest{} }
func (m *ListRegistryOperationsRequest) String() string { return proto.CompactTextString(m) }
func (*ListRegistryOperationsRequest) ProtoMessage()    {}
func (*ListRegistryOperationsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{17}
}

func (m *ListRegistryOperationsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistryOperationsRequest.Unmarshal(m, b)
}
func (m *ListRegistryOperationsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistryOperationsRequest.Marshal(b, m, deterministic)
}
func (m *ListRegistryOperationsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistryOperationsRequest.Merge(m, src)
}
func (m *ListRegistryOperationsRequest) XXX_Size() int {
	return xxx_messageInfo_ListRegistryOperationsRequest.Size(m)
}
func (m *ListRegistryOperationsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistryOperationsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistryOperationsRequest proto.InternalMessageInfo

func (m *ListRegistryOperationsRequest) GetRegistryId() string {
	if m != nil {
		return m.RegistryId
	}
	return ""
}

func (m *ListRegistryOperationsRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListRegistryOperationsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListRegistryOperationsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

type ListRegistryOperationsResponse struct {
	Operations           []*operation.Operation `protobuf:"bytes,1,rep,name=operations,proto3" json:"operations,omitempty"`
	NextPageToken        string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *ListRegistryOperationsResponse) Reset()         { *m = ListRegistryOperationsResponse{} }
func (m *ListRegistryOperationsResponse) String() string { return proto.CompactTextString(m) }
func (*ListRegistryOperationsResponse) ProtoMessage()    {}
func (*ListRegistryOperationsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_481ff402e1676179, []int{18}
}

func (m *ListRegistryOperationsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListRegistryOperationsResponse.Unmarshal(m, b)
}
func (m *ListRegistryOperationsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListRegistryOperationsResponse.Marshal(b, m, deterministic)
}
func (m *ListRegistryOperationsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListRegistryOperationsResponse.Merge(m, src)
}
func (m *ListRegistryOperationsResponse) XXX_Size() int {
	return xxx_messageInfo_ListRegistryOperationsResponse.Size(m)
}
func (m *ListRegistryOperationsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListRegistryOperationsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListRegistryOperationsResponse proto.InternalMessageInfo

func (m *ListRegistryOperationsResponse) GetOperations() []*operation.Operation {
	if m != nil {
		return m.Operations
	}
	return nil
}

func (m *ListRegistryOperationsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*GetRegistryRequest)(nil), "yandex.cloud.iot.devices.v1.GetRegistryRequest")
	proto.RegisterType((*ListRegistriesRequest)(nil), "yandex.cloud.iot.devices.v1.ListRegistriesRequest")
	proto.RegisterType((*ListRegistriesResponse)(nil), "yandex.cloud.iot.devices.v1.ListRegistriesResponse")
	proto.RegisterType((*CreateRegistryRequest)(nil), "yandex.cloud.iot.devices.v1.CreateRegistryRequest")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.iot.devices.v1.CreateRegistryRequest.LabelsEntry")
	proto.RegisterType((*CreateRegistryRequest_Certificate)(nil), "yandex.cloud.iot.devices.v1.CreateRegistryRequest.Certificate")
	proto.RegisterType((*CreateRegistryMetadata)(nil), "yandex.cloud.iot.devices.v1.CreateRegistryMetadata")
	proto.RegisterType((*UpdateRegistryRequest)(nil), "yandex.cloud.iot.devices.v1.UpdateRegistryRequest")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.iot.devices.v1.UpdateRegistryRequest.LabelsEntry")
	proto.RegisterType((*UpdateRegistryMetadata)(nil), "yandex.cloud.iot.devices.v1.UpdateRegistryMetadata")
	proto.RegisterType((*DeleteRegistryRequest)(nil), "yandex.cloud.iot.devices.v1.DeleteRegistryRequest")
	proto.RegisterType((*DeleteRegistryMetadata)(nil), "yandex.cloud.iot.devices.v1.DeleteRegistryMetadata")
	proto.RegisterType((*ListRegistryCertificatesRequest)(nil), "yandex.cloud.iot.devices.v1.ListRegistryCertificatesRequest")
	proto.RegisterType((*ListRegistryCertificatesResponse)(nil), "yandex.cloud.iot.devices.v1.ListRegistryCertificatesResponse")
	proto.RegisterType((*AddRegistryCertificateRequest)(nil), "yandex.cloud.iot.devices.v1.AddRegistryCertificateRequest")
	proto.RegisterType((*AddRegistryCertificateMetadata)(nil), "yandex.cloud.iot.devices.v1.AddRegistryCertificateMetadata")
	proto.RegisterType((*DeleteRegistryCertificateRequest)(nil), "yandex.cloud.iot.devices.v1.DeleteRegistryCertificateRequest")
	proto.RegisterType((*DeleteRegistryCertificateMetadata)(nil), "yandex.cloud.iot.devices.v1.DeleteRegistryCertificateMetadata")
	proto.RegisterType((*ListDeviceTopicAliasesRequest)(nil), "yandex.cloud.iot.devices.v1.ListDeviceTopicAliasesRequest")
	proto.RegisterType((*ListDeviceTopicAliasesResponse)(nil), "yandex.cloud.iot.devices.v1.ListDeviceTopicAliasesResponse")
	proto.RegisterType((*ListRegistryOperationsRequest)(nil), "yandex.cloud.iot.devices.v1.ListRegistryOperationsRequest")
	proto.RegisterType((*ListRegistryOperationsResponse)(nil), "yandex.cloud.iot.devices.v1.ListRegistryOperationsResponse")
}

func init() {
	proto.RegisterFile("yandex/cloud/iot/devices/v1/registry_service.proto", fileDescriptor_481ff402e1676179)
}

var fileDescriptor_481ff402e1676179 = []byte{
	// 1322 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x58, 0x3d, 0x6c, 0xdb, 0xc6,
	0x17, 0x07, 0x23, 0x45, 0xff, 0xe8, 0x29, 0xff, 0xd8, 0xbd, 0xd6, 0x81, 0xc0, 0xe6, 0x43, 0x21,
	0x90, 0x54, 0x61, 0xc1, 0x2f, 0xb9, 0x4e, 0x62, 0x3b, 0x6e, 0x20, 0xe5, 0xc3, 0x08, 0x9a, 0xa0,
	0x01, 0x93, 0x0e, 0x4d, 0x10, 0x08, 0xb4, 0x78, 0x52, 0x0f, 0xa6, 0x49, 0x95, 0xa4, 0x0c, 0xcb,
	0x41, 0x87, 0x7a, 0x29, 0xe0, 0x16, 0xe8, 0x10, 0xb4, 0x9d, 0xbb, 0x77, 0x32, 0xd0, 0xa5, 0x40,
	0xb7, 0xb6, 0xf6, 0xd4, 0xc1, 0xdd, 0x3a, 0x77, 0x28, 0x3a, 0x7a, 0xec, 0x54, 0xf0, 0x8e, 0x92,
	0x49, 0x9b, 0x92, 0x68, 0x19, 0xde, 0xa8, 0xbb, 0xf7, 0x1e, 0x7f, 0xef, 0xbd, 0xdf, 0xbb, 0xfb,
	0x51, 0x50, 0xe9, 0x1a, 0xb6, 0x89, 0xd7, 0x94, 0x86, 0xe5, 0x74, 0x4c, 0x85, 0x38, 0xbe, 0x62,
	0xe2, 0x55, 0xd2, 0xc0, 0x9e, 0xb2, 0xaa, 0x29, 0x2e, 0x6e, 0x11, 0xcf, 0x77, 0xbb, 0x75, 0x0f,
	0xbb, 0xc1, 0xa2, 0xdc, 0x76, 0x1d, 0xdf, 0x41, 0x6f, 0x33, 0x1f, 0x99, 0xfa, 0xc8, 0xc4, 0xf1,
	0xe5, 0xd0, 0x47, 0x5e, 0xd5, 0xf8, 0x0b, 0x2d, 0xc7, 0x69, 0x59, 0x58, 0x31, 0xda, 0x44, 0x31,
	0x6c, 0xdb, 0xf1, 0x0d, 0x9f, 0x38, 0xb6, 0xc7, 0x5c, 0xf9, 0x52, 0xb8, 0x4b, 0x7f, 0x2d, 0x75,
	0x9a, 0x4a, 0x93, 0x60, 0xcb, 0xac, 0xaf, 0x18, 0xde, 0x72, 0x68, 0x71, 0x31, 0x06, 0x68, 0xd5,
	0xb0, 0x88, 0x49, 0x23, 0x84, 0xdb, 0x7c, 0xb8, 0x1d, 0x84, 0x77, 0xda, 0xd8, 0x8d, 0xee, 0x5d,
	0x8b, 0xb9, 0xf6, 0x77, 0x0f, 0xd9, 0x89, 0x69, 0x72, 0x66, 0xb6, 0xc2, 0x5d, 0x40, 0x8b, 0xd8,
	0xd7, 0xc3, 0x45, 0x1d, 0x7f, 0xda, 0xc1, 0x9e, 0x8f, 0x24, 0x28, 0xf4, 0x6b, 0x43, 0xcc, 0x22,
	0x57, 0xe2, 0xca, 0xf9, 0xda, 0xd9, 0xbf, 0xb7, 0x35, 0x6e, 0x73, 0x47, 0xcb, 0xde, 0x5e, 0x98,
	0x51, 0x75, 0xe8, 0x19, 0x3c, 0x34, 0x85, 0x6f, 0x38, 0x98, 0x7a, 0x44, 0xbc, 0x5e, 0x18, 0x82,
	0xbd, 0x5e, 0xa0, 0xeb, 0x90, 0x6f, 0x3a, 0x96, 0x89, 0xdd, 0x41, 0x61, 0xce, 0xb0, 0xed, 0x87,
	0x26, 0x7a, 0x07, 0xf2, 0x6d, 0xa3, 0x85, 0xeb, 0x1e, 0x59, 0xc7, 0xc5, 0x53, 0x25, 0xae, 0x9c,
	0xa9, 0xc1, 0xbf, 0xdb, 0x5a, 0x4e, 0x95, 0x34, 0x55, 0x55, 0xf5, 0x33, 0xc1, 0xe6, 0x53, 0xb2,
	0x8e, 0x51, 0x19, 0x80, 0x1a, 0xfa, 0xce, 0x32, 0xb6, 0x8b, 0x19, 0x1a, 0x34, 0xbf, 0xb9, 0xa3,
	0x9d, 0xbe, 0xbd, 0xa0, 0xa9, 0xaa, 0x4e, 0xa3, 0x3c, 0x0b, 0xf6, 0x84, 0x2f, 0x38, 0x38, 0x7f,
	0x10, 0x97, 0xd7, 0x76, 0x6c, 0x0f, 0xa3, 0xfb, 0xd0, 0x4b, 0x80, 0x60, 0xaf, 0xc8, 0x95, 0x32,
	0xe5, 0x42, 0xe5, 0xaa, 0x3c, 0xa4, 0xf1, 0x72, 0xbf, 0x46, 0x11, 0x47, 0x74, 0x0d, 0x26, 0x6c,
	0xbc, 0xe6, 0xd7, 0x23, 0x80, 0x02, 0xe8, 0x79, 0xfd, 0xff, 0xc1, 0xf2, 0x93, 0x3e, 0x92, 0x6f,
	0xb3, 0x30, 0x75, 0xd7, 0xc5, 0x86, 0x8f, 0x0f, 0x96, 0xfa, 0x08, 0x15, 0xaa, 0x40, 0xd6, 0x36,
	0x56, 0x58, 0x71, 0xf2, 0xb5, 0x4b, 0x81, 0xd5, 0xde, 0xb6, 0x76, 0xee, 0x85, 0x21, 0xad, 0x57,
	0xa5, 0xe7, 0xaa, 0x34, 0x5b, 0x97, 0x5e, 0x8a, 0x7d, 0x3f, 0x6a, 0x8b, 0xde, 0x85, 0x82, 0x89,
	0xbd, 0x86, 0x4b, 0xda, 0x01, 0x41, 0xe2, 0xd5, 0xaa, 0xcc, 0xdc, 0xd0, 0xa3, 0xbb, 0xe8, 0x3b,
	0x0e, 0x72, 0x96, 0xb1, 0x84, 0x2d, 0xaf, 0x98, 0xa5, 0x15, 0x79, 0x7f, 0x68, 0x45, 0x12, 0x13,
	0x92, 0x1f, 0xd1, 0x00, 0xf7, 0x6d, 0xdf, 0xed, 0xd6, 0xee, 0xec, 0x6d, 0x6b, 0x85, 0x17, 0x52,
	0x5d, 0x95, 0x66, 0x0d, 0x69, 0xfd, 0xa5, 0xb8, 0x41, 0xc1, 0xdd, 0x78, 0x8f, 0x81, 0xbc, 0x31,
	0xbd, 0xb5, 0xa3, 0xe5, 0xf8, 0xac, 0x26, 0xd1, 0x27, 0x84, 0x26, 0x83, 0x54, 0x5e, 0x46, 0xec,
	0xf5, 0x10, 0x0e, 0x5a, 0x82, 0xb3, 0x0d, 0xec, 0xfa, 0xa4, 0x49, 0x1a, 0x86, 0x8f, 0xbd, 0xe2,
	0xe9, 0xb1, 0xe1, 0xdd, 0xdd, 0x0f, 0xa3, 0xc7, 0x62, 0xf2, 0xb3, 0x50, 0x88, 0x60, 0x47, 0x93,
	0x90, 0x59, 0xc6, 0x5d, 0xd6, 0x12, 0x3d, 0x78, 0x44, 0x6f, 0xc1, 0xe9, 0x55, 0xc3, 0xea, 0x84,
	0x0d, 0xd0, 0xd9, 0x8f, 0xb9, 0x53, 0xb7, 0x38, 0xfe, 0x16, 0x14, 0x22, 0x71, 0xd1, 0x75, 0x98,
	0x8c, 0x44, 0xae, 0x9b, 0x86, 0x6f, 0x84, 0x71, 0x26, 0x22, 0xeb, 0xf7, 0x0c, 0xdf, 0x10, 0x66,
	0xe1, 0x7c, 0x1c, 0xe7, 0x63, 0xec, 0x1b, 0x81, 0x03, 0xba, 0x9c, 0x30, 0x83, 0xb1, 0xa9, 0xfb,
	0x31, 0x03, 0x53, 0x1f, 0xb5, 0xcd, 0x04, 0x4e, 0x1d, 0x6d, 0x7c, 0xd1, 0x3c, 0x14, 0x3a, 0x34,
	0x0e, 0x3d, 0xa7, 0x68, 0x76, 0x85, 0x0a, 0x2f, 0xb3, 0xa3, 0x4c, 0xee, 0x1d, 0x65, 0xf2, 0x83,
	0xe0, 0x28, 0x7b, 0x6c, 0x78, 0xcb, 0x3a, 0x30, 0xf3, 0xe0, 0x19, 0xc9, 0x21, 0x29, 0x19, 0xb3,
	0xf8, 0xa3, 0x12, 0x32, 0x9b, 0x96, 0x90, 0x69, 0x3a, 0x9e, 0x58, 0x8d, 0x13, 0x21, 0xe4, 0x31,
	0xc8, 0x12, 0xb4, 0x3c, 0x0e, 0x34, 0x7d, 0xcb, 0x1f, 0xc0, 0xd4, 0x3d, 0x6c, 0xe1, 0xe3, 0x76,
	0x3c, 0x80, 0x10, 0x8f, 0x93, 0x1e, 0xc2, 0x13, 0xb8, 0x1c, 0x39, 0x52, 0xbb, 0x11, 0xda, 0x7b,
	0x63, 0x82, 0x59, 0x83, 0xd2, 0xe0, 0x88, 0xe1, 0x71, 0xfd, 0xec, 0xc0, 0xfc, 0xb3, 0x03, 0x5b,
	0x4d, 0x75, 0x60, 0x0f, 0x9c, 0x78, 0xa1, 0x0b, 0x17, 0xab, 0xa6, 0x99, 0x64, 0x37, 0xde, 0x20,
	0x25, 0xcd, 0x7d, 0x26, 0x79, 0xee, 0x1b, 0x70, 0x29, 0xf9, 0xd5, 0xa9, 0x3b, 0x81, 0x4a, 0x50,
	0x68, 0x12, 0xbb, 0x85, 0xdd, 0xb6, 0x4b, 0x6c, 0x3f, 0xe4, 0x59, 0x74, 0x49, 0xf8, 0x9c, 0x83,
	0x52, 0xbc, 0xcf, 0xc7, 0xcf, 0x51, 0x4e, 0x78, 0xeb, 0x01, 0xf3, 0x18, 0x86, 0x0d, 0x0e, 0xae,
	0x0c, 0xc4, 0xd0, 0x4f, 0xf6, 0x84, 0x41, 0x7c, 0xcf, 0xc1, 0xc5, 0x80, 0x63, 0xf7, 0x28, 0x3b,
	0x9e, 0x39, 0x6d, 0xd2, 0xa8, 0x5a, 0xc4, 0xf0, 0xc6, 0xe5, 0xec, 0x49, 0x88, 0x95, 0xaf, 0x38,
	0xb8, 0x34, 0x08, 0x63, 0x38, 0x05, 0x35, 0xf8, 0x9f, 0xc1, 0x96, 0xc2, 0x01, 0x28, 0x0f, 0x1d,
	0x00, 0x16, 0x89, 0x06, 0xd1, 0x7b, 0x8e, 0xa9, 0x15, 0xcb, 0xcf, 0x61, 0xc9, 0x7a, 0x5d, 0xfb,
	0xb0, 0x27, 0x32, 0xfb, 0x25, 0xbb, 0x9a, 0x54, 0xb2, 0x6c, 0x50, 0xb2, 0x13, 0x2e, 0x15, 0x12,
	0x20, 0xd7, 0x24, 0x96, 0x8f, 0xdd, 0xf0, 0xfa, 0x80, 0xcd, 0x1d, 0x2d, 0x47, 0xad, 0x54, 0x3d,
	0xdc, 0x11, 0xbe, 0x0c, 0xcb, 0x99, 0x84, 0x3f, 0x2c, 0x67, 0x15, 0xa0, 0x2f, 0x9d, 0x7b, 0x15,
	0xbd, 0x12, 0xaf, 0xe8, 0xbe, 0xb4, 0xee, 0xfb, 0xeb, 0x11, 0xa7, 0xb4, 0xd5, 0xac, 0xfc, 0x3a,
	0x01, 0x13, 0x3d, 0x24, 0x4f, 0xd9, 0xc7, 0x06, 0xfa, 0x9a, 0x83, 0xcc, 0x22, 0xf6, 0x91, 0x32,
	0xb4, 0x89, 0x87, 0xd5, 0x39, 0x9f, 0x4e, 0xa7, 0x0a, 0xea, 0xc6, 0x1f, 0x7f, 0xbd, 0x3e, 0x25,
	0xa2, 0x72, 0xf0, 0x09, 0x20, 0x1d, 0xfe, 0x04, 0x20, 0xd8, 0x53, 0x5e, 0x45, 0x3a, 0xf8, 0x19,
	0x7a, 0xcd, 0x41, 0x36, 0xa8, 0x19, 0xaa, 0x0c, 0x7d, 0x43, 0xa2, 0xd4, 0xe7, 0xa7, 0x8f, 0xe4,
	0xc3, 0x5a, 0x20, 0x08, 0x14, 0xe3, 0x05, 0xc4, 0x0f, 0xc6, 0x88, 0x7e, 0xe0, 0x20, 0xc7, 0x34,
	0xd2, 0x08, 0x5c, 0x89, 0x82, 0x8f, 0x1f, 0xdd, 0x51, 0xe1, 0x83, 0xad, 0x5d, 0x51, 0x18, 0x28,
	0xc4, 0xce, 0xf4, 0x56, 0x28, 0xd6, 0xcb, 0xc2, 0x10, 0xac, 0x73, 0x9c, 0x88, 0x7e, 0xe2, 0x20,
	0xc7, 0xee, 0xf7, 0x11, 0x70, 0x13, 0xd5, 0x4a, 0x1a, 0xb8, 0x1f, 0x33, 0xb8, 0x03, 0x44, 0x44,
	0x1c, 0xae, 0x54, 0x49, 0xdd, 0xfe, 0x00, 0xfc, 0x2f, 0x1c, 0xe4, 0xd8, 0x69, 0x3d, 0x02, 0x7c,
	0xa2, 0x0c, 0x49, 0x03, 0xbe, 0xb1, 0xb5, 0x2b, 0x2a, 0x03, 0xe5, 0xc7, 0xd4, 0x41, 0xd1, 0x79,
	0x7f, 0xa5, 0xed, 0xb3, 0x4c, 0x44, 0x31, 0x3d, 0x91, 0x7f, 0xe7, 0x60, 0x32, 0x60, 0x5c, 0x54,
	0x4b, 0xa0, 0xdb, 0x69, 0x09, 0x9a, 0x24, 0x6a, 0xf8, 0x85, 0x31, 0xbd, 0x43, 0xa2, 0x2f, 0xd0,
	0x1c, 0x6e, 0xa2, 0x99, 0xb4, 0x39, 0x28, 0x51, 0xa5, 0x82, 0xfe, 0xe1, 0xe0, 0x5c, 0xd5, 0x34,
	0xa3, 0x1f, 0x19, 0x73, 0x43, 0x01, 0x0d, 0xd5, 0x35, 0x69, 0xfa, 0xd4, 0xdd, 0xda, 0x15, 0x67,
	0x46, 0x8a, 0x94, 0x37, 0x13, 0x36, 0x69, 0xa6, 0x73, 0xc2, 0x78, 0x99, 0x06, 0x24, 0xdc, 0xe3,
	0xe0, 0x0d, 0xc6, 0x8f, 0x68, 0xbe, 0x0b, 0x47, 0xe0, 0xe3, 0x78, 0x29, 0xbf, 0xda, 0xda, 0x15,
	0xe7, 0xd2, 0xa8, 0x95, 0x21, 0x2c, 0xbd, 0x29, 0x8e, 0xd9, 0xe1, 0x3f, 0xc3, 0xff, 0x2a, 0x0e,
	0x5f, 0xff, 0x23, 0x3a, 0x3d, 0x54, 0xd7, 0xf0, 0xf3, 0x63, 0xf9, 0x86, 0xa4, 0x5d, 0xa4, 0x29,
	0x55, 0xd1, 0x9d, 0xd4, 0x47, 0x88, 0x95, 0x9c, 0xc1, 0x6f, 0x1c, 0x9c, 0x0b, 0xde, 0xb5, 0x7f,
	0x09, 0xa7, 0x48, 0x6a, 0xa0, 0xf2, 0x48, 0x91, 0xd4, 0xe0, 0x5b, 0x5f, 0x98, 0xa7, 0x49, 0xcd,
	0xa0, 0xe9, 0xd4, 0x7d, 0xda, 0xbf, 0xef, 0x6b, 0x0f, 0x9f, 0x2f, 0xb6, 0x88, 0xff, 0x49, 0x67,
	0x49, 0x6e, 0x38, 0x2b, 0x0a, 0x43, 0x21, 0xb1, 0xff, 0xd9, 0x5a, 0x8e, 0xd4, 0xc2, 0x36, 0xa5,
	0x84, 0x32, 0xe4, 0x0f, 0xb8, 0xf9, 0xf0, 0x71, 0x29, 0x47, 0x4d, 0xa7, 0xff, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0x39, 0x48, 0xe1, 0x77, 0xa2, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RegistryServiceClient is the client API for RegistryService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RegistryServiceClient interface {
	Get(ctx context.Context, in *GetRegistryRequest, opts ...grpc.CallOption) (*Registry, error)
	List(ctx context.Context, in *ListRegistriesRequest, opts ...grpc.CallOption) (*ListRegistriesResponse, error)
	Create(ctx context.Context, in *CreateRegistryRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Update(ctx context.Context, in *UpdateRegistryRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Delete(ctx context.Context, in *DeleteRegistryRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ListCertificates(ctx context.Context, in *ListRegistryCertificatesRequest, opts ...grpc.CallOption) (*ListRegistryCertificatesResponse, error)
	AddCertificate(ctx context.Context, in *AddRegistryCertificateRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	DeleteCertificate(ctx context.Context, in *DeleteRegistryCertificateRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	ListDeviceTopicAliases(ctx context.Context, in *ListDeviceTopicAliasesRequest, opts ...grpc.CallOption) (*ListDeviceTopicAliasesResponse, error)
	ListOperations(ctx context.Context, in *ListRegistryOperationsRequest, opts ...grpc.CallOption) (*ListRegistryOperationsResponse, error)
}

type registryServiceClient struct {
	cc *grpc.ClientConn
}

func NewRegistryServiceClient(cc *grpc.ClientConn) RegistryServiceClient {
	return &registryServiceClient{cc}
}

func (c *registryServiceClient) Get(ctx context.Context, in *GetRegistryRequest, opts ...grpc.CallOption) (*Registry, error) {
	out := new(Registry)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) List(ctx context.Context, in *ListRegistriesRequest, opts ...grpc.CallOption) (*ListRegistriesResponse, error) {
	out := new(ListRegistriesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) Create(ctx context.Context, in *CreateRegistryRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) Update(ctx context.Context, in *UpdateRegistryRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) Delete(ctx context.Context, in *DeleteRegistryRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) ListCertificates(ctx context.Context, in *ListRegistryCertificatesRequest, opts ...grpc.CallOption) (*ListRegistryCertificatesResponse, error) {
	out := new(ListRegistryCertificatesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/ListCertificates", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) AddCertificate(ctx context.Context, in *AddRegistryCertificateRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/AddCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) DeleteCertificate(ctx context.Context, in *DeleteRegistryCertificateRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/DeleteCertificate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) ListDeviceTopicAliases(ctx context.Context, in *ListDeviceTopicAliasesRequest, opts ...grpc.CallOption) (*ListDeviceTopicAliasesResponse, error) {
	out := new(ListDeviceTopicAliasesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/ListDeviceTopicAliases", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *registryServiceClient) ListOperations(ctx context.Context, in *ListRegistryOperationsRequest, opts ...grpc.CallOption) (*ListRegistryOperationsResponse, error) {
	out := new(ListRegistryOperationsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.iot.devices.v1.RegistryService/ListOperations", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RegistryServiceServer is the server API for RegistryService service.
type RegistryServiceServer interface {
	Get(context.Context, *GetRegistryRequest) (*Registry, error)
	List(context.Context, *ListRegistriesRequest) (*ListRegistriesResponse, error)
	Create(context.Context, *CreateRegistryRequest) (*operation.Operation, error)
	Update(context.Context, *UpdateRegistryRequest) (*operation.Operation, error)
	Delete(context.Context, *DeleteRegistryRequest) (*operation.Operation, error)
	ListCertificates(context.Context, *ListRegistryCertificatesRequest) (*ListRegistryCertificatesResponse, error)
	AddCertificate(context.Context, *AddRegistryCertificateRequest) (*operation.Operation, error)
	DeleteCertificate(context.Context, *DeleteRegistryCertificateRequest) (*operation.Operation, error)
	ListDeviceTopicAliases(context.Context, *ListDeviceTopicAliasesRequest) (*ListDeviceTopicAliasesResponse, error)
	ListOperations(context.Context, *ListRegistryOperationsRequest) (*ListRegistryOperationsResponse, error)
}

// UnimplementedRegistryServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRegistryServiceServer struct {
}

func (*UnimplementedRegistryServiceServer) Get(ctx context.Context, req *GetRegistryRequest) (*Registry, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRegistryServiceServer) List(ctx context.Context, req *ListRegistriesRequest) (*ListRegistriesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedRegistryServiceServer) Create(ctx context.Context, req *CreateRegistryRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedRegistryServiceServer) Update(ctx context.Context, req *UpdateRegistryRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedRegistryServiceServer) Delete(ctx context.Context, req *DeleteRegistryRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedRegistryServiceServer) ListCertificates(ctx context.Context, req *ListRegistryCertificatesRequest) (*ListRegistryCertificatesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListCertificates not implemented")
}
func (*UnimplementedRegistryServiceServer) AddCertificate(ctx context.Context, req *AddRegistryCertificateRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCertificate not implemented")
}
func (*UnimplementedRegistryServiceServer) DeleteCertificate(ctx context.Context, req *DeleteRegistryCertificateRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCertificate not implemented")
}
func (*UnimplementedRegistryServiceServer) ListDeviceTopicAliases(ctx context.Context, req *ListDeviceTopicAliasesRequest) (*ListDeviceTopicAliasesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDeviceTopicAliases not implemented")
}
func (*UnimplementedRegistryServiceServer) ListOperations(ctx context.Context, req *ListRegistryOperationsRequest) (*ListRegistryOperationsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListOperations not implemented")
}

func RegisterRegistryServiceServer(s *grpc.Server, srv RegistryServiceServer) {
	s.RegisterService(&_RegistryService_serviceDesc, srv)
}

func _RegistryService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRegistryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).Get(ctx, req.(*GetRegistryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRegistriesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).List(ctx, req.(*ListRegistriesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRegistryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).Create(ctx, req.(*CreateRegistryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateRegistryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).Update(ctx, req.(*UpdateRegistryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRegistryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).Delete(ctx, req.(*DeleteRegistryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_ListCertificates_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRegistryCertificatesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).ListCertificates(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/ListCertificates",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).ListCertificates(ctx, req.(*ListRegistryCertificatesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_AddCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddRegistryCertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).AddCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/AddCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).AddCertificate(ctx, req.(*AddRegistryCertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_DeleteCertificate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteRegistryCertificateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).DeleteCertificate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/DeleteCertificate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).DeleteCertificate(ctx, req.(*DeleteRegistryCertificateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_ListDeviceTopicAliases_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDeviceTopicAliasesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).ListDeviceTopicAliases(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/ListDeviceTopicAliases",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).ListDeviceTopicAliases(ctx, req.(*ListDeviceTopicAliasesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _RegistryService_ListOperations_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRegistryOperationsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RegistryServiceServer).ListOperations(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.iot.devices.v1.RegistryService/ListOperations",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RegistryServiceServer).ListOperations(ctx, req.(*ListRegistryOperationsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RegistryService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.iot.devices.v1.RegistryService",
	HandlerType: (*RegistryServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _RegistryService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _RegistryService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _RegistryService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _RegistryService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _RegistryService_Delete_Handler,
		},
		{
			MethodName: "ListCertificates",
			Handler:    _RegistryService_ListCertificates_Handler,
		},
		{
			MethodName: "AddCertificate",
			Handler:    _RegistryService_AddCertificate_Handler,
		},
		{
			MethodName: "DeleteCertificate",
			Handler:    _RegistryService_DeleteCertificate_Handler,
		},
		{
			MethodName: "ListDeviceTopicAliases",
			Handler:    _RegistryService_ListDeviceTopicAliases_Handler,
		},
		{
			MethodName: "ListOperations",
			Handler:    _RegistryService_ListOperations_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/iot/devices/v1/registry_service.proto",
}
