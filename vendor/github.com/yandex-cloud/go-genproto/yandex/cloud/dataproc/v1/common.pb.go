// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/dataproc/v1/common.proto

package dataproc

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Health int32

const (
	// State of the cluster is unknown ([Host.health] for every host in the cluster is UNKNOWN).
	Health_HEALTH_UNKNOWN Health = 0
	// Cluster is alive and well ([Host.health] for every host in the cluster is ALIVE).
	Health_ALIVE Health = 1
	// Cluster is inoperable ([Host.health] for every host in the cluster is DEAD).
	Health_DEAD Health = 2
	// Cluster is working below capacity ([Host.health] for at least one host in the cluster is not ALIVE).
	Health_DEGRADED Health = 3
)

var Health_name = map[int32]string{
	0: "HEALTH_UNKNOWN",
	1: "ALIVE",
	2: "DEAD",
	3: "DEGRADED",
}

var Health_value = map[string]int32{
	"HEALTH_UNKNOWN": 0,
	"ALIVE":          1,
	"DEAD":           2,
	"DEGRADED":       3,
}

func (x Health) String() string {
	return proto.EnumName(Health_name, int32(x))
}

func (Health) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9d76f8f9214f9e4c, []int{0}
}

type Resources struct {
	// ID of the resource preset for computational resources available to a host (CPU, memory etc.).
	// All available presets are listed in the [documentation](/docs/data-proc/concepts/instance-types).
	ResourcePresetId string `protobuf:"bytes,1,opt,name=resource_preset_id,json=resourcePresetId,proto3" json:"resource_preset_id,omitempty"`
	// Type of the storage environment for the host.
	// Possible values:
	// * network-hdd — network HDD drive,
	// * network-ssd — network SSD drive.
	DiskTypeId string `protobuf:"bytes,2,opt,name=disk_type_id,json=diskTypeId,proto3" json:"disk_type_id,omitempty"`
	// Volume of the storage available to a host, in bytes.
	DiskSize             int64    `protobuf:"varint,3,opt,name=disk_size,json=diskSize,proto3" json:"disk_size,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Resources) Reset()         { *m = Resources{} }
func (m *Resources) String() string { return proto.CompactTextString(m) }
func (*Resources) ProtoMessage()    {}
func (*Resources) Descriptor() ([]byte, []int) {
	return fileDescriptor_9d76f8f9214f9e4c, []int{0}
}

func (m *Resources) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Resources.Unmarshal(m, b)
}
func (m *Resources) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Resources.Marshal(b, m, deterministic)
}
func (m *Resources) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Resources.Merge(m, src)
}
func (m *Resources) XXX_Size() int {
	return xxx_messageInfo_Resources.Size(m)
}
func (m *Resources) XXX_DiscardUnknown() {
	xxx_messageInfo_Resources.DiscardUnknown(m)
}

var xxx_messageInfo_Resources proto.InternalMessageInfo

func (m *Resources) GetResourcePresetId() string {
	if m != nil {
		return m.ResourcePresetId
	}
	return ""
}

func (m *Resources) GetDiskTypeId() string {
	if m != nil {
		return m.DiskTypeId
	}
	return ""
}

func (m *Resources) GetDiskSize() int64 {
	if m != nil {
		return m.DiskSize
	}
	return 0
}

func init() {
	proto.RegisterEnum("yandex.cloud.dataproc.v1.Health", Health_name, Health_value)
	proto.RegisterType((*Resources)(nil), "yandex.cloud.dataproc.v1.Resources")
}

func init() {
	proto.RegisterFile("yandex/cloud/dataproc/v1/common.proto", fileDescriptor_9d76f8f9214f9e4c)
}

var fileDescriptor_9d76f8f9214f9e4c = []byte{
	// 280 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0xd0, 0xc1, 0x4b, 0xf3, 0x30,
	0x18, 0x06, 0xf0, 0xaf, 0xdb, 0xe7, 0x58, 0x5f, 0x86, 0x94, 0x9c, 0x06, 0x7a, 0x18, 0x82, 0x30,
	0xc4, 0x35, 0x0c, 0x8f, 0x1e, 0xa4, 0xd2, 0xe0, 0x86, 0xa3, 0x4a, 0x9d, 0x0a, 0x5e, 0x4a, 0xd7,
	0xbc, 0x74, 0xc1, 0xb5, 0x09, 0x6d, 0x3a, 0xd6, 0xfd, 0xf5, 0xd2, 0xd4, 0x82, 0x1e, 0xbc, 0x25,
	0xef, 0xf3, 0xbb, 0x3c, 0x0f, 0x5c, 0xd6, 0x71, 0xce, 0xf1, 0x40, 0x93, 0x9d, 0xac, 0x38, 0xe5,
	0xb1, 0x8e, 0x55, 0x21, 0x13, 0xba, 0x9f, 0xd3, 0x44, 0x66, 0x99, 0xcc, 0x5d, 0x55, 0x48, 0x2d,
	0xc9, 0xb8, 0x65, 0xae, 0x61, 0x6e, 0xc7, 0xdc, 0xfd, 0xfc, 0xe2, 0x00, 0x76, 0x88, 0xa5, 0xac,
	0x8a, 0x04, 0x4b, 0x72, 0x0d, 0xa4, 0xf8, 0xfe, 0x44, 0xaa, 0xc0, 0x12, 0x75, 0x24, 0xf8, 0xd8,
	0x9a, 0x58, 0x53, 0x3b, 0x74, 0xba, 0xe4, 0xd9, 0x04, 0x4b, 0x4e, 0x26, 0x30, 0xe2, 0xa2, 0xfc,
	0x8c, 0x74, 0xad, 0xb0, 0x71, 0x3d, 0xe3, 0xa0, 0xb9, 0xad, 0x6b, 0x85, 0x4b, 0x4e, 0xce, 0xc0,
	0x36, 0xa2, 0x14, 0x47, 0x1c, 0xf7, 0x27, 0xd6, 0xb4, 0x1f, 0x0e, 0x9b, 0xc3, 0x8b, 0x38, 0xe2,
	0xd5, 0x1d, 0x0c, 0x16, 0x18, 0xef, 0xf4, 0x96, 0x10, 0x38, 0x5d, 0x30, 0x6f, 0xb5, 0x5e, 0x44,
	0xaf, 0xc1, 0x63, 0xf0, 0xf4, 0x1e, 0x38, 0xff, 0x88, 0x0d, 0x27, 0xde, 0x6a, 0xf9, 0xc6, 0x1c,
	0x8b, 0x0c, 0xe1, 0xbf, 0xcf, 0x3c, 0xdf, 0xe9, 0x91, 0x11, 0x0c, 0x7d, 0xf6, 0x10, 0x7a, 0x3e,
	0xf3, 0x9d, 0xfe, 0x3d, 0xc2, 0xf9, 0xaf, 0x5a, 0xb1, 0x12, 0x3f, 0xab, 0x7d, 0xb0, 0x54, 0xe8,
	0x6d, 0xb5, 0x71, 0x13, 0x99, 0xd1, 0x16, 0xce, 0xda, 0x99, 0x52, 0x39, 0x4b, 0x31, 0x37, 0xcb,
	0xd0, 0xbf, 0xf6, 0xbb, 0xed, 0xde, 0x9b, 0x81, 0x81, 0x37, 0x5f, 0x01, 0x00, 0x00, 0xff, 0xff,
	0x65, 0x56, 0x98, 0x80, 0x6b, 0x01, 0x00, 0x00,
}
