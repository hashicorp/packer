// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/ai/stt/v2/stt_service.proto

package stt

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	duration "github.com/golang/protobuf/ptypes/duration"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type RecognitionSpec_AudioEncoding int32

const (
	RecognitionSpec_AUDIO_ENCODING_UNSPECIFIED RecognitionSpec_AudioEncoding = 0
	// 16-bit signed little-endian (Linear PCM)
	RecognitionSpec_LINEAR16_PCM RecognitionSpec_AudioEncoding = 1
	RecognitionSpec_OGG_OPUS     RecognitionSpec_AudioEncoding = 2
)

var RecognitionSpec_AudioEncoding_name = map[int32]string{
	0: "AUDIO_ENCODING_UNSPECIFIED",
	1: "LINEAR16_PCM",
	2: "OGG_OPUS",
}

var RecognitionSpec_AudioEncoding_value = map[string]int32{
	"AUDIO_ENCODING_UNSPECIFIED": 0,
	"LINEAR16_PCM":               1,
	"OGG_OPUS":                   2,
}

func (x RecognitionSpec_AudioEncoding) String() string {
	return proto.EnumName(RecognitionSpec_AudioEncoding_name, int32(x))
}

func (RecognitionSpec_AudioEncoding) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{6, 0}
}

type LongRunningRecognitionRequest struct {
	Config               *RecognitionConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	Audio                *RecognitionAudio  `protobuf:"bytes,2,opt,name=audio,proto3" json:"audio,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *LongRunningRecognitionRequest) Reset()         { *m = LongRunningRecognitionRequest{} }
func (m *LongRunningRecognitionRequest) String() string { return proto.CompactTextString(m) }
func (*LongRunningRecognitionRequest) ProtoMessage()    {}
func (*LongRunningRecognitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{0}
}

func (m *LongRunningRecognitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LongRunningRecognitionRequest.Unmarshal(m, b)
}
func (m *LongRunningRecognitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LongRunningRecognitionRequest.Marshal(b, m, deterministic)
}
func (m *LongRunningRecognitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LongRunningRecognitionRequest.Merge(m, src)
}
func (m *LongRunningRecognitionRequest) XXX_Size() int {
	return xxx_messageInfo_LongRunningRecognitionRequest.Size(m)
}
func (m *LongRunningRecognitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LongRunningRecognitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LongRunningRecognitionRequest proto.InternalMessageInfo

func (m *LongRunningRecognitionRequest) GetConfig() *RecognitionConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func (m *LongRunningRecognitionRequest) GetAudio() *RecognitionAudio {
	if m != nil {
		return m.Audio
	}
	return nil
}

type LongRunningRecognitionResponse struct {
	Chunks               []*SpeechRecognitionResult `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *LongRunningRecognitionResponse) Reset()         { *m = LongRunningRecognitionResponse{} }
func (m *LongRunningRecognitionResponse) String() string { return proto.CompactTextString(m) }
func (*LongRunningRecognitionResponse) ProtoMessage()    {}
func (*LongRunningRecognitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{1}
}

func (m *LongRunningRecognitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LongRunningRecognitionResponse.Unmarshal(m, b)
}
func (m *LongRunningRecognitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LongRunningRecognitionResponse.Marshal(b, m, deterministic)
}
func (m *LongRunningRecognitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LongRunningRecognitionResponse.Merge(m, src)
}
func (m *LongRunningRecognitionResponse) XXX_Size() int {
	return xxx_messageInfo_LongRunningRecognitionResponse.Size(m)
}
func (m *LongRunningRecognitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_LongRunningRecognitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_LongRunningRecognitionResponse proto.InternalMessageInfo

func (m *LongRunningRecognitionResponse) GetChunks() []*SpeechRecognitionResult {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type StreamingRecognitionRequest struct {
	// Types that are valid to be assigned to StreamingRequest:
	//	*StreamingRecognitionRequest_Config
	//	*StreamingRecognitionRequest_AudioContent
	StreamingRequest     isStreamingRecognitionRequest_StreamingRequest `protobuf_oneof:"streaming_request"`
	XXX_NoUnkeyedLiteral struct{}                                       `json:"-"`
	XXX_unrecognized     []byte                                         `json:"-"`
	XXX_sizecache        int32                                          `json:"-"`
}

func (m *StreamingRecognitionRequest) Reset()         { *m = StreamingRecognitionRequest{} }
func (m *StreamingRecognitionRequest) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognitionRequest) ProtoMessage()    {}
func (*StreamingRecognitionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{2}
}

func (m *StreamingRecognitionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognitionRequest.Unmarshal(m, b)
}
func (m *StreamingRecognitionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognitionRequest.Marshal(b, m, deterministic)
}
func (m *StreamingRecognitionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognitionRequest.Merge(m, src)
}
func (m *StreamingRecognitionRequest) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognitionRequest.Size(m)
}
func (m *StreamingRecognitionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognitionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognitionRequest proto.InternalMessageInfo

type isStreamingRecognitionRequest_StreamingRequest interface {
	isStreamingRecognitionRequest_StreamingRequest()
}

type StreamingRecognitionRequest_Config struct {
	Config *RecognitionConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type StreamingRecognitionRequest_AudioContent struct {
	AudioContent []byte `protobuf:"bytes,2,opt,name=audio_content,json=audioContent,proto3,oneof"`
}

func (*StreamingRecognitionRequest_Config) isStreamingRecognitionRequest_StreamingRequest() {}

func (*StreamingRecognitionRequest_AudioContent) isStreamingRecognitionRequest_StreamingRequest() {}

func (m *StreamingRecognitionRequest) GetStreamingRequest() isStreamingRecognitionRequest_StreamingRequest {
	if m != nil {
		return m.StreamingRequest
	}
	return nil
}

func (m *StreamingRecognitionRequest) GetConfig() *RecognitionConfig {
	if x, ok := m.GetStreamingRequest().(*StreamingRecognitionRequest_Config); ok {
		return x.Config
	}
	return nil
}

func (m *StreamingRecognitionRequest) GetAudioContent() []byte {
	if x, ok := m.GetStreamingRequest().(*StreamingRecognitionRequest_AudioContent); ok {
		return x.AudioContent
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*StreamingRecognitionRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*StreamingRecognitionRequest_Config)(nil),
		(*StreamingRecognitionRequest_AudioContent)(nil),
	}
}

type StreamingRecognitionResponse struct {
	Chunks               []*SpeechRecognitionChunk `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *StreamingRecognitionResponse) Reset()         { *m = StreamingRecognitionResponse{} }
func (m *StreamingRecognitionResponse) String() string { return proto.CompactTextString(m) }
func (*StreamingRecognitionResponse) ProtoMessage()    {}
func (*StreamingRecognitionResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{3}
}

func (m *StreamingRecognitionResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StreamingRecognitionResponse.Unmarshal(m, b)
}
func (m *StreamingRecognitionResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StreamingRecognitionResponse.Marshal(b, m, deterministic)
}
func (m *StreamingRecognitionResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StreamingRecognitionResponse.Merge(m, src)
}
func (m *StreamingRecognitionResponse) XXX_Size() int {
	return xxx_messageInfo_StreamingRecognitionResponse.Size(m)
}
func (m *StreamingRecognitionResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_StreamingRecognitionResponse.DiscardUnknown(m)
}

var xxx_messageInfo_StreamingRecognitionResponse proto.InternalMessageInfo

func (m *StreamingRecognitionResponse) GetChunks() []*SpeechRecognitionChunk {
	if m != nil {
		return m.Chunks
	}
	return nil
}

type RecognitionAudio struct {
	// Types that are valid to be assigned to AudioSource:
	//	*RecognitionAudio_Content
	//	*RecognitionAudio_Uri
	AudioSource          isRecognitionAudio_AudioSource `protobuf_oneof:"audio_source"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *RecognitionAudio) Reset()         { *m = RecognitionAudio{} }
func (m *RecognitionAudio) String() string { return proto.CompactTextString(m) }
func (*RecognitionAudio) ProtoMessage()    {}
func (*RecognitionAudio) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{4}
}

func (m *RecognitionAudio) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognitionAudio.Unmarshal(m, b)
}
func (m *RecognitionAudio) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognitionAudio.Marshal(b, m, deterministic)
}
func (m *RecognitionAudio) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognitionAudio.Merge(m, src)
}
func (m *RecognitionAudio) XXX_Size() int {
	return xxx_messageInfo_RecognitionAudio.Size(m)
}
func (m *RecognitionAudio) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognitionAudio.DiscardUnknown(m)
}

var xxx_messageInfo_RecognitionAudio proto.InternalMessageInfo

type isRecognitionAudio_AudioSource interface {
	isRecognitionAudio_AudioSource()
}

type RecognitionAudio_Content struct {
	Content []byte `protobuf:"bytes,1,opt,name=content,proto3,oneof"`
}

type RecognitionAudio_Uri struct {
	Uri string `protobuf:"bytes,2,opt,name=uri,proto3,oneof"`
}

func (*RecognitionAudio_Content) isRecognitionAudio_AudioSource() {}

func (*RecognitionAudio_Uri) isRecognitionAudio_AudioSource() {}

func (m *RecognitionAudio) GetAudioSource() isRecognitionAudio_AudioSource {
	if m != nil {
		return m.AudioSource
	}
	return nil
}

func (m *RecognitionAudio) GetContent() []byte {
	if x, ok := m.GetAudioSource().(*RecognitionAudio_Content); ok {
		return x.Content
	}
	return nil
}

func (m *RecognitionAudio) GetUri() string {
	if x, ok := m.GetAudioSource().(*RecognitionAudio_Uri); ok {
		return x.Uri
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*RecognitionAudio) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*RecognitionAudio_Content)(nil),
		(*RecognitionAudio_Uri)(nil),
	}
}

type RecognitionConfig struct {
	Specification        *RecognitionSpec `protobuf:"bytes,1,opt,name=specification,proto3" json:"specification,omitempty"`
	FolderId             string           `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *RecognitionConfig) Reset()         { *m = RecognitionConfig{} }
func (m *RecognitionConfig) String() string { return proto.CompactTextString(m) }
func (*RecognitionConfig) ProtoMessage()    {}
func (*RecognitionConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{5}
}

func (m *RecognitionConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognitionConfig.Unmarshal(m, b)
}
func (m *RecognitionConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognitionConfig.Marshal(b, m, deterministic)
}
func (m *RecognitionConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognitionConfig.Merge(m, src)
}
func (m *RecognitionConfig) XXX_Size() int {
	return xxx_messageInfo_RecognitionConfig.Size(m)
}
func (m *RecognitionConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognitionConfig.DiscardUnknown(m)
}

var xxx_messageInfo_RecognitionConfig proto.InternalMessageInfo

func (m *RecognitionConfig) GetSpecification() *RecognitionSpec {
	if m != nil {
		return m.Specification
	}
	return nil
}

func (m *RecognitionConfig) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

type RecognitionSpec struct {
	AudioEncoding RecognitionSpec_AudioEncoding `protobuf:"varint,1,opt,name=audio_encoding,json=audioEncoding,proto3,enum=yandex.cloud.ai.stt.v2.RecognitionSpec_AudioEncoding" json:"audio_encoding,omitempty"`
	// 8000, 16000, 48000 only for pcm
	SampleRateHertz int64 `protobuf:"varint,2,opt,name=sample_rate_hertz,json=sampleRateHertz,proto3" json:"sample_rate_hertz,omitempty"`
	// code in BCP-47
	LanguageCode    string `protobuf:"bytes,3,opt,name=language_code,json=languageCode,proto3" json:"language_code,omitempty"`
	ProfanityFilter bool   `protobuf:"varint,4,opt,name=profanity_filter,json=profanityFilter,proto3" json:"profanity_filter,omitempty"`
	Model           string `protobuf:"bytes,5,opt,name=model,proto3" json:"model,omitempty"`
	// If set true, tentative hypotheses may be returned as they become available (final=false flag)
	// If false or omitted, only final=true result(s) are returned.
	// Makes sense only for StreamingRecognize requests.
	PartialResults  bool `protobuf:"varint,7,opt,name=partial_results,json=partialResults,proto3" json:"partial_results,omitempty"`
	SingleUtterance bool `protobuf:"varint,8,opt,name=single_utterance,json=singleUtterance,proto3" json:"single_utterance,omitempty"`
	// Used only for long running recognize.
	AudioChannelCount int64 `protobuf:"varint,9,opt,name=audio_channel_count,json=audioChannelCount,proto3" json:"audio_channel_count,omitempty"`
	// This mark allows disable normalization text
	RawResults           bool     `protobuf:"varint,10,opt,name=raw_results,json=rawResults,proto3" json:"raw_results,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RecognitionSpec) Reset()         { *m = RecognitionSpec{} }
func (m *RecognitionSpec) String() string { return proto.CompactTextString(m) }
func (*RecognitionSpec) ProtoMessage()    {}
func (*RecognitionSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{6}
}

func (m *RecognitionSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RecognitionSpec.Unmarshal(m, b)
}
func (m *RecognitionSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RecognitionSpec.Marshal(b, m, deterministic)
}
func (m *RecognitionSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RecognitionSpec.Merge(m, src)
}
func (m *RecognitionSpec) XXX_Size() int {
	return xxx_messageInfo_RecognitionSpec.Size(m)
}
func (m *RecognitionSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_RecognitionSpec.DiscardUnknown(m)
}

var xxx_messageInfo_RecognitionSpec proto.InternalMessageInfo

func (m *RecognitionSpec) GetAudioEncoding() RecognitionSpec_AudioEncoding {
	if m != nil {
		return m.AudioEncoding
	}
	return RecognitionSpec_AUDIO_ENCODING_UNSPECIFIED
}

func (m *RecognitionSpec) GetSampleRateHertz() int64 {
	if m != nil {
		return m.SampleRateHertz
	}
	return 0
}

func (m *RecognitionSpec) GetLanguageCode() string {
	if m != nil {
		return m.LanguageCode
	}
	return ""
}

func (m *RecognitionSpec) GetProfanityFilter() bool {
	if m != nil {
		return m.ProfanityFilter
	}
	return false
}

func (m *RecognitionSpec) GetModel() string {
	if m != nil {
		return m.Model
	}
	return ""
}

func (m *RecognitionSpec) GetPartialResults() bool {
	if m != nil {
		return m.PartialResults
	}
	return false
}

func (m *RecognitionSpec) GetSingleUtterance() bool {
	if m != nil {
		return m.SingleUtterance
	}
	return false
}

func (m *RecognitionSpec) GetAudioChannelCount() int64 {
	if m != nil {
		return m.AudioChannelCount
	}
	return 0
}

func (m *RecognitionSpec) GetRawResults() bool {
	if m != nil {
		return m.RawResults
	}
	return false
}

type SpeechRecognitionChunk struct {
	Alternatives []*SpeechRecognitionAlternative `protobuf:"bytes,1,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	// This flag shows that the received chunk contains a part of the recognized text that won't be changed.
	Final bool `protobuf:"varint,2,opt,name=final,proto3" json:"final,omitempty"`
	// This flag shows that the received chunk is the end of an utterance.
	EndOfUtterance       bool     `protobuf:"varint,3,opt,name=end_of_utterance,json=endOfUtterance,proto3" json:"end_of_utterance,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SpeechRecognitionChunk) Reset()         { *m = SpeechRecognitionChunk{} }
func (m *SpeechRecognitionChunk) String() string { return proto.CompactTextString(m) }
func (*SpeechRecognitionChunk) ProtoMessage()    {}
func (*SpeechRecognitionChunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{7}
}

func (m *SpeechRecognitionChunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechRecognitionChunk.Unmarshal(m, b)
}
func (m *SpeechRecognitionChunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechRecognitionChunk.Marshal(b, m, deterministic)
}
func (m *SpeechRecognitionChunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechRecognitionChunk.Merge(m, src)
}
func (m *SpeechRecognitionChunk) XXX_Size() int {
	return xxx_messageInfo_SpeechRecognitionChunk.Size(m)
}
func (m *SpeechRecognitionChunk) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechRecognitionChunk.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechRecognitionChunk proto.InternalMessageInfo

func (m *SpeechRecognitionChunk) GetAlternatives() []*SpeechRecognitionAlternative {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *SpeechRecognitionChunk) GetFinal() bool {
	if m != nil {
		return m.Final
	}
	return false
}

func (m *SpeechRecognitionChunk) GetEndOfUtterance() bool {
	if m != nil {
		return m.EndOfUtterance
	}
	return false
}

type SpeechRecognitionResult struct {
	Alternatives         []*SpeechRecognitionAlternative `protobuf:"bytes,1,rep,name=alternatives,proto3" json:"alternatives,omitempty"`
	ChannelTag           int64                           `protobuf:"varint,2,opt,name=channel_tag,json=channelTag,proto3" json:"channel_tag,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *SpeechRecognitionResult) Reset()         { *m = SpeechRecognitionResult{} }
func (m *SpeechRecognitionResult) String() string { return proto.CompactTextString(m) }
func (*SpeechRecognitionResult) ProtoMessage()    {}
func (*SpeechRecognitionResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{8}
}

func (m *SpeechRecognitionResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechRecognitionResult.Unmarshal(m, b)
}
func (m *SpeechRecognitionResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechRecognitionResult.Marshal(b, m, deterministic)
}
func (m *SpeechRecognitionResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechRecognitionResult.Merge(m, src)
}
func (m *SpeechRecognitionResult) XXX_Size() int {
	return xxx_messageInfo_SpeechRecognitionResult.Size(m)
}
func (m *SpeechRecognitionResult) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechRecognitionResult.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechRecognitionResult proto.InternalMessageInfo

func (m *SpeechRecognitionResult) GetAlternatives() []*SpeechRecognitionAlternative {
	if m != nil {
		return m.Alternatives
	}
	return nil
}

func (m *SpeechRecognitionResult) GetChannelTag() int64 {
	if m != nil {
		return m.ChannelTag
	}
	return 0
}

type SpeechRecognitionAlternative struct {
	Text                 string      `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Confidence           float32     `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Words                []*WordInfo `protobuf:"bytes,3,rep,name=words,proto3" json:"words,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *SpeechRecognitionAlternative) Reset()         { *m = SpeechRecognitionAlternative{} }
func (m *SpeechRecognitionAlternative) String() string { return proto.CompactTextString(m) }
func (*SpeechRecognitionAlternative) ProtoMessage()    {}
func (*SpeechRecognitionAlternative) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{9}
}

func (m *SpeechRecognitionAlternative) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpeechRecognitionAlternative.Unmarshal(m, b)
}
func (m *SpeechRecognitionAlternative) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpeechRecognitionAlternative.Marshal(b, m, deterministic)
}
func (m *SpeechRecognitionAlternative) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpeechRecognitionAlternative.Merge(m, src)
}
func (m *SpeechRecognitionAlternative) XXX_Size() int {
	return xxx_messageInfo_SpeechRecognitionAlternative.Size(m)
}
func (m *SpeechRecognitionAlternative) XXX_DiscardUnknown() {
	xxx_messageInfo_SpeechRecognitionAlternative.DiscardUnknown(m)
}

var xxx_messageInfo_SpeechRecognitionAlternative proto.InternalMessageInfo

func (m *SpeechRecognitionAlternative) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *SpeechRecognitionAlternative) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func (m *SpeechRecognitionAlternative) GetWords() []*WordInfo {
	if m != nil {
		return m.Words
	}
	return nil
}

type WordInfo struct {
	StartTime            *duration.Duration `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime              *duration.Duration `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Word                 string             `protobuf:"bytes,3,opt,name=word,proto3" json:"word,omitempty"`
	Confidence           float32            `protobuf:"fixed32,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *WordInfo) Reset()         { *m = WordInfo{} }
func (m *WordInfo) String() string { return proto.CompactTextString(m) }
func (*WordInfo) ProtoMessage()    {}
func (*WordInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_44de6807abd10de5, []int{10}
}

func (m *WordInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WordInfo.Unmarshal(m, b)
}
func (m *WordInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WordInfo.Marshal(b, m, deterministic)
}
func (m *WordInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WordInfo.Merge(m, src)
}
func (m *WordInfo) XXX_Size() int {
	return xxx_messageInfo_WordInfo.Size(m)
}
func (m *WordInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_WordInfo.DiscardUnknown(m)
}

var xxx_messageInfo_WordInfo proto.InternalMessageInfo

func (m *WordInfo) GetStartTime() *duration.Duration {
	if m != nil {
		return m.StartTime
	}
	return nil
}

func (m *WordInfo) GetEndTime() *duration.Duration {
	if m != nil {
		return m.EndTime
	}
	return nil
}

func (m *WordInfo) GetWord() string {
	if m != nil {
		return m.Word
	}
	return ""
}

func (m *WordInfo) GetConfidence() float32 {
	if m != nil {
		return m.Confidence
	}
	return 0
}

func init() {
	proto.RegisterEnum("yandex.cloud.ai.stt.v2.RecognitionSpec_AudioEncoding", RecognitionSpec_AudioEncoding_name, RecognitionSpec_AudioEncoding_value)
	proto.RegisterType((*LongRunningRecognitionRequest)(nil), "yandex.cloud.ai.stt.v2.LongRunningRecognitionRequest")
	proto.RegisterType((*LongRunningRecognitionResponse)(nil), "yandex.cloud.ai.stt.v2.LongRunningRecognitionResponse")
	proto.RegisterType((*StreamingRecognitionRequest)(nil), "yandex.cloud.ai.stt.v2.StreamingRecognitionRequest")
	proto.RegisterType((*StreamingRecognitionResponse)(nil), "yandex.cloud.ai.stt.v2.StreamingRecognitionResponse")
	proto.RegisterType((*RecognitionAudio)(nil), "yandex.cloud.ai.stt.v2.RecognitionAudio")
	proto.RegisterType((*RecognitionConfig)(nil), "yandex.cloud.ai.stt.v2.RecognitionConfig")
	proto.RegisterType((*RecognitionSpec)(nil), "yandex.cloud.ai.stt.v2.RecognitionSpec")
	proto.RegisterType((*SpeechRecognitionChunk)(nil), "yandex.cloud.ai.stt.v2.SpeechRecognitionChunk")
	proto.RegisterType((*SpeechRecognitionResult)(nil), "yandex.cloud.ai.stt.v2.SpeechRecognitionResult")
	proto.RegisterType((*SpeechRecognitionAlternative)(nil), "yandex.cloud.ai.stt.v2.SpeechRecognitionAlternative")
	proto.RegisterType((*WordInfo)(nil), "yandex.cloud.ai.stt.v2.WordInfo")
}

func init() {
	proto.RegisterFile("yandex/cloud/ai/stt/v2/stt_service.proto", fileDescriptor_44de6807abd10de5)
}

var fileDescriptor_44de6807abd10de5 = []byte{
	// 1073 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xb4, 0x56, 0x4f, 0x6f, 0xdb, 0x36,
	0x14, 0x8f, 0xec, 0xfc, 0x71, 0x5e, 0x9c, 0xc4, 0x61, 0x8b, 0xd6, 0x73, 0xbb, 0xd4, 0x53, 0xb1,
	0xd5, 0x0d, 0x50, 0x69, 0x73, 0xb3, 0x62, 0xd8, 0x80, 0x02, 0x89, 0xf3, 0xcf, 0x43, 0x1b, 0x07,
	0x74, 0x83, 0x0d, 0x43, 0x01, 0x81, 0x91, 0x28, 0x85, 0x98, 0x4c, 0x6a, 0x12, 0x95, 0xb4, 0xb9,
	0x0c, 0x18, 0xd0, 0xcb, 0xae, 0xdb, 0x79, 0x87, 0x7d, 0x80, 0x1d, 0xfa, 0x19, 0xf6, 0x09, 0xb6,
	0xe3, 0xae, 0xfb, 0x0e, 0xbb, 0x0e, 0x22, 0xa5, 0xa4, 0x76, 0xed, 0x36, 0x1b, 0xd0, 0x93, 0xc4,
	0x1f, 0xdf, 0xef, 0xf1, 0xbd, 0xdf, 0x23, 0xf9, 0x08, 0xad, 0xe7, 0x84, 0x7b, 0xf4, 0x99, 0xed,
	0x86, 0x22, 0xf5, 0x6c, 0xc2, 0xec, 0x44, 0x4a, 0xfb, 0xa4, 0x9d, 0x7d, 0x9c, 0x84, 0xc6, 0x27,
	0xcc, 0xa5, 0x56, 0x14, 0x0b, 0x29, 0xd0, 0x35, 0x6d, 0x69, 0x29, 0x4b, 0x8b, 0x30, 0x2b, 0x91,
	0xd2, 0x3a, 0x69, 0x37, 0x6e, 0x06, 0x42, 0x04, 0x21, 0xb5, 0x49, 0xc4, 0x6c, 0xc2, 0xb9, 0x90,
	0x44, 0x32, 0xc1, 0x13, 0xcd, 0x6a, 0xac, 0xe6, 0xb3, 0x6a, 0x74, 0x94, 0xfa, 0xb6, 0x97, 0xc6,
	0xca, 0x20, 0x9f, 0x6f, 0x0e, 0xaf, 0x1f, 0x31, 0x5b, 0x44, 0x74, 0xc8, 0xe2, 0xa3, 0x21, 0x8b,
	0xf3, 0xd9, 0x51, 0x3b, 0xf3, 0x57, 0x03, 0xde, 0x7f, 0x24, 0x78, 0x80, 0x53, 0xce, 0x19, 0x0f,
	0x30, 0x75, 0x45, 0xc0, 0x59, 0x66, 0x80, 0xe9, 0x77, 0x29, 0x4d, 0x24, 0xda, 0x80, 0x59, 0x57,
	0x70, 0x9f, 0x05, 0x75, 0xa3, 0x69, 0xb4, 0x16, 0xda, 0x77, 0xad, 0xf1, 0x29, 0x59, 0xaf, 0x70,
	0x3b, 0x8a, 0x80, 0x73, 0x22, 0x7a, 0x08, 0x33, 0x24, 0xf5, 0x98, 0xa8, 0x97, 0x94, 0x87, 0xd6,
	0x25, 0x3c, 0x6c, 0x64, 0xf6, 0x58, 0xd3, 0x4c, 0x06, 0xab, 0x93, 0x62, 0x4c, 0x22, 0xc1, 0x13,
	0x8a, 0x76, 0x61, 0xd6, 0x3d, 0x4e, 0xf9, 0xb7, 0x49, 0xdd, 0x68, 0x96, 0x5b, 0x0b, 0x6d, 0x7b,
	0xd2, 0x12, 0xfd, 0x88, 0x52, 0xf7, 0x78, 0xd8, 0x45, 0x1a, 0x4a, 0x9c, 0xd3, 0xcd, 0x5f, 0x0c,
	0xb8, 0xd1, 0x97, 0x31, 0x25, 0x83, 0xf1, 0x6a, 0x74, 0xfe, 0xb7, 0x1a, 0x7b, 0x53, 0xe7, 0x7a,
	0x7c, 0x08, 0x8b, 0x2a, 0x31, 0xc7, 0x15, 0x5c, 0x52, 0x2e, 0x95, 0x2e, 0xd5, 0xbd, 0x29, 0x5c,
	0x55, 0x70, 0x47, 0xa3, 0x9b, 0x57, 0x60, 0x25, 0x29, 0x42, 0x71, 0x62, 0x1d, 0x80, 0xf9, 0xc2,
	0x80, 0x9b, 0xe3, 0x03, 0xcc, 0xa5, 0xd8, 0x19, 0x91, 0xc2, 0xba, 0xb4, 0x14, 0x9d, 0x8c, 0x56,
	0x28, 0xf1, 0xe5, 0x74, 0xa5, 0x54, 0x2b, 0xe3, 0xeb, 0x94, 0x7b, 0x8e, 0xf0, 0x9d, 0x84, 0xf1,
	0x20, 0xa4, 0x4e, 0x2a, 0x25, 0x8d, 0x09, 0x77, 0xa9, 0x89, 0xa1, 0x36, 0x5a, 0x2e, 0xd4, 0x80,
	0xb9, 0x22, 0x23, 0x23, 0xcf, 0xa8, 0x00, 0x10, 0x82, 0x72, 0x1a, 0x33, 0x95, 0xe9, 0xfc, 0xde,
	0x14, 0xce, 0x06, 0x9b, 0x4b, 0xa0, 0x13, 0x76, 0x12, 0x91, 0xc6, 0x2e, 0x35, 0xbf, 0x87, 0x95,
	0xd7, 0x64, 0x43, 0x8f, 0x61, 0x31, 0x89, 0xa8, 0xcb, 0x7c, 0xe6, 0xaa, 0x8d, 0x9b, 0x0b, 0x7f,
	0xe7, 0x12, 0xc2, 0xf7, 0x23, 0xea, 0xe2, 0x61, 0x36, 0xba, 0x01, 0xf3, 0xbe, 0x08, 0x3d, 0x1a,
	0x3b, 0xcc, 0xd3, 0xd1, 0xe0, 0x8a, 0x06, 0xba, 0x9e, 0xf9, 0x4f, 0x19, 0x96, 0x47, 0xf8, 0xe8,
	0x29, 0x2c, 0xe9, 0x20, 0x29, 0x77, 0x85, 0xc7, 0xb8, 0xae, 0xfc, 0x52, 0xfb, 0xd3, 0x4b, 0x06,
	0x60, 0x29, 0x6d, 0xb6, 0x73, 0x32, 0xd6, 0x95, 0x2f, 0x86, 0x68, 0x0d, 0x56, 0x12, 0x32, 0x88,
	0x42, 0xea, 0xc4, 0x44, 0x52, 0xe7, 0x98, 0xc6, 0xf2, 0x4c, 0x85, 0x55, 0xc6, 0xcb, 0x7a, 0x02,
	0x13, 0x49, 0xf7, 0x32, 0x18, 0xdd, 0x86, 0xc5, 0x90, 0xf0, 0x20, 0x25, 0x01, 0x75, 0x5c, 0xe1,
	0xd1, 0x7a, 0x59, 0x85, 0x5f, 0x2d, 0xc0, 0x8e, 0xf0, 0x28, 0xba, 0x0b, 0xb5, 0x28, 0x16, 0x3e,
	0xe1, 0x4c, 0x3e, 0x77, 0x7c, 0x16, 0x4a, 0x1a, 0xd7, 0xa7, 0x9b, 0x46, 0xab, 0x82, 0x97, 0xcf,
	0xf1, 0x1d, 0x05, 0xa3, 0xab, 0x30, 0x33, 0x10, 0x1e, 0x0d, 0xeb, 0x33, 0xca, 0x8f, 0x1e, 0xa0,
	0x3b, 0xb0, 0x1c, 0x91, 0x58, 0x32, 0x12, 0x3a, 0xb1, 0x3a, 0x1b, 0x49, 0x7d, 0x4e, 0xf1, 0x97,
	0x72, 0x58, 0x9f, 0x98, 0x24, 0x5b, 0x69, 0x74, 0x57, 0xd4, 0x2b, 0x7a, 0x25, 0x8d, 0x1f, 0x16,
	0x30, 0xb2, 0xe0, 0x4a, 0xbe, 0xe1, 0x8f, 0x09, 0xe7, 0x34, 0x74, 0x5c, 0x91, 0x72, 0x59, 0x9f,
	0x57, 0x79, 0xae, 0xe8, 0x4d, 0xaf, 0x67, 0x3a, 0xd9, 0x04, 0xba, 0x05, 0x0b, 0x31, 0x39, 0x3d,
	0x5f, 0x1f, 0x94, 0x57, 0x88, 0xc9, 0x69, 0xbe, 0xb6, 0xd9, 0x83, 0xc5, 0x21, 0x59, 0xd1, 0x2a,
	0x34, 0x36, 0x0e, 0xb7, 0xba, 0x3d, 0x67, 0x7b, 0xbf, 0xd3, 0xdb, 0xea, 0xee, 0xef, 0x3a, 0x87,
	0xfb, 0xfd, 0x83, 0xed, 0x4e, 0x77, 0xa7, 0xbb, 0xbd, 0x55, 0x9b, 0x42, 0x35, 0xa8, 0x3e, 0xea,
	0xee, 0x6f, 0x6f, 0xe0, 0x4f, 0x1e, 0x38, 0x07, 0x9d, 0xc7, 0x35, 0x03, 0x55, 0xa1, 0xd2, 0xdb,
	0xdd, 0x75, 0x7a, 0x07, 0x87, 0xfd, 0x5a, 0xc9, 0x7c, 0x69, 0xc0, 0xb5, 0xf1, 0x07, 0x02, 0x7d,
	0x0d, 0x55, 0x92, 0xe9, 0xc5, 0x89, 0x64, 0x27, 0xb4, 0x38, 0x56, 0xeb, 0x97, 0x3e, 0x56, 0x1b,
	0x17, 0x64, 0x3c, 0xe4, 0x29, 0x2b, 0x80, 0xcf, 0x38, 0x09, 0x55, 0xc1, 0x2b, 0x58, 0x0f, 0x50,
	0x0b, 0x6a, 0xf9, 0xa1, 0xbb, 0xd0, 0xb5, 0xac, 0x2b, 0x40, 0xb9, 0xd7, 0xf3, 0xcf, 0x65, 0x35,
	0x7f, 0x36, 0xe0, 0xfa, 0x84, 0x0b, 0xed, 0x1d, 0x46, 0x7d, 0x0b, 0x16, 0x8a, 0x32, 0x4a, 0x12,
	0xe4, 0x9b, 0x15, 0x72, 0xe8, 0x09, 0x09, 0xcc, 0x1f, 0xb3, 0x2b, 0xea, 0x0d, 0xfe, 0x10, 0x82,
	0x69, 0x49, 0x9f, 0xe9, 0x4b, 0x62, 0x1e, 0xab, 0x7f, 0xb4, 0x0a, 0xa0, 0x6e, 0x47, 0x8f, 0x66,
	0xf9, 0x66, 0x4e, 0x4b, 0xf8, 0x15, 0x04, 0x3d, 0x80, 0x99, 0x53, 0x11, 0x7b, 0x49, 0xbd, 0xac,
	0x12, 0x69, 0x4e, 0x4a, 0xe4, 0x2b, 0x11, 0x7b, 0x5d, 0xee, 0x0b, 0xac, 0xcd, 0xcd, 0xdf, 0x0c,
	0xa8, 0x14, 0x18, 0xfa, 0x0c, 0x20, 0x91, 0x24, 0x96, 0x8e, 0x64, 0x03, 0x9a, 0x5f, 0x24, 0xef,
	0x59, 0xba, 0xd9, 0x5a, 0x45, 0xb3, 0xb5, 0xb6, 0xf2, 0x66, 0x8b, 0xe7, 0x95, 0xf1, 0x13, 0x36,
	0xa0, 0x68, 0x1d, 0x2a, 0x59, 0x51, 0x14, 0xaf, 0xf4, 0x36, 0xde, 0x1c, 0xe5, 0x9e, 0x62, 0x21,
	0x98, 0xce, 0xa2, 0xc8, 0x0f, 0xaa, 0xfa, 0x1f, 0x49, 0x74, 0x7a, 0x34, 0xd1, 0xf6, 0x5f, 0x25,
	0x80, 0xbe, 0x94, 0x7d, 0xfd, 0x8c, 0x40, 0xbf, 0x1b, 0x70, 0xf5, 0xf5, 0xe6, 0x77, 0x46, 0xd1,
	0xc4, 0xfb, 0xe7, 0x8d, 0xed, 0xbc, 0xf1, 0xc1, 0x30, 0xed, 0xe2, 0x3d, 0xd0, 0x2b, 0xfe, 0x4c,
	0xfc, 0xf2, 0x8f, 0xb5, 0x26, 0x7a, 0x4b, 0xcb, 0xfd, 0xe1, 0xcf, 0xbf, 0x7f, 0x2a, 0xb5, 0xcc,
	0xdb, 0x76, 0xa2, 0x2a, 0x5d, 0xbc, 0x80, 0xc2, 0x31, 0xa1, 0x7e, 0x6e, 0xac, 0xa1, 0x17, 0x06,
	0xa0, 0xd1, 0xb6, 0x75, 0x46, 0xd1, 0xfd, 0x89, 0xfb, 0x71, 0x72, 0x0f, 0x6e, 0xac, 0xff, 0x37,
	0x92, 0x8e, 0xd7, 0x9c, 0x6a, 0x19, 0x1f, 0x1b, 0x9b, 0x4f, 0xa1, 0x31, 0x4c, 0x8e, 0xd8, 0x85,
	0x83, 0x6f, 0x1e, 0x06, 0x4c, 0x1e, 0xa7, 0x47, 0x96, 0x2b, 0x06, 0xb6, 0x36, 0xbb, 0xa7, 0x1f,
	0x50, 0x81, 0xb8, 0x17, 0x50, 0xae, 0x2a, 0x6d, 0x8f, 0x7f, 0xfb, 0x7d, 0x91, 0x48, 0x79, 0x34,
	0xab, 0x2c, 0xee, 0xff, 0x1b, 0x00, 0x00, 0xff, 0xff, 0x80, 0x2d, 0x0a, 0x7e, 0x20, 0x0a, 0x00,
	0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// SttServiceClient is the client API for SttService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type SttServiceClient interface {
	LongRunningRecognize(ctx context.Context, in *LongRunningRecognitionRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	StreamingRecognize(ctx context.Context, opts ...grpc.CallOption) (SttService_StreamingRecognizeClient, error)
}

type sttServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewSttServiceClient(cc grpc.ClientConnInterface) SttServiceClient {
	return &sttServiceClient{cc}
}

func (c *sttServiceClient) LongRunningRecognize(ctx context.Context, in *LongRunningRecognitionRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.ai.stt.v2.SttService/LongRunningRecognize", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *sttServiceClient) StreamingRecognize(ctx context.Context, opts ...grpc.CallOption) (SttService_StreamingRecognizeClient, error) {
	stream, err := c.cc.NewStream(ctx, &_SttService_serviceDesc.Streams[0], "/yandex.cloud.ai.stt.v2.SttService/StreamingRecognize", opts...)
	if err != nil {
		return nil, err
	}
	x := &sttServiceStreamingRecognizeClient{stream}
	return x, nil
}

type SttService_StreamingRecognizeClient interface {
	Send(*StreamingRecognitionRequest) error
	Recv() (*StreamingRecognitionResponse, error)
	grpc.ClientStream
}

type sttServiceStreamingRecognizeClient struct {
	grpc.ClientStream
}

func (x *sttServiceStreamingRecognizeClient) Send(m *StreamingRecognitionRequest) error {
	return x.ClientStream.SendMsg(m)
}

func (x *sttServiceStreamingRecognizeClient) Recv() (*StreamingRecognitionResponse, error) {
	m := new(StreamingRecognitionResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// SttServiceServer is the server API for SttService service.
type SttServiceServer interface {
	LongRunningRecognize(context.Context, *LongRunningRecognitionRequest) (*operation.Operation, error)
	StreamingRecognize(SttService_StreamingRecognizeServer) error
}

// UnimplementedSttServiceServer can be embedded to have forward compatible implementations.
type UnimplementedSttServiceServer struct {
}

func (*UnimplementedSttServiceServer) LongRunningRecognize(ctx context.Context, req *LongRunningRecognitionRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LongRunningRecognize not implemented")
}
func (*UnimplementedSttServiceServer) StreamingRecognize(srv SttService_StreamingRecognizeServer) error {
	return status.Errorf(codes.Unimplemented, "method StreamingRecognize not implemented")
}

func RegisterSttServiceServer(s *grpc.Server, srv SttServiceServer) {
	s.RegisterService(&_SttService_serviceDesc, srv)
}

func _SttService_LongRunningRecognize_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LongRunningRecognitionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SttServiceServer).LongRunningRecognize(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.ai.stt.v2.SttService/LongRunningRecognize",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SttServiceServer).LongRunningRecognize(ctx, req.(*LongRunningRecognitionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _SttService_StreamingRecognize_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(SttServiceServer).StreamingRecognize(&sttServiceStreamingRecognizeServer{stream})
}

type SttService_StreamingRecognizeServer interface {
	Send(*StreamingRecognitionResponse) error
	Recv() (*StreamingRecognitionRequest, error)
	grpc.ServerStream
}

type sttServiceStreamingRecognizeServer struct {
	grpc.ServerStream
}

func (x *sttServiceStreamingRecognizeServer) Send(m *StreamingRecognitionResponse) error {
	return x.ServerStream.SendMsg(m)
}

func (x *sttServiceStreamingRecognizeServer) Recv() (*StreamingRecognitionRequest, error) {
	m := new(StreamingRecognitionRequest)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _SttService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.ai.stt.v2.SttService",
	HandlerType: (*SttServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "LongRunningRecognize",
			Handler:    _SttService_LongRunningRecognize_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "StreamingRecognize",
			Handler:       _SttService_StreamingRecognize_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "yandex/cloud/ai/stt/v2/stt_service.proto",
}
