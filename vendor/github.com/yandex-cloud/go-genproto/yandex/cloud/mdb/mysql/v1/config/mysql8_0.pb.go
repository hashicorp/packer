// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/mysql/v1/config/mysql8_0.proto

package mysql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MysqlConfig8_0_SQLMode int32

const (
	MysqlConfig8_0_SQLMODE_UNSPECIFIED        MysqlConfig8_0_SQLMode = 0
	MysqlConfig8_0_ALLOW_INVALID_DATES        MysqlConfig8_0_SQLMode = 1
	MysqlConfig8_0_ANSI_QUOTES                MysqlConfig8_0_SQLMode = 2
	MysqlConfig8_0_ERROR_FOR_DIVISION_BY_ZERO MysqlConfig8_0_SQLMode = 3
	MysqlConfig8_0_HIGH_NOT_PRECEDENCE        MysqlConfig8_0_SQLMode = 4
	MysqlConfig8_0_IGNORE_SPACE               MysqlConfig8_0_SQLMode = 5
	MysqlConfig8_0_NO_AUTO_VALUE_ON_ZERO      MysqlConfig8_0_SQLMode = 6
	MysqlConfig8_0_NO_BACKSLASH_ESCAPES       MysqlConfig8_0_SQLMode = 7
	MysqlConfig8_0_NO_ENGINE_SUBSTITUTION     MysqlConfig8_0_SQLMode = 8
	MysqlConfig8_0_NO_UNSIGNED_SUBTRACTION    MysqlConfig8_0_SQLMode = 9
	MysqlConfig8_0_NO_ZERO_DATE               MysqlConfig8_0_SQLMode = 10
	MysqlConfig8_0_NO_ZERO_IN_DATE            MysqlConfig8_0_SQLMode = 11
	MysqlConfig8_0_ONLY_FULL_GROUP_BY         MysqlConfig8_0_SQLMode = 15
	MysqlConfig8_0_PAD_CHAR_TO_FULL_LENGTH    MysqlConfig8_0_SQLMode = 16
	MysqlConfig8_0_PIPES_AS_CONCAT            MysqlConfig8_0_SQLMode = 17
	MysqlConfig8_0_REAL_AS_FLOAT              MysqlConfig8_0_SQLMode = 18
	MysqlConfig8_0_STRICT_ALL_TABLES          MysqlConfig8_0_SQLMode = 19
	MysqlConfig8_0_STRICT_TRANS_TABLES        MysqlConfig8_0_SQLMode = 20
	MysqlConfig8_0_TIME_TRUNCATE_FRACTIONAL   MysqlConfig8_0_SQLMode = 21
	MysqlConfig8_0_ANSI                       MysqlConfig8_0_SQLMode = 22
	MysqlConfig8_0_TRADITIONAL                MysqlConfig8_0_SQLMode = 23
)

var MysqlConfig8_0_SQLMode_name = map[int32]string{
	0:  "SQLMODE_UNSPECIFIED",
	1:  "ALLOW_INVALID_DATES",
	2:  "ANSI_QUOTES",
	3:  "ERROR_FOR_DIVISION_BY_ZERO",
	4:  "HIGH_NOT_PRECEDENCE",
	5:  "IGNORE_SPACE",
	6:  "NO_AUTO_VALUE_ON_ZERO",
	7:  "NO_BACKSLASH_ESCAPES",
	8:  "NO_ENGINE_SUBSTITUTION",
	9:  "NO_UNSIGNED_SUBTRACTION",
	10: "NO_ZERO_DATE",
	11: "NO_ZERO_IN_DATE",
	15: "ONLY_FULL_GROUP_BY",
	16: "PAD_CHAR_TO_FULL_LENGTH",
	17: "PIPES_AS_CONCAT",
	18: "REAL_AS_FLOAT",
	19: "STRICT_ALL_TABLES",
	20: "STRICT_TRANS_TABLES",
	21: "TIME_TRUNCATE_FRACTIONAL",
	22: "ANSI",
	23: "TRADITIONAL",
}

var MysqlConfig8_0_SQLMode_value = map[string]int32{
	"SQLMODE_UNSPECIFIED":        0,
	"ALLOW_INVALID_DATES":        1,
	"ANSI_QUOTES":                2,
	"ERROR_FOR_DIVISION_BY_ZERO": 3,
	"HIGH_NOT_PRECEDENCE":        4,
	"IGNORE_SPACE":               5,
	"NO_AUTO_VALUE_ON_ZERO":      6,
	"NO_BACKSLASH_ESCAPES":       7,
	"NO_ENGINE_SUBSTITUTION":     8,
	"NO_UNSIGNED_SUBTRACTION":    9,
	"NO_ZERO_DATE":               10,
	"NO_ZERO_IN_DATE":            11,
	"ONLY_FULL_GROUP_BY":         15,
	"PAD_CHAR_TO_FULL_LENGTH":    16,
	"PIPES_AS_CONCAT":            17,
	"REAL_AS_FLOAT":              18,
	"STRICT_ALL_TABLES":          19,
	"STRICT_TRANS_TABLES":        20,
	"TIME_TRUNCATE_FRACTIONAL":   21,
	"ANSI":                       22,
	"TRADITIONAL":                23,
}

func (x MysqlConfig8_0_SQLMode) String() string {
	return proto.EnumName(MysqlConfig8_0_SQLMode_name, int32(x))
}

func (MysqlConfig8_0_SQLMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d7b57328ffba4745, []int{0, 0}
}

type MysqlConfig8_0_AuthPlugin int32

const (
	MysqlConfig8_0_AUTH_PLUGIN_UNSPECIFIED MysqlConfig8_0_AuthPlugin = 0
	// Using [Native Pluggable Authentication](https://dev.mysql.com/doc/refman/8.0/en/native-pluggable-authentication.html).
	MysqlConfig8_0_MYSQL_NATIVE_PASSWORD MysqlConfig8_0_AuthPlugin = 1
	// Using [Caching SHA-2 Pluggable Authentication](https://dev.mysql.com/doc/refman/8.0/en/caching-sha2-pluggable-authentication.html).
	MysqlConfig8_0_CACHING_SHA2_PASSWORD MysqlConfig8_0_AuthPlugin = 2
	// Using [SHA-256 Pluggable Authentication](https://dev.mysql.com/doc/refman/8.0/en/sha256-pluggable-authentication.html).
	MysqlConfig8_0_SHA256_PASSWORD MysqlConfig8_0_AuthPlugin = 3
)

var MysqlConfig8_0_AuthPlugin_name = map[int32]string{
	0: "AUTH_PLUGIN_UNSPECIFIED",
	1: "MYSQL_NATIVE_PASSWORD",
	2: "CACHING_SHA2_PASSWORD",
	3: "SHA256_PASSWORD",
}

var MysqlConfig8_0_AuthPlugin_value = map[string]int32{
	"AUTH_PLUGIN_UNSPECIFIED": 0,
	"MYSQL_NATIVE_PASSWORD":   1,
	"CACHING_SHA2_PASSWORD":   2,
	"SHA256_PASSWORD":         3,
}

func (x MysqlConfig8_0_AuthPlugin) String() string {
	return proto.EnumName(MysqlConfig8_0_AuthPlugin_name, int32(x))
}

func (MysqlConfig8_0_AuthPlugin) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d7b57328ffba4745, []int{0, 1}
}

type MysqlConfig8_0_TransactionIsolation int32

const (
	MysqlConfig8_0_TRANSACTION_ISOLATION_UNSPECIFIED MysqlConfig8_0_TransactionIsolation = 0
	MysqlConfig8_0_READ_COMMITTED                    MysqlConfig8_0_TransactionIsolation = 1
	MysqlConfig8_0_REPEATABLE_READ                   MysqlConfig8_0_TransactionIsolation = 2
	MysqlConfig8_0_SERIALIZABLE                      MysqlConfig8_0_TransactionIsolation = 3
)

var MysqlConfig8_0_TransactionIsolation_name = map[int32]string{
	0: "TRANSACTION_ISOLATION_UNSPECIFIED",
	1: "READ_COMMITTED",
	2: "REPEATABLE_READ",
	3: "SERIALIZABLE",
}

var MysqlConfig8_0_TransactionIsolation_value = map[string]int32{
	"TRANSACTION_ISOLATION_UNSPECIFIED": 0,
	"READ_COMMITTED":                    1,
	"REPEATABLE_READ":                   2,
	"SERIALIZABLE":                      3,
}

func (x MysqlConfig8_0_TransactionIsolation) String() string {
	return proto.EnumName(MysqlConfig8_0_TransactionIsolation_name, int32(x))
}

func (MysqlConfig8_0_TransactionIsolation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_d7b57328ffba4745, []int{0, 2}
}

// Options and structure of `MysqlConfig8_0` reflects MySQL 8.0 configuration file
type MysqlConfig8_0 struct {
	// Size of the InnoDB buffer pool used for caching table and index data.
	//
	// For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
	InnodbBufferPoolSize *wrappers.Int64Value `protobuf:"bytes,1,opt,name=innodb_buffer_pool_size,json=innodbBufferPoolSize,proto3" json:"innodb_buffer_pool_size,omitempty"`
	// The maximum permitted number of simultaneous client connections.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_connections).
	MaxConnections *wrappers.Int64Value `protobuf:"bytes,2,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	// Time that it takes to process a query before it is considered slow.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_long_query_time).
	LongQueryTime *wrappers.DoubleValue `protobuf:"bytes,3,opt,name=long_query_time,json=longQueryTime,proto3" json:"long_query_time,omitempty"`
	// Enable writing of general query log of MySQL.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_general_log).
	GeneralLog *wrappers.BoolValue `protobuf:"bytes,4,opt,name=general_log,json=generalLog,proto3" json:"general_log,omitempty"`
	// Enable writing of audit log of MySQL.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/audit-log-reference.html#audit-log-options-variables).
	AuditLog *wrappers.BoolValue `protobuf:"bytes,5,opt,name=audit_log,json=auditLog,proto3" json:"audit_log,omitempty"`
	// Server SQL mode of MySQL.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/sql-mode.html#sql-mode-setting).
	SqlMode []MysqlConfig8_0_SQLMode `protobuf:"varint,6,rep,packed,name=sql_mode,json=sqlMode,proto3,enum=yandex.cloud.mdb.mysql.v1.config.MysqlConfig8_0_SQLMode" json:"sql_mode,omitempty"`
	// The maximum size in bytes of one packet.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_allowed_packet).
	MaxAllowedPacket *wrappers.Int64Value `protobuf:"bytes,7,opt,name=max_allowed_packet,json=maxAllowedPacket,proto3" json:"max_allowed_packet,omitempty"`
	// Authentication plugin used in the managed MySQL cluster.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_default_authentication_plugin)
	DefaultAuthenticationPlugin MysqlConfig8_0_AuthPlugin `protobuf:"varint,8,opt,name=default_authentication_plugin,json=defaultAuthenticationPlugin,proto3,enum=yandex.cloud.mdb.mysql.v1.config.MysqlConfig8_0_AuthPlugin" json:"default_authentication_plugin,omitempty"`
	// Transaction log flush behaviour.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_flush_log_at_trx_commit)
	InnodbFlushLogAtTrxCommit *wrappers.Int64Value `protobuf:"bytes,9,opt,name=innodb_flush_log_at_trx_commit,json=innodbFlushLogAtTrxCommit,proto3" json:"innodb_flush_log_at_trx_commit,omitempty"`
	// Max time in seconds for a transaction to wait for a row lock
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_lock_wait_timeout)
	InnodbLockWaitTimeout *wrappers.Int64Value `protobuf:"bytes,10,opt,name=innodb_lock_wait_timeout,json=innodbLockWaitTimeout,proto3" json:"innodb_lock_wait_timeout,omitempty"`
	// Default transaction isolation level.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_transaction_isolation)
	TransactionIsolation MysqlConfig8_0_TransactionIsolation `protobuf:"varint,11,opt,name=transaction_isolation,json=transactionIsolation,proto3,enum=yandex.cloud.mdb.mysql.v1.config.MysqlConfig8_0_TransactionIsolation" json:"transaction_isolation,omitempty"`
	// Print information about deadlocks in error log
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/innodb-parameters.html#sysvar_innodb_print_all_deadlocks)
	InnodbPrintAllDeadlocks *wrappers.BoolValue `protobuf:"bytes,12,opt,name=innodb_print_all_deadlocks,json=innodbPrintAllDeadlocks,proto3" json:"innodb_print_all_deadlocks,omitempty"`
	// The number of seconds to wait for more data from a connection before aborting the read.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_read_timeout)
	NetReadTimeout *wrappers.Int64Value `protobuf:"bytes,13,opt,name=net_read_timeout,json=netReadTimeout,proto3" json:"net_read_timeout,omitempty"`
	// The number of seconds to wait for a block to be written to a connection before aborting the write.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_net_write_timeout)
	NetWriteTimeout *wrappers.Int64Value `protobuf:"bytes,14,opt,name=net_write_timeout,json=netWriteTimeout,proto3" json:"net_write_timeout,omitempty"`
	// The maximum permitted result length in bytes for the GROUP_CONCAT() function.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_group_concat_max_len)
	GroupConcatMaxLen *wrappers.Int64Value `protobuf:"bytes,15,opt,name=group_concat_max_len,json=groupConcatMaxLen,proto3" json:"group_concat_max_len,omitempty"`
	// The maximum size of internal in-memory temporary tables.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_tmp_table_size)
	TmpTableSize *wrappers.Int64Value `protobuf:"bytes,16,opt,name=tmp_table_size,json=tmpTableSize,proto3" json:"tmp_table_size,omitempty"`
	// This variable sets the maximum size to which user-created MEMORY tables are permitted to grow.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_max_heap_table_size)
	MaxHeapTableSize *wrappers.Int64Value `protobuf:"bytes,17,opt,name=max_heap_table_size,json=maxHeapTableSize,proto3" json:"max_heap_table_size,omitempty"`
	// The servers default time zone.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-options.html#option_mysqld_default-time-zone)
	DefaultTimeZone string `protobuf:"bytes,18,opt,name=default_time_zone,json=defaultTimeZone,proto3" json:"default_time_zone,omitempty"`
	// The servers default character set.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_character_set_server)
	CharacterSetServer string `protobuf:"bytes,19,opt,name=character_set_server,json=characterSetServer,proto3" json:"character_set_server,omitempty"`
	// The server default collation.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/8.0/en/server-system-variables.html#sysvar_collation_server)
	CollationServer      string   `protobuf:"bytes,20,opt,name=collation_server,json=collationServer,proto3" json:"collation_server,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MysqlConfig8_0) Reset()         { *m = MysqlConfig8_0{} }
func (m *MysqlConfig8_0) String() string { return proto.CompactTextString(m) }
func (*MysqlConfig8_0) ProtoMessage()    {}
func (*MysqlConfig8_0) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7b57328ffba4745, []int{0}
}

func (m *MysqlConfig8_0) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlConfig8_0.Unmarshal(m, b)
}
func (m *MysqlConfig8_0) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlConfig8_0.Marshal(b, m, deterministic)
}
func (m *MysqlConfig8_0) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlConfig8_0.Merge(m, src)
}
func (m *MysqlConfig8_0) XXX_Size() int {
	return xxx_messageInfo_MysqlConfig8_0.Size(m)
}
func (m *MysqlConfig8_0) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlConfig8_0.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlConfig8_0 proto.InternalMessageInfo

func (m *MysqlConfig8_0) GetInnodbBufferPoolSize() *wrappers.Int64Value {
	if m != nil {
		return m.InnodbBufferPoolSize
	}
	return nil
}

func (m *MysqlConfig8_0) GetMaxConnections() *wrappers.Int64Value {
	if m != nil {
		return m.MaxConnections
	}
	return nil
}

func (m *MysqlConfig8_0) GetLongQueryTime() *wrappers.DoubleValue {
	if m != nil {
		return m.LongQueryTime
	}
	return nil
}

func (m *MysqlConfig8_0) GetGeneralLog() *wrappers.BoolValue {
	if m != nil {
		return m.GeneralLog
	}
	return nil
}

func (m *MysqlConfig8_0) GetAuditLog() *wrappers.BoolValue {
	if m != nil {
		return m.AuditLog
	}
	return nil
}

func (m *MysqlConfig8_0) GetSqlMode() []MysqlConfig8_0_SQLMode {
	if m != nil {
		return m.SqlMode
	}
	return nil
}

func (m *MysqlConfig8_0) GetMaxAllowedPacket() *wrappers.Int64Value {
	if m != nil {
		return m.MaxAllowedPacket
	}
	return nil
}

func (m *MysqlConfig8_0) GetDefaultAuthenticationPlugin() MysqlConfig8_0_AuthPlugin {
	if m != nil {
		return m.DefaultAuthenticationPlugin
	}
	return MysqlConfig8_0_AUTH_PLUGIN_UNSPECIFIED
}

func (m *MysqlConfig8_0) GetInnodbFlushLogAtTrxCommit() *wrappers.Int64Value {
	if m != nil {
		return m.InnodbFlushLogAtTrxCommit
	}
	return nil
}

func (m *MysqlConfig8_0) GetInnodbLockWaitTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.InnodbLockWaitTimeout
	}
	return nil
}

func (m *MysqlConfig8_0) GetTransactionIsolation() MysqlConfig8_0_TransactionIsolation {
	if m != nil {
		return m.TransactionIsolation
	}
	return MysqlConfig8_0_TRANSACTION_ISOLATION_UNSPECIFIED
}

func (m *MysqlConfig8_0) GetInnodbPrintAllDeadlocks() *wrappers.BoolValue {
	if m != nil {
		return m.InnodbPrintAllDeadlocks
	}
	return nil
}

func (m *MysqlConfig8_0) GetNetReadTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.NetReadTimeout
	}
	return nil
}

func (m *MysqlConfig8_0) GetNetWriteTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.NetWriteTimeout
	}
	return nil
}

func (m *MysqlConfig8_0) GetGroupConcatMaxLen() *wrappers.Int64Value {
	if m != nil {
		return m.GroupConcatMaxLen
	}
	return nil
}

func (m *MysqlConfig8_0) GetTmpTableSize() *wrappers.Int64Value {
	if m != nil {
		return m.TmpTableSize
	}
	return nil
}

func (m *MysqlConfig8_0) GetMaxHeapTableSize() *wrappers.Int64Value {
	if m != nil {
		return m.MaxHeapTableSize
	}
	return nil
}

func (m *MysqlConfig8_0) GetDefaultTimeZone() string {
	if m != nil {
		return m.DefaultTimeZone
	}
	return ""
}

func (m *MysqlConfig8_0) GetCharacterSetServer() string {
	if m != nil {
		return m.CharacterSetServer
	}
	return ""
}

func (m *MysqlConfig8_0) GetCollationServer() string {
	if m != nil {
		return m.CollationServer
	}
	return ""
}

type MysqlConfigSet8_0 struct {
	// Effective settings for a MySQL 8.0 cluster (a combination of settings defined
	// in [user_config] and [default_config]).
	EffectiveConfig *MysqlConfig8_0 `protobuf:"bytes,1,opt,name=effective_config,json=effectiveConfig,proto3" json:"effective_config,omitempty"`
	// User-defined settings for a MySQL 8.0 cluster.
	UserConfig *MysqlConfig8_0 `protobuf:"bytes,2,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	// Default configuration for a MySQL 8.0 cluster.
	DefaultConfig        *MysqlConfig8_0 `protobuf:"bytes,3,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MysqlConfigSet8_0) Reset()         { *m = MysqlConfigSet8_0{} }
func (m *MysqlConfigSet8_0) String() string { return proto.CompactTextString(m) }
func (*MysqlConfigSet8_0) ProtoMessage()    {}
func (*MysqlConfigSet8_0) Descriptor() ([]byte, []int) {
	return fileDescriptor_d7b57328ffba4745, []int{1}
}

func (m *MysqlConfigSet8_0) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlConfigSet8_0.Unmarshal(m, b)
}
func (m *MysqlConfigSet8_0) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlConfigSet8_0.Marshal(b, m, deterministic)
}
func (m *MysqlConfigSet8_0) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlConfigSet8_0.Merge(m, src)
}
func (m *MysqlConfigSet8_0) XXX_Size() int {
	return xxx_messageInfo_MysqlConfigSet8_0.Size(m)
}
func (m *MysqlConfigSet8_0) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlConfigSet8_0.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlConfigSet8_0 proto.InternalMessageInfo

func (m *MysqlConfigSet8_0) GetEffectiveConfig() *MysqlConfig8_0 {
	if m != nil {
		return m.EffectiveConfig
	}
	return nil
}

func (m *MysqlConfigSet8_0) GetUserConfig() *MysqlConfig8_0 {
	if m != nil {
		return m.UserConfig
	}
	return nil
}

func (m *MysqlConfigSet8_0) GetDefaultConfig() *MysqlConfig8_0 {
	if m != nil {
		return m.DefaultConfig
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1.config.MysqlConfig8_0_SQLMode", MysqlConfig8_0_SQLMode_name, MysqlConfig8_0_SQLMode_value)
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1.config.MysqlConfig8_0_AuthPlugin", MysqlConfig8_0_AuthPlugin_name, MysqlConfig8_0_AuthPlugin_value)
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1.config.MysqlConfig8_0_TransactionIsolation", MysqlConfig8_0_TransactionIsolation_name, MysqlConfig8_0_TransactionIsolation_value)
	proto.RegisterType((*MysqlConfig8_0)(nil), "yandex.cloud.mdb.mysql.v1.config.MysqlConfig8_0")
	proto.RegisterType((*MysqlConfigSet8_0)(nil), "yandex.cloud.mdb.mysql.v1.config.MysqlConfigSet8_0")
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/mysql/v1/config/mysql8_0.proto", fileDescriptor_d7b57328ffba4745)
}

var fileDescriptor_d7b57328ffba4745 = []byte{
	// 1439 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x96, 0xdb, 0x4f, 0xe3, 0xca,
	0x19, 0xc0, 0x0b, 0xd9, 0xb3, 0xc0, 0xb0, 0x24, 0xce, 0x10, 0x76, 0xbd, 0xec, 0x39, 0x2b, 0x8a,
	0x5a, 0x69, 0x5b, 0x29, 0x17, 0x07, 0xf6, 0x2c, 0xd2, 0xaa, 0x95, 0x26, 0x8e, 0x49, 0xdc, 0x1a,
	0x3b, 0x8c, 0x1d, 0xd0, 0xd2, 0xcb, 0x68, 0x92, 0x4c, 0x82, 0xb5, 0x8e, 0x27, 0x38, 0x63, 0x60,
	0x79, 0xe9, 0x4b, 0xff, 0x8c, 0xfe, 0x3f, 0xfc, 0x3f, 0x7d, 0xe4, 0xa9, 0x9a, 0x71, 0x02, 0x87,
	0x9e, 0x95, 0x22, 0x78, 0x73, 0xbe, 0xcb, 0xef, 0x9b, 0xef, 0x32, 0x5f, 0x06, 0x54, 0xbf, 0xd1,
	0x78, 0xc0, 0xae, 0xab, 0xfd, 0x88, 0xa7, 0x83, 0xea, 0x78, 0xd0, 0xab, 0x8e, 0xbf, 0x4d, 0x2f,
	0xa2, 0xea, 0xa5, 0x51, 0xed, 0xf3, 0x78, 0x18, 0x8e, 0xb2, 0xdf, 0x07, 0xa4, 0x56, 0x99, 0x24,
	0x5c, 0x70, 0xb8, 0x93, 0x39, 0x54, 0x94, 0x43, 0x65, 0x3c, 0xe8, 0x55, 0x94, 0x41, 0xe5, 0xd2,
	0xa8, 0x64, 0x0e, 0xdb, 0xef, 0x47, 0x9c, 0x8f, 0x22, 0x56, 0x55, 0xf6, 0xbd, 0x74, 0x58, 0xbd,
	0x4a, 0xe8, 0x64, 0xc2, 0x92, 0x69, 0x46, 0xd8, 0xfe, 0xe9, 0x51, 0xc8, 0x4b, 0x1a, 0x85, 0x03,
	0x2a, 0x42, 0x1e, 0x67, 0xea, 0xdd, 0x7f, 0x6f, 0x82, 0xfc, 0x91, 0x44, 0x9a, 0x0a, 0x77, 0x40,
	0x6a, 0x90, 0x82, 0x37, 0x61, 0x1c, 0xf3, 0x41, 0x8f, 0xf4, 0xd2, 0xe1, 0x90, 0x25, 0x64, 0xc2,
	0x79, 0x44, 0xa6, 0xe1, 0x0d, 0xd3, 0x97, 0x76, 0x96, 0x3e, 0xac, 0xd7, 0xdf, 0x55, 0xb2, 0x98,
	0x95, 0x79, 0xcc, 0x8a, 0x1d, 0x8b, 0x9f, 0xf7, 0x4f, 0x68, 0x94, 0xb2, 0xc6, 0xc6, 0xdd, 0xad,
	0xb1, 0xf6, 0xe7, 0x3f, 0x7d, 0xac, 0xef, 0xd7, 0x0f, 0x0e, 0x6a, 0xb8, 0x94, 0xa1, 0x1a, 0x8a,
	0xd4, 0xe1, 0x3c, 0xf2, 0xc3, 0x1b, 0x06, 0x31, 0x28, 0x8c, 0xe9, 0x35, 0xe9, 0xf3, 0x38, 0x66,
	0x7d, 0x79, 0x9a, 0xa9, 0xbe, 0xbc, 0x18, 0xfd, 0xea, 0xee, 0xd6, 0x58, 0x35, 0x6a, 0x65, 0xa3,
	0x56, 0xab, 0xd5, 0x70, 0x7e, 0x4c, 0xaf, 0xcd, 0x07, 0x00, 0x6c, 0x82, 0x42, 0xc4, 0xe3, 0x11,
	0xb9, 0x48, 0x59, 0xf2, 0x8d, 0x88, 0x70, 0xcc, 0xf4, 0x9c, 0x62, 0xfe, 0xf8, 0x2b, 0x66, 0x93,
	0xa7, 0xbd, 0x88, 0x29, 0x28, 0xde, 0x90, 0x4e, 0xc7, 0xd2, 0x27, 0x08, 0xc7, 0x0c, 0x7e, 0x06,
	0xeb, 0x23, 0x16, 0xb3, 0x84, 0x46, 0x24, 0xe2, 0x23, 0xfd, 0x85, 0x22, 0x6c, 0xff, 0x8a, 0xd0,
	0xe0, 0x3c, 0xca, 0xfc, 0xc1, 0xcc, 0xdc, 0xe1, 0x23, 0xf8, 0x09, 0xac, 0xd1, 0x74, 0x10, 0x0a,
	0xe5, 0xfa, 0xc3, 0x42, 0xd7, 0x55, 0x65, 0x2c, 0x1d, 0x7d, 0xb0, 0x3a, 0xbd, 0x88, 0xc8, 0x98,
	0x0f, 0x98, 0xfe, 0x72, 0x27, 0xf7, 0x21, 0x5f, 0x3f, 0xa8, 0x2c, 0xea, 0x7c, 0xe5, 0x71, 0xdb,
	0x2a, 0xfe, 0xb1, 0x73, 0xc4, 0x07, 0x0c, 0xaf, 0x4c, 0x2f, 0x22, 0xf9, 0x01, 0xff, 0x01, 0xa0,
	0x2c, 0x32, 0x8d, 0x22, 0x7e, 0xc5, 0x06, 0x64, 0x42, 0xfb, 0x5f, 0x99, 0xd0, 0x57, 0x16, 0xd7,
	0x19, 0xde, 0xdd, 0x1a, 0x79, 0xa3, 0x56, 0xdf, 0x2f, 0x1b, 0x7b, 0xfb, 0x75, 0xe3, 0xd3, 0xa7,
	0xfa, 0x01, 0xd6, 0xc6, 0xf4, 0x1a, 0x65, 0xa4, 0x8e, 0x02, 0xc1, 0x7f, 0x81, 0x9f, 0x06, 0x6c,
	0x48, 0xd3, 0x48, 0x10, 0x9a, 0x8a, 0x73, 0x16, 0x8b, 0xb0, 0xaf, 0x26, 0x8b, 0x4c, 0xa2, 0x74,
	0x14, 0xc6, 0xfa, 0xea, 0xce, 0xd2, 0x87, 0x7c, 0xfd, 0xf3, 0x93, 0x13, 0x41, 0xa9, 0x38, 0xef,
	0x28, 0x04, 0x7e, 0x37, 0x8b, 0x80, 0x1e, 0x05, 0xc8, 0x94, 0x70, 0x04, 0xde, 0xcf, 0xe6, 0x74,
	0x18, 0xa5, 0xd3, 0x73, 0x59, 0x74, 0x42, 0x05, 0x11, 0x89, 0x1c, 0xac, 0xf1, 0x38, 0x14, 0xfa,
	0xda, 0xe2, 0x5c, 0x57, 0xee, 0x6e, 0x8d, 0x9c, 0x51, 0xae, 0xe3, 0xb7, 0x19, 0xeb, 0x50, 0xa2,
	0x1c, 0x3e, 0x42, 0x22, 0x48, 0xae, 0x4d, 0x85, 0x81, 0x14, 0xe8, 0xb3, 0x40, 0x11, 0xef, 0x7f,
	0x25, 0x57, 0x34, 0x14, 0x6a, 0xbe, 0x78, 0x2a, 0x74, 0xb0, 0x38, 0xc4, 0xfa, 0xdd, 0xad, 0xb1,
	0x62, 0x94, 0xe5, 0x75, 0xa8, 0xe1, 0xad, 0x8c, 0xe4, 0xf0, 0xfe, 0xd7, 0x53, 0x1a, 0x8a, 0x20,
	0xc3, 0xc0, 0x1b, 0xb0, 0x25, 0x12, 0x1a, 0x4f, 0xa9, 0x1a, 0x66, 0x12, 0x4e, 0x79, 0xa4, 0x52,
	0xd5, 0xd7, 0x55, 0x11, 0xad, 0x27, 0x17, 0x31, 0x78, 0xa0, 0xd9, 0x73, 0x18, 0x2e, 0x89, 0xef,
	0x48, 0xe1, 0x29, 0xd8, 0x9e, 0xa5, 0x37, 0x49, 0xc2, 0x58, 0xc8, 0x81, 0x21, 0x03, 0x46, 0x07,
	0x32, 0xd9, 0xa9, 0xfe, 0x6a, 0xe1, 0x18, 0xcf, 0xb6, 0x45, 0x47, 0x3a, 0xa3, 0x28, 0x6a, 0xce,
	0x5d, 0xe1, 0x31, 0xd0, 0x62, 0x26, 0x48, 0xc2, 0xe8, 0xe0, 0xbe, 0x5e, 0x1b, 0x8b, 0xeb, 0x05,
	0xee, 0x6e, 0x8d, 0x97, 0x46, 0xd9, 0xa8, 0xcb, 0x4b, 0x1e, 0x33, 0x81, 0x19, 0x1d, 0xcc, 0xeb,
	0xe4, 0x83, 0xa2, 0x44, 0x5e, 0x25, 0xa1, 0x60, 0xf7, 0xcc, 0xfc, 0xd3, 0x98, 0x85, 0x98, 0x89,
	0x53, 0x09, 0x98, 0x43, 0xff, 0x0e, 0x4a, 0xa3, 0x84, 0xa7, 0x13, 0xb9, 0x8f, 0xfa, 0x54, 0x10,
	0x79, 0x6b, 0x22, 0x16, 0xeb, 0x85, 0xc5, 0xdc, 0xfc, 0xdd, 0xad, 0x01, 0xf6, 0xcb, 0x7b, 0x7b,
	0x1f, 0x3f, 0xee, 0xef, 0xef, 0xd5, 0x71, 0x51, 0x81, 0x4c, 0xc5, 0x39, 0xa2, 0xd7, 0x0e, 0x8b,
	0x61, 0x17, 0xe4, 0xc5, 0x78, 0x42, 0x04, 0xed, 0x45, 0x2c, 0xdb, 0xa2, 0xda, 0xf3, 0xae, 0xe0,
	0x2b, 0x31, 0x9e, 0x04, 0x92, 0xa2, 0x56, 0xe8, 0x3f, 0xc1, 0xa6, 0x3c, 0xe7, 0x39, 0xa3, 0x8f,
	0xd8, 0xc5, 0xe7, 0x5f, 0xef, 0x36, 0xa3, 0xbf, 0xe0, 0xff, 0x11, 0x14, 0xe7, 0xd7, 0x5b, 0xd6,
	0x99, 0xdc, 0xf0, 0x98, 0xe9, 0x70, 0x67, 0xe9, 0xc3, 0x1a, 0x2e, 0xcc, 0x14, 0xb2, 0x7e, 0x67,
	0x3c, 0x66, 0xb0, 0x06, 0x4a, 0xfd, 0x73, 0x9a, 0xd0, 0xbe, 0x60, 0x09, 0x99, 0x32, 0x41, 0xa6,
	0x2c, 0xb9, 0x64, 0x89, 0xbe, 0xa9, 0xcc, 0xe1, 0xbd, 0xce, 0x67, 0xc2, 0x57, 0x1a, 0xf8, 0x07,
	0xa0, 0xf5, 0x79, 0x94, 0x0d, 0xe0, 0xdc, 0xba, 0x94, 0xc1, 0xef, 0xe5, 0x99, 0xe9, 0xee, 0x7f,
	0x73, 0x60, 0x65, 0xb6, 0xdb, 0xe0, 0x1b, 0xb0, 0x29, 0x3f, 0xbd, 0xa6, 0x45, 0xba, 0xae, 0xdf,
	0xb1, 0x4c, 0xfb, 0xd0, 0xb6, 0x9a, 0xda, 0x6f, 0xa4, 0x02, 0x39, 0x8e, 0x77, 0x4a, 0x6c, 0xf7,
	0x04, 0x39, 0x76, 0x93, 0x34, 0x51, 0x60, 0xf9, 0xda, 0x12, 0x2c, 0x80, 0x75, 0xe4, 0xfa, 0x36,
	0x39, 0xee, 0x7a, 0x52, 0xb0, 0x0c, 0xdf, 0x83, 0x6d, 0x0b, 0x63, 0x0f, 0x93, 0x43, 0x0f, 0x93,
	0xa6, 0x7d, 0x62, 0xfb, 0xb6, 0xe7, 0x92, 0xc6, 0x17, 0x72, 0x66, 0x61, 0x4f, 0xcb, 0x49, 0x52,
	0xdb, 0x6e, 0xb5, 0x89, 0xeb, 0x05, 0xa4, 0x83, 0x2d, 0xd3, 0x6a, 0x5a, 0xae, 0x69, 0x69, 0x2f,
	0xa0, 0x06, 0x5e, 0xd9, 0x2d, 0xd7, 0xc3, 0x16, 0xf1, 0x3b, 0xc8, 0xb4, 0xb4, 0x1f, 0xe0, 0x5b,
	0xb0, 0xe5, 0x7a, 0x04, 0x75, 0x03, 0x8f, 0x9c, 0x20, 0xa7, 0x6b, 0x11, 0xcf, 0xcd, 0x28, 0x2f,
	0xa1, 0x0e, 0x4a, 0xae, 0x47, 0x1a, 0xc8, 0xfc, 0xab, 0xef, 0x20, 0xbf, 0x4d, 0x2c, 0xdf, 0x44,
	0x1d, 0xcb, 0xd7, 0x56, 0xe0, 0x36, 0x78, 0xed, 0x7a, 0xc4, 0x72, 0x5b, 0xb6, 0x6b, 0x11, 0xbf,
	0xdb, 0xf0, 0x03, 0x3b, 0xe8, 0x06, 0xb6, 0xe7, 0x6a, 0xab, 0xf0, 0x1d, 0x78, 0xe3, 0x7a, 0x32,
	0x33, 0xbb, 0xe5, 0x5a, 0x4d, 0xa9, 0x0d, 0x30, 0x32, 0x95, 0x72, 0x4d, 0xc6, 0x77, 0x3d, 0xc5,
	0x57, 0xc9, 0x69, 0x00, 0x6e, 0x82, 0xc2, 0x5c, 0x62, 0xbb, 0x99, 0x70, 0x1d, 0xbe, 0x06, 0xd0,
	0x73, 0x9d, 0x2f, 0xe4, 0xb0, 0xeb, 0x38, 0xa4, 0x85, 0xbd, 0x6e, 0x87, 0x34, 0xbe, 0x68, 0x05,
	0xc9, 0xee, 0xa0, 0x26, 0x31, 0xdb, 0x08, 0x93, 0xc0, 0xcb, 0xd4, 0x8e, 0xe5, 0xb6, 0x82, 0xb6,
	0xa6, 0x49, 0x52, 0xc7, 0xee, 0x58, 0x3e, 0x41, 0x3e, 0x31, 0x3d, 0xd7, 0x44, 0x81, 0x56, 0x84,
	0x45, 0xb0, 0x81, 0x2d, 0xe4, 0x48, 0xd9, 0xa1, 0xe3, 0xa1, 0x40, 0x83, 0x70, 0x0b, 0x14, 0xfd,
	0x00, 0xdb, 0x66, 0x40, 0x90, 0xe3, 0x90, 0x00, 0x35, 0x1c, 0xcb, 0xd7, 0x36, 0x55, 0x5b, 0x32,
	0x71, 0x80, 0x91, 0xeb, 0xcf, 0x15, 0x25, 0xf8, 0x23, 0xd0, 0x03, 0xfb, 0xc8, 0x22, 0x01, 0xee,
	0x4a, 0xa8, 0x45, 0x0e, 0x67, 0xf9, 0x20, 0x47, 0xdb, 0x82, 0xab, 0xe0, 0x85, 0xec, 0x8d, 0xf6,
	0x5a, 0x76, 0x29, 0xc0, 0xa8, 0x69, 0xcf, 0x54, 0x6f, 0x76, 0x05, 0x00, 0x0f, 0x7f, 0x03, 0xf2,
	0xec, 0xa8, 0x1b, 0xb4, 0x49, 0xc7, 0xe9, 0xb6, 0x6c, 0xf7, 0xff, 0x5a, 0xff, 0x16, 0x6c, 0x1d,
	0x7d, 0xf1, 0x8f, 0x1d, 0xe2, 0xa2, 0xc0, 0x3e, 0xb1, 0x48, 0x07, 0xf9, 0xfe, 0xa9, 0x87, 0x9b,
	0xda, 0x92, 0x54, 0x99, 0xc8, 0x6c, 0xdb, 0x6e, 0x8b, 0xf8, 0x6d, 0x54, 0x7f, 0x50, 0x2d, 0xcb,
	0x8c, 0xa5, 0xe8, 0xe3, 0xcf, 0x0f, 0xc2, 0xdc, 0xee, 0x35, 0x28, 0x7d, 0x6f, 0x6f, 0xc2, 0xdf,
	0x83, 0xdf, 0xaa, 0xc4, 0xb2, 0xb3, 0x13, 0xdb, 0xf7, 0x1c, 0xa4, 0xbe, 0x1e, 0x9f, 0x04, 0x82,
	0x3c, 0xb6, 0x64, 0x8d, 0xbd, 0xa3, 0x23, 0x3b, 0x08, 0x2c, 0x79, 0x84, 0x4d, 0x50, 0xc0, 0x56,
	0xc7, 0x42, 0xaa, 0x24, 0x44, 0xaa, 0xb5, 0x65, 0xd9, 0x4a, 0xdf, 0xc2, 0x36, 0x72, 0xec, 0x33,
	0x29, 0xd6, 0x72, 0xbb, 0xff, 0x59, 0x06, 0xc5, 0x5f, 0x6c, 0x70, 0x9f, 0x09, 0xf9, 0x12, 0xfb,
	0x1b, 0xd0, 0xd8, 0x70, 0x28, 0x1f, 0x38, 0x97, 0x8c, 0x64, 0x7b, 0x7e, 0xf6, 0x04, 0xab, 0x3d,
	0xf5, 0x0f, 0x01, 0x17, 0xee, 0x49, 0x99, 0x0c, 0x1e, 0x83, 0xf5, 0x74, 0xca, 0x92, 0x39, 0x77,
	0xf9, 0x99, 0x5c, 0x20, 0x21, 0x33, 0xe4, 0x29, 0xc8, 0xcf, 0x77, 0xc6, 0x8c, 0x9a, 0x7b, 0x26,
	0x75, 0x63, 0xc6, 0xc9, 0x24, 0x8d, 0x04, 0xfc, 0xee, 0x11, 0x81, 0x4e, 0xc2, 0xef, 0x51, 0xce,
	0xfe, 0x32, 0x0a, 0xc5, 0x79, 0xda, 0xab, 0xf4, 0xf9, 0x78, 0xf6, 0xd4, 0x2e, 0x67, 0xef, 0xde,
	0x11, 0x2f, 0x8f, 0x58, 0xac, 0xb6, 0xe1, 0xc2, 0x37, 0xf8, 0x67, 0xf5, 0xbb, 0xf7, 0x52, 0x59,
	0xef, 0xfd, 0x2f, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x51, 0x2f, 0xb4, 0xb4, 0x0b, 0x00, 0x00,
}
