// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/mysql/v1/config/mysql5_7.proto

package mysql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MysqlConfig5_7_SQLMode int32

const (
	MysqlConfig5_7_SQLMODE_UNSPECIFIED        MysqlConfig5_7_SQLMode = 0
	MysqlConfig5_7_ALLOW_INVALID_DATES        MysqlConfig5_7_SQLMode = 1
	MysqlConfig5_7_ANSI_QUOTES                MysqlConfig5_7_SQLMode = 2
	MysqlConfig5_7_ERROR_FOR_DIVISION_BY_ZERO MysqlConfig5_7_SQLMode = 3
	MysqlConfig5_7_HIGH_NOT_PRECEDENCE        MysqlConfig5_7_SQLMode = 4
	MysqlConfig5_7_IGNORE_SPACE               MysqlConfig5_7_SQLMode = 5
	MysqlConfig5_7_NO_AUTO_VALUE_ON_ZERO      MysqlConfig5_7_SQLMode = 6
	MysqlConfig5_7_NO_BACKSLASH_ESCAPES       MysqlConfig5_7_SQLMode = 7
	MysqlConfig5_7_NO_ENGINE_SUBSTITUTION     MysqlConfig5_7_SQLMode = 8
	MysqlConfig5_7_NO_UNSIGNED_SUBTRACTION    MysqlConfig5_7_SQLMode = 9
	MysqlConfig5_7_NO_ZERO_DATE               MysqlConfig5_7_SQLMode = 10
	MysqlConfig5_7_NO_ZERO_IN_DATE            MysqlConfig5_7_SQLMode = 11
	MysqlConfig5_7_NO_FIELD_OPTIONS           MysqlConfig5_7_SQLMode = 12
	MysqlConfig5_7_NO_KEY_OPTIONS             MysqlConfig5_7_SQLMode = 13
	MysqlConfig5_7_NO_TABLE_OPTIONS           MysqlConfig5_7_SQLMode = 14
	MysqlConfig5_7_ONLY_FULL_GROUP_BY         MysqlConfig5_7_SQLMode = 15
	MysqlConfig5_7_PAD_CHAR_TO_FULL_LENGTH    MysqlConfig5_7_SQLMode = 16
	MysqlConfig5_7_PIPES_AS_CONCAT            MysqlConfig5_7_SQLMode = 17
	MysqlConfig5_7_REAL_AS_FLOAT              MysqlConfig5_7_SQLMode = 18
	MysqlConfig5_7_STRICT_ALL_TABLES          MysqlConfig5_7_SQLMode = 19
	MysqlConfig5_7_STRICT_TRANS_TABLES        MysqlConfig5_7_SQLMode = 20
	MysqlConfig5_7_ANSI                       MysqlConfig5_7_SQLMode = 21
	MysqlConfig5_7_TRADITIONAL                MysqlConfig5_7_SQLMode = 22
	MysqlConfig5_7_DB2                        MysqlConfig5_7_SQLMode = 23
	MysqlConfig5_7_MAXDB                      MysqlConfig5_7_SQLMode = 24
	MysqlConfig5_7_MSSQL                      MysqlConfig5_7_SQLMode = 25
	MysqlConfig5_7_MYSQL323                   MysqlConfig5_7_SQLMode = 26
	MysqlConfig5_7_MYSQL40                    MysqlConfig5_7_SQLMode = 27
	MysqlConfig5_7_ORACLE                     MysqlConfig5_7_SQLMode = 28
	MysqlConfig5_7_POSTGRESQL                 MysqlConfig5_7_SQLMode = 29
)

var MysqlConfig5_7_SQLMode_name = map[int32]string{
	0:  "SQLMODE_UNSPECIFIED",
	1:  "ALLOW_INVALID_DATES",
	2:  "ANSI_QUOTES",
	3:  "ERROR_FOR_DIVISION_BY_ZERO",
	4:  "HIGH_NOT_PRECEDENCE",
	5:  "IGNORE_SPACE",
	6:  "NO_AUTO_VALUE_ON_ZERO",
	7:  "NO_BACKSLASH_ESCAPES",
	8:  "NO_ENGINE_SUBSTITUTION",
	9:  "NO_UNSIGNED_SUBTRACTION",
	10: "NO_ZERO_DATE",
	11: "NO_ZERO_IN_DATE",
	12: "NO_FIELD_OPTIONS",
	13: "NO_KEY_OPTIONS",
	14: "NO_TABLE_OPTIONS",
	15: "ONLY_FULL_GROUP_BY",
	16: "PAD_CHAR_TO_FULL_LENGTH",
	17: "PIPES_AS_CONCAT",
	18: "REAL_AS_FLOAT",
	19: "STRICT_ALL_TABLES",
	20: "STRICT_TRANS_TABLES",
	21: "ANSI",
	22: "TRADITIONAL",
	23: "DB2",
	24: "MAXDB",
	25: "MSSQL",
	26: "MYSQL323",
	27: "MYSQL40",
	28: "ORACLE",
	29: "POSTGRESQL",
}

var MysqlConfig5_7_SQLMode_value = map[string]int32{
	"SQLMODE_UNSPECIFIED":        0,
	"ALLOW_INVALID_DATES":        1,
	"ANSI_QUOTES":                2,
	"ERROR_FOR_DIVISION_BY_ZERO": 3,
	"HIGH_NOT_PRECEDENCE":        4,
	"IGNORE_SPACE":               5,
	"NO_AUTO_VALUE_ON_ZERO":      6,
	"NO_BACKSLASH_ESCAPES":       7,
	"NO_ENGINE_SUBSTITUTION":     8,
	"NO_UNSIGNED_SUBTRACTION":    9,
	"NO_ZERO_DATE":               10,
	"NO_ZERO_IN_DATE":            11,
	"NO_FIELD_OPTIONS":           12,
	"NO_KEY_OPTIONS":             13,
	"NO_TABLE_OPTIONS":           14,
	"ONLY_FULL_GROUP_BY":         15,
	"PAD_CHAR_TO_FULL_LENGTH":    16,
	"PIPES_AS_CONCAT":            17,
	"REAL_AS_FLOAT":              18,
	"STRICT_ALL_TABLES":          19,
	"STRICT_TRANS_TABLES":        20,
	"ANSI":                       21,
	"TRADITIONAL":                22,
	"DB2":                        23,
	"MAXDB":                      24,
	"MSSQL":                      25,
	"MYSQL323":                   26,
	"MYSQL40":                    27,
	"ORACLE":                     28,
	"POSTGRESQL":                 29,
}

func (x MysqlConfig5_7_SQLMode) String() string {
	return proto.EnumName(MysqlConfig5_7_SQLMode_name, int32(x))
}

func (MysqlConfig5_7_SQLMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6392ad3afb3c33c0, []int{0, 0}
}

// Options and structure of `MysqlConfig5_7` reflects MySQL 5.7 configuration file
type MysqlConfig5_7 struct {
	// Size of the InnoDB buffer pool used for caching table and index data.
	//
	// For details, see [MySQL documentation for the parameter](https://dev.mysql.com/doc/refman/5.7/en/innodb-parameters.html#sysvar_innodb_buffer_pool_size).
	InnodbBufferPoolSize *wrappers.Int64Value `protobuf:"bytes,1,opt,name=innodb_buffer_pool_size,json=innodbBufferPoolSize,proto3" json:"innodb_buffer_pool_size,omitempty"`
	// The maximum permitted number of simultaneous client connections.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_connections).
	MaxConnections *wrappers.Int64Value `protobuf:"bytes,2,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	// Time that it takes to process a query before it is considered slow.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_long_query_time).
	LongQueryTime *wrappers.DoubleValue `protobuf:"bytes,3,opt,name=long_query_time,json=longQueryTime,proto3" json:"long_query_time,omitempty"`
	// Enable writing of general query log of MySQL.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_general_log).
	GeneralLog *wrappers.BoolValue `protobuf:"bytes,4,opt,name=general_log,json=generalLog,proto3" json:"general_log,omitempty"`
	// Enable writing of audit log of MySQL.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/mysql-security-excerpt/5.6/en/audit-log-options-variables.html#option_mysqld_audit-log).
	AuditLog *wrappers.BoolValue `protobuf:"bytes,5,opt,name=audit_log,json=auditLog,proto3" json:"audit_log,omitempty"`
	// Server SQL mode of MySQL.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/sql-mode.html#sql-mode-setting).
	SqlMode []MysqlConfig5_7_SQLMode `protobuf:"varint,6,rep,packed,name=sql_mode,json=sqlMode,proto3,enum=yandex.cloud.mdb.mysql.v1.config.MysqlConfig5_7_SQLMode" json:"sql_mode,omitempty"`
	// The maximum size in bytes of one packet.
	//
	// For details, see [MySQL documentation for the variable](https://dev.mysql.com/doc/refman/5.7/en/server-system-variables.html#sysvar_max_allowed_packet).
	MaxAllowedPacket     *wrappers.Int64Value `protobuf:"bytes,7,opt,name=max_allowed_packet,json=maxAllowedPacket,proto3" json:"max_allowed_packet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *MysqlConfig5_7) Reset()         { *m = MysqlConfig5_7{} }
func (m *MysqlConfig5_7) String() string { return proto.CompactTextString(m) }
func (*MysqlConfig5_7) ProtoMessage()    {}
func (*MysqlConfig5_7) Descriptor() ([]byte, []int) {
	return fileDescriptor_6392ad3afb3c33c0, []int{0}
}

func (m *MysqlConfig5_7) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlConfig5_7.Unmarshal(m, b)
}
func (m *MysqlConfig5_7) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlConfig5_7.Marshal(b, m, deterministic)
}
func (m *MysqlConfig5_7) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlConfig5_7.Merge(m, src)
}
func (m *MysqlConfig5_7) XXX_Size() int {
	return xxx_messageInfo_MysqlConfig5_7.Size(m)
}
func (m *MysqlConfig5_7) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlConfig5_7.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlConfig5_7 proto.InternalMessageInfo

func (m *MysqlConfig5_7) GetInnodbBufferPoolSize() *wrappers.Int64Value {
	if m != nil {
		return m.InnodbBufferPoolSize
	}
	return nil
}

func (m *MysqlConfig5_7) GetMaxConnections() *wrappers.Int64Value {
	if m != nil {
		return m.MaxConnections
	}
	return nil
}

func (m *MysqlConfig5_7) GetLongQueryTime() *wrappers.DoubleValue {
	if m != nil {
		return m.LongQueryTime
	}
	return nil
}

func (m *MysqlConfig5_7) GetGeneralLog() *wrappers.BoolValue {
	if m != nil {
		return m.GeneralLog
	}
	return nil
}

func (m *MysqlConfig5_7) GetAuditLog() *wrappers.BoolValue {
	if m != nil {
		return m.AuditLog
	}
	return nil
}

func (m *MysqlConfig5_7) GetSqlMode() []MysqlConfig5_7_SQLMode {
	if m != nil {
		return m.SqlMode
	}
	return nil
}

func (m *MysqlConfig5_7) GetMaxAllowedPacket() *wrappers.Int64Value {
	if m != nil {
		return m.MaxAllowedPacket
	}
	return nil
}

type MysqlConfigSet5_7 struct {
	// Effective settings for a MySQL 5.7 cluster (a combination of settings defined
	// in [user_config] and [default_config]).
	EffectiveConfig *MysqlConfig5_7 `protobuf:"bytes,1,opt,name=effective_config,json=effectiveConfig,proto3" json:"effective_config,omitempty"`
	// User-defined settings for a MySQL 5.7 cluster.
	UserConfig *MysqlConfig5_7 `protobuf:"bytes,2,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	// Default configuration for a MySQL 5.7 cluster.
	DefaultConfig        *MysqlConfig5_7 `protobuf:"bytes,3,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *MysqlConfigSet5_7) Reset()         { *m = MysqlConfigSet5_7{} }
func (m *MysqlConfigSet5_7) String() string { return proto.CompactTextString(m) }
func (*MysqlConfigSet5_7) ProtoMessage()    {}
func (*MysqlConfigSet5_7) Descriptor() ([]byte, []int) {
	return fileDescriptor_6392ad3afb3c33c0, []int{1}
}

func (m *MysqlConfigSet5_7) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MysqlConfigSet5_7.Unmarshal(m, b)
}
func (m *MysqlConfigSet5_7) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MysqlConfigSet5_7.Marshal(b, m, deterministic)
}
func (m *MysqlConfigSet5_7) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MysqlConfigSet5_7.Merge(m, src)
}
func (m *MysqlConfigSet5_7) XXX_Size() int {
	return xxx_messageInfo_MysqlConfigSet5_7.Size(m)
}
func (m *MysqlConfigSet5_7) XXX_DiscardUnknown() {
	xxx_messageInfo_MysqlConfigSet5_7.DiscardUnknown(m)
}

var xxx_messageInfo_MysqlConfigSet5_7 proto.InternalMessageInfo

func (m *MysqlConfigSet5_7) GetEffectiveConfig() *MysqlConfig5_7 {
	if m != nil {
		return m.EffectiveConfig
	}
	return nil
}

func (m *MysqlConfigSet5_7) GetUserConfig() *MysqlConfig5_7 {
	if m != nil {
		return m.UserConfig
	}
	return nil
}

func (m *MysqlConfigSet5_7) GetDefaultConfig() *MysqlConfig5_7 {
	if m != nil {
		return m.DefaultConfig
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.mdb.mysql.v1.config.MysqlConfig5_7_SQLMode", MysqlConfig5_7_SQLMode_name, MysqlConfig5_7_SQLMode_value)
	proto.RegisterType((*MysqlConfig5_7)(nil), "yandex.cloud.mdb.mysql.v1.config.MysqlConfig5_7")
	proto.RegisterType((*MysqlConfigSet5_7)(nil), "yandex.cloud.mdb.mysql.v1.config.MysqlConfigSet5_7")
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/mysql/v1/config/mysql5_7.proto", fileDescriptor_6392ad3afb3c33c0)
}

var fileDescriptor_6392ad3afb3c33c0 = []byte{
	// 971 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x95, 0x5d, 0x53, 0xe3, 0x36,
	0x17, 0xc7, 0x1f, 0x5e, 0x13, 0x14, 0x48, 0x84, 0x78, 0xcb, 0x86, 0xdd, 0x1d, 0x86, 0xab, 0xbd,
	0xc1, 0x79, 0x01, 0x1e, 0x98, 0xd9, 0x69, 0x67, 0x14, 0x5b, 0x04, 0x77, 0x8d, 0xe4, 0x48, 0x0e,
	0x5b, 0xb6, 0xd3, 0xd1, 0x38, 0x89, 0x92, 0x66, 0xea, 0x58, 0x90, 0x17, 0x16, 0xf6, 0xb3, 0xf4,
	0xb2, 0xdf, 0x85, 0xef, 0xd2, 0x8f, 0xc0, 0x55, 0x47, 0x76, 0xa0, 0xdd, 0xd9, 0x0b, 0xa6, 0x7b,
	0x27, 0xfd, 0xcf, 0xf9, 0xff, 0x8e, 0xec, 0x63, 0x1d, 0x83, 0xf2, 0x7d, 0x18, 0x77, 0xd5, 0x5d,
	0xb9, 0x13, 0xe9, 0x69, 0xb7, 0x3c, 0xec, 0xb6, 0xcb, 0xc3, 0xfb, 0xf1, 0x4d, 0x54, 0xbe, 0xad,
	0x96, 0x3b, 0x3a, 0xee, 0x0d, 0xfa, 0xe9, 0xfe, 0x58, 0x9e, 0x58, 0xd7, 0x23, 0x3d, 0xd1, 0x68,
	0x2f, 0x35, 0x58, 0x89, 0xc1, 0x1a, 0x76, 0xdb, 0x56, 0x92, 0x60, 0xdd, 0x56, 0xad, 0xd4, 0x50,
	0x7a, 0xdb, 0xd7, 0xba, 0x1f, 0xa9, 0x72, 0x92, 0xdf, 0x9e, 0xf6, 0xca, 0x9f, 0x47, 0xe1, 0xf5,
	0xb5, 0x1a, 0x8d, 0x53, 0x42, 0xe9, 0xcd, 0x57, 0x25, 0x6f, 0xc3, 0x68, 0xd0, 0x0d, 0x27, 0x03,
	0x1d, 0xa7, 0xe1, 0xfd, 0x3f, 0x57, 0x40, 0xfe, 0xc2, 0x20, 0xed, 0x04, 0x77, 0x2c, 0x4f, 0x50,
	0x08, 0x76, 0x06, 0x71, 0xac, 0xbb, 0x6d, 0xd9, 0x9e, 0xf6, 0x7a, 0x6a, 0x24, 0xaf, 0xb5, 0x8e,
	0xe4, 0x78, 0xf0, 0x45, 0x15, 0xe7, 0xf6, 0xe6, 0xde, 0xe5, 0x6a, 0xbb, 0x56, 0x5a, 0xd3, 0x7a,
	0xaa, 0x69, 0xb9, 0xf1, 0xe4, 0xff, 0x47, 0x97, 0x61, 0x34, 0x55, 0xf5, 0xb5, 0xc7, 0x87, 0xea,
	0xca, 0x8f, 0x3f, 0x1c, 0xd7, 0x8e, 0x6a, 0xa7, 0xa7, 0x15, 0xbe, 0x99, 0xa2, 0xea, 0x09, 0xc9,
	0xd7, 0x3a, 0x12, 0x83, 0x2f, 0x0a, 0x71, 0x50, 0x18, 0x86, 0x77, 0xb2, 0xa3, 0xe3, 0x58, 0x75,
	0xcc, 0x69, 0xc6, 0xc5, 0xf9, 0x97, 0xd1, 0xab, 0x8f, 0x0f, 0xd5, 0x6c, 0xb5, 0x72, 0x50, 0xad,
	0x54, 0x2a, 0x15, 0x9e, 0x1f, 0x86, 0x77, 0xf6, 0x3f, 0x00, 0xe4, 0x80, 0x42, 0xa4, 0xe3, 0xbe,
	0xbc, 0x99, 0xaa, 0xd1, 0xbd, 0x9c, 0x0c, 0x86, 0xaa, 0xb8, 0x90, 0x30, 0x5f, 0x7f, 0xc3, 0x74,
	0xf4, 0xb4, 0x1d, 0xa9, 0x04, 0xca, 0xd7, 0x8c, 0xa9, 0x69, 0x3c, 0xc1, 0x60, 0xa8, 0xd0, 0x7b,
	0x90, 0xeb, 0xab, 0x58, 0x8d, 0xc2, 0x48, 0x46, 0xba, 0x5f, 0x5c, 0x4c, 0x08, 0xa5, 0x6f, 0x08,
	0x75, 0xad, 0xa3, 0xd4, 0x0f, 0x66, 0xe9, 0x9e, 0xee, 0xa3, 0x13, 0xb0, 0x12, 0x4e, 0xbb, 0x83,
	0x49, 0x62, 0x5d, 0x7a, 0xd1, 0x9a, 0x4d, 0x92, 0x8d, 0x51, 0x80, 0xec, 0xf8, 0x26, 0x92, 0x43,
	0xdd, 0x55, 0xc5, 0xe5, 0xbd, 0x85, 0x77, 0xf9, 0xda, 0xa9, 0xf5, 0x52, 0xe7, 0xad, 0xaf, 0xdb,
	0x66, 0x89, 0xa6, 0x77, 0xa1, 0xbb, 0x8a, 0x67, 0xc6, 0x37, 0x91, 0x59, 0xa0, 0x5f, 0x01, 0x32,
	0x2f, 0x39, 0x8c, 0x22, 0xfd, 0x59, 0x75, 0xe5, 0x75, 0xd8, 0xf9, 0x5d, 0x4d, 0x8a, 0x99, 0x97,
	0xdf, 0x33, 0x7a, 0x7c, 0xa8, 0xe6, 0xab, 0x95, 0xda, 0xd1, 0x41, 0xf5, 0xf0, 0xa8, 0x56, 0x3d,
	0x39, 0xa9, 0x9d, 0x72, 0x38, 0x0c, 0xef, 0x70, 0x4a, 0xf2, 0x13, 0xd0, 0xfe, 0x5f, 0x8b, 0x20,
	0x33, 0xab, 0x89, 0x76, 0xc0, 0x86, 0x59, 0x32, 0x87, 0xc8, 0x16, 0x15, 0x3e, 0xb1, 0xdd, 0x33,
	0x97, 0x38, 0xf0, 0x7f, 0x26, 0x80, 0x3d, 0x8f, 0x7d, 0x94, 0x2e, 0xbd, 0xc4, 0x9e, 0xeb, 0x48,
	0x07, 0x07, 0x44, 0xc0, 0x39, 0x54, 0x00, 0x39, 0x4c, 0x85, 0x2b, 0x9b, 0x2d, 0x66, 0x84, 0x79,
	0xf4, 0x16, 0x94, 0x08, 0xe7, 0x8c, 0xcb, 0x33, 0xc6, 0xa5, 0xe3, 0x5e, 0xba, 0xc2, 0x65, 0x54,
	0xd6, 0xaf, 0xe4, 0x27, 0xc2, 0x19, 0x5c, 0x30, 0xa4, 0x73, 0xb7, 0x71, 0x2e, 0x29, 0x0b, 0xa4,
	0xcf, 0x89, 0x4d, 0x1c, 0x42, 0x6d, 0x02, 0x17, 0x11, 0x04, 0xab, 0x6e, 0x83, 0x32, 0x4e, 0xa4,
	0xf0, 0xb1, 0x4d, 0xe0, 0x12, 0x7a, 0x05, 0xb6, 0x28, 0x93, 0xb8, 0x15, 0x30, 0x79, 0x89, 0xbd,
	0x16, 0x91, 0x8c, 0xa6, 0x94, 0x65, 0x54, 0x04, 0x9b, 0x94, 0xc9, 0x3a, 0xb6, 0x3f, 0x08, 0x0f,
	0x8b, 0x73, 0x49, 0x84, 0x8d, 0x7d, 0x22, 0x60, 0x06, 0x95, 0xc0, 0x36, 0x65, 0x92, 0xd0, 0x86,
	0x4b, 0x89, 0x14, 0xad, 0xba, 0x08, 0xdc, 0xa0, 0x15, 0xb8, 0x8c, 0xc2, 0x2c, 0xda, 0x05, 0x3b,
	0x94, 0x99, 0x27, 0x73, 0x1b, 0x94, 0x38, 0x26, 0x1a, 0x70, 0x6c, 0x27, 0xc1, 0x15, 0x53, 0x9f,
	0xb2, 0x84, 0x9f, 0x3c, 0x1c, 0x04, 0x68, 0x03, 0x14, 0x9e, 0x14, 0x97, 0xa6, 0x62, 0x0e, 0x6d,
	0x02, 0x48, 0x99, 0x3c, 0x73, 0x89, 0xe7, 0x48, 0xe6, 0x1b, 0xaf, 0x80, 0xab, 0x08, 0x81, 0x3c,
	0x65, 0xf2, 0x03, 0xb9, 0x7a, 0xd6, 0xd6, 0x66, 0x99, 0x01, 0xae, 0x7b, 0xe4, 0x59, 0xcd, 0xa3,
	0x6d, 0x80, 0x18, 0xf5, 0xae, 0xe4, 0x59, 0xcb, 0xf3, 0x64, 0x83, 0xb3, 0x96, 0x2f, 0xeb, 0x57,
	0xb0, 0x60, 0xce, 0xe6, 0x63, 0x47, 0xda, 0xe7, 0x98, 0xcb, 0x80, 0xa5, 0x61, 0x8f, 0xd0, 0x46,
	0x70, 0x0e, 0xa1, 0x39, 0x89, 0xef, 0xfa, 0x44, 0x48, 0x2c, 0xa4, 0xcd, 0xa8, 0x8d, 0x03, 0xb8,
	0x8e, 0xd6, 0xc1, 0x1a, 0x27, 0xd8, 0x33, 0xda, 0x99, 0xc7, 0x70, 0x00, 0x11, 0xda, 0x02, 0xeb,
	0x22, 0xe0, 0xae, 0x1d, 0x48, 0xec, 0x79, 0x69, 0x69, 0x01, 0x37, 0x92, 0xb6, 0xa6, 0x72, 0xc0,
	0x31, 0x15, 0x4f, 0x81, 0x4d, 0x94, 0x05, 0x8b, 0xa6, 0x7b, 0x70, 0xcb, 0xf4, 0x31, 0xe0, 0xd8,
	0x71, 0xcd, 0x31, 0xb1, 0x07, 0xb7, 0x51, 0x06, 0x2c, 0x38, 0xf5, 0x1a, 0xdc, 0x41, 0x2b, 0x60,
	0xe9, 0x02, 0xff, 0xec, 0xd4, 0x61, 0x31, 0x59, 0x0a, 0xd1, 0xf4, 0xe0, 0x2b, 0xb4, 0x0a, 0xb2,
	0x17, 0x57, 0xa2, 0xe9, 0x1d, 0xd6, 0x0e, 0x61, 0x09, 0xe5, 0x40, 0x26, 0xd9, 0x1d, 0x55, 0xe0,
	0x2e, 0x02, 0x60, 0x99, 0x71, 0x6c, 0x7b, 0x04, 0xbe, 0x46, 0x79, 0x00, 0x7c, 0x26, 0x82, 0x06,
	0x27, 0xc6, 0xf6, 0x66, 0xff, 0x8f, 0x79, 0xb0, 0xfe, 0xaf, 0xef, 0x5d, 0xa8, 0x89, 0x99, 0x54,
	0xbf, 0x00, 0xa8, 0x7a, 0x3d, 0x33, 0x00, 0x6e, 0x95, 0x4c, 0x6f, 0xc5, 0x6c, 0x44, 0x55, 0xfe,
	0xeb, 0xf5, 0xe1, 0x85, 0x67, 0x52, 0xaa, 0xa1, 0x26, 0xc8, 0x4d, 0xc7, 0x6a, 0xf4, 0xc4, 0x9d,
	0xff, 0x4e, 0x2e, 0x30, 0x90, 0x19, 0xf2, 0x23, 0xc8, 0x77, 0x55, 0x2f, 0x9c, 0x46, 0x93, 0x27,
	0xea, 0xc2, 0x77, 0x52, 0xd7, 0x66, 0x9c, 0x54, 0xa9, 0x7b, 0x9f, 0x7e, 0xea, 0x0f, 0x26, 0xbf,
	0x4d, 0xdb, 0x56, 0x47, 0x0f, 0x67, 0x3f, 0x99, 0x83, 0x74, 0xe2, 0xf7, 0xf5, 0x41, 0x5f, 0xc5,
	0xc9, 0x35, 0x7f, 0xf1, 0xef, 0xf3, 0x3e, 0xd9, 0xb7, 0x97, 0x93, 0xec, 0xc3, 0xbf, 0x03, 0x00,
	0x00, 0xff, 0xff, 0xae, 0x44, 0x48, 0x11, 0xae, 0x06, 0x00, 0x00,
}
