// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/postgresql/v1/config/host12.proto

package postgresql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PostgresqlHostConfig12_ConstraintExclusion int32

const (
	PostgresqlHostConfig12_CONSTRAINT_EXCLUSION_UNSPECIFIED PostgresqlHostConfig12_ConstraintExclusion = 0
	PostgresqlHostConfig12_CONSTRAINT_EXCLUSION_ON          PostgresqlHostConfig12_ConstraintExclusion = 1
	PostgresqlHostConfig12_CONSTRAINT_EXCLUSION_OFF         PostgresqlHostConfig12_ConstraintExclusion = 2
	PostgresqlHostConfig12_CONSTRAINT_EXCLUSION_PARTITION   PostgresqlHostConfig12_ConstraintExclusion = 3
)

var PostgresqlHostConfig12_ConstraintExclusion_name = map[int32]string{
	0: "CONSTRAINT_EXCLUSION_UNSPECIFIED",
	1: "CONSTRAINT_EXCLUSION_ON",
	2: "CONSTRAINT_EXCLUSION_OFF",
	3: "CONSTRAINT_EXCLUSION_PARTITION",
}

var PostgresqlHostConfig12_ConstraintExclusion_value = map[string]int32{
	"CONSTRAINT_EXCLUSION_UNSPECIFIED": 0,
	"CONSTRAINT_EXCLUSION_ON":          1,
	"CONSTRAINT_EXCLUSION_OFF":         2,
	"CONSTRAINT_EXCLUSION_PARTITION":   3,
}

func (x PostgresqlHostConfig12_ConstraintExclusion) String() string {
	return proto.EnumName(PostgresqlHostConfig12_ConstraintExclusion_name, int32(x))
}

func (PostgresqlHostConfig12_ConstraintExclusion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 0}
}

type PostgresqlHostConfig12_ForceParallelMode int32

const (
	PostgresqlHostConfig12_FORCE_PARALLEL_MODE_UNSPECIFIED PostgresqlHostConfig12_ForceParallelMode = 0
	PostgresqlHostConfig12_FORCE_PARALLEL_MODE_ON          PostgresqlHostConfig12_ForceParallelMode = 1
	PostgresqlHostConfig12_FORCE_PARALLEL_MODE_OFF         PostgresqlHostConfig12_ForceParallelMode = 2
	PostgresqlHostConfig12_FORCE_PARALLEL_MODE_REGRESS     PostgresqlHostConfig12_ForceParallelMode = 3
)

var PostgresqlHostConfig12_ForceParallelMode_name = map[int32]string{
	0: "FORCE_PARALLEL_MODE_UNSPECIFIED",
	1: "FORCE_PARALLEL_MODE_ON",
	2: "FORCE_PARALLEL_MODE_OFF",
	3: "FORCE_PARALLEL_MODE_REGRESS",
}

var PostgresqlHostConfig12_ForceParallelMode_value = map[string]int32{
	"FORCE_PARALLEL_MODE_UNSPECIFIED": 0,
	"FORCE_PARALLEL_MODE_ON":          1,
	"FORCE_PARALLEL_MODE_OFF":         2,
	"FORCE_PARALLEL_MODE_REGRESS":     3,
}

func (x PostgresqlHostConfig12_ForceParallelMode) String() string {
	return proto.EnumName(PostgresqlHostConfig12_ForceParallelMode_name, int32(x))
}

func (PostgresqlHostConfig12_ForceParallelMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 1}
}

type PostgresqlHostConfig12_LogLevel int32

const (
	PostgresqlHostConfig12_LOG_LEVEL_UNSPECIFIED PostgresqlHostConfig12_LogLevel = 0
	PostgresqlHostConfig12_LOG_LEVEL_DEBUG5      PostgresqlHostConfig12_LogLevel = 1
	PostgresqlHostConfig12_LOG_LEVEL_DEBUG4      PostgresqlHostConfig12_LogLevel = 2
	PostgresqlHostConfig12_LOG_LEVEL_DEBUG3      PostgresqlHostConfig12_LogLevel = 3
	PostgresqlHostConfig12_LOG_LEVEL_DEBUG2      PostgresqlHostConfig12_LogLevel = 4
	PostgresqlHostConfig12_LOG_LEVEL_DEBUG1      PostgresqlHostConfig12_LogLevel = 5
	PostgresqlHostConfig12_LOG_LEVEL_LOG         PostgresqlHostConfig12_LogLevel = 6
	PostgresqlHostConfig12_LOG_LEVEL_NOTICE      PostgresqlHostConfig12_LogLevel = 7
	PostgresqlHostConfig12_LOG_LEVEL_WARNING     PostgresqlHostConfig12_LogLevel = 8
	PostgresqlHostConfig12_LOG_LEVEL_ERROR       PostgresqlHostConfig12_LogLevel = 9
	PostgresqlHostConfig12_LOG_LEVEL_FATAL       PostgresqlHostConfig12_LogLevel = 10
	PostgresqlHostConfig12_LOG_LEVEL_PANIC       PostgresqlHostConfig12_LogLevel = 11
)

var PostgresqlHostConfig12_LogLevel_name = map[int32]string{
	0:  "LOG_LEVEL_UNSPECIFIED",
	1:  "LOG_LEVEL_DEBUG5",
	2:  "LOG_LEVEL_DEBUG4",
	3:  "LOG_LEVEL_DEBUG3",
	4:  "LOG_LEVEL_DEBUG2",
	5:  "LOG_LEVEL_DEBUG1",
	6:  "LOG_LEVEL_LOG",
	7:  "LOG_LEVEL_NOTICE",
	8:  "LOG_LEVEL_WARNING",
	9:  "LOG_LEVEL_ERROR",
	10: "LOG_LEVEL_FATAL",
	11: "LOG_LEVEL_PANIC",
}

var PostgresqlHostConfig12_LogLevel_value = map[string]int32{
	"LOG_LEVEL_UNSPECIFIED": 0,
	"LOG_LEVEL_DEBUG5":      1,
	"LOG_LEVEL_DEBUG4":      2,
	"LOG_LEVEL_DEBUG3":      3,
	"LOG_LEVEL_DEBUG2":      4,
	"LOG_LEVEL_DEBUG1":      5,
	"LOG_LEVEL_LOG":         6,
	"LOG_LEVEL_NOTICE":      7,
	"LOG_LEVEL_WARNING":     8,
	"LOG_LEVEL_ERROR":       9,
	"LOG_LEVEL_FATAL":       10,
	"LOG_LEVEL_PANIC":       11,
}

func (x PostgresqlHostConfig12_LogLevel) String() string {
	return proto.EnumName(PostgresqlHostConfig12_LogLevel_name, int32(x))
}

func (PostgresqlHostConfig12_LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 2}
}

type PostgresqlHostConfig12_LogErrorVerbosity int32

const (
	PostgresqlHostConfig12_LOG_ERROR_VERBOSITY_UNSPECIFIED PostgresqlHostConfig12_LogErrorVerbosity = 0
	PostgresqlHostConfig12_LOG_ERROR_VERBOSITY_TERSE       PostgresqlHostConfig12_LogErrorVerbosity = 1
	PostgresqlHostConfig12_LOG_ERROR_VERBOSITY_DEFAULT     PostgresqlHostConfig12_LogErrorVerbosity = 2
	PostgresqlHostConfig12_LOG_ERROR_VERBOSITY_VERBOSE     PostgresqlHostConfig12_LogErrorVerbosity = 3
)

var PostgresqlHostConfig12_LogErrorVerbosity_name = map[int32]string{
	0: "LOG_ERROR_VERBOSITY_UNSPECIFIED",
	1: "LOG_ERROR_VERBOSITY_TERSE",
	2: "LOG_ERROR_VERBOSITY_DEFAULT",
	3: "LOG_ERROR_VERBOSITY_VERBOSE",
}

var PostgresqlHostConfig12_LogErrorVerbosity_value = map[string]int32{
	"LOG_ERROR_VERBOSITY_UNSPECIFIED": 0,
	"LOG_ERROR_VERBOSITY_TERSE":       1,
	"LOG_ERROR_VERBOSITY_DEFAULT":     2,
	"LOG_ERROR_VERBOSITY_VERBOSE":     3,
}

func (x PostgresqlHostConfig12_LogErrorVerbosity) String() string {
	return proto.EnumName(PostgresqlHostConfig12_LogErrorVerbosity_name, int32(x))
}

func (PostgresqlHostConfig12_LogErrorVerbosity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 3}
}

type PostgresqlHostConfig12_LogStatement int32

const (
	PostgresqlHostConfig12_LOG_STATEMENT_UNSPECIFIED PostgresqlHostConfig12_LogStatement = 0
	PostgresqlHostConfig12_LOG_STATEMENT_NONE        PostgresqlHostConfig12_LogStatement = 1
	PostgresqlHostConfig12_LOG_STATEMENT_DDL         PostgresqlHostConfig12_LogStatement = 2
	PostgresqlHostConfig12_LOG_STATEMENT_MOD         PostgresqlHostConfig12_LogStatement = 3
	PostgresqlHostConfig12_LOG_STATEMENT_ALL         PostgresqlHostConfig12_LogStatement = 4
)

var PostgresqlHostConfig12_LogStatement_name = map[int32]string{
	0: "LOG_STATEMENT_UNSPECIFIED",
	1: "LOG_STATEMENT_NONE",
	2: "LOG_STATEMENT_DDL",
	3: "LOG_STATEMENT_MOD",
	4: "LOG_STATEMENT_ALL",
}

var PostgresqlHostConfig12_LogStatement_value = map[string]int32{
	"LOG_STATEMENT_UNSPECIFIED": 0,
	"LOG_STATEMENT_NONE":        1,
	"LOG_STATEMENT_DDL":         2,
	"LOG_STATEMENT_MOD":         3,
	"LOG_STATEMENT_ALL":         4,
}

func (x PostgresqlHostConfig12_LogStatement) String() string {
	return proto.EnumName(PostgresqlHostConfig12_LogStatement_name, int32(x))
}

func (PostgresqlHostConfig12_LogStatement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 4}
}

type PostgresqlHostConfig12_TransactionIsolation int32

const (
	PostgresqlHostConfig12_TRANSACTION_ISOLATION_UNSPECIFIED      PostgresqlHostConfig12_TransactionIsolation = 0
	PostgresqlHostConfig12_TRANSACTION_ISOLATION_READ_UNCOMMITTED PostgresqlHostConfig12_TransactionIsolation = 1
	PostgresqlHostConfig12_TRANSACTION_ISOLATION_READ_COMMITTED   PostgresqlHostConfig12_TransactionIsolation = 2
	PostgresqlHostConfig12_TRANSACTION_ISOLATION_REPEATABLE_READ  PostgresqlHostConfig12_TransactionIsolation = 3
	PostgresqlHostConfig12_TRANSACTION_ISOLATION_SERIALIZABLE     PostgresqlHostConfig12_TransactionIsolation = 4
)

var PostgresqlHostConfig12_TransactionIsolation_name = map[int32]string{
	0: "TRANSACTION_ISOLATION_UNSPECIFIED",
	1: "TRANSACTION_ISOLATION_READ_UNCOMMITTED",
	2: "TRANSACTION_ISOLATION_READ_COMMITTED",
	3: "TRANSACTION_ISOLATION_REPEATABLE_READ",
	4: "TRANSACTION_ISOLATION_SERIALIZABLE",
}

var PostgresqlHostConfig12_TransactionIsolation_value = map[string]int32{
	"TRANSACTION_ISOLATION_UNSPECIFIED":      0,
	"TRANSACTION_ISOLATION_READ_UNCOMMITTED": 1,
	"TRANSACTION_ISOLATION_READ_COMMITTED":   2,
	"TRANSACTION_ISOLATION_REPEATABLE_READ":  3,
	"TRANSACTION_ISOLATION_SERIALIZABLE":     4,
}

func (x PostgresqlHostConfig12_TransactionIsolation) String() string {
	return proto.EnumName(PostgresqlHostConfig12_TransactionIsolation_name, int32(x))
}

func (PostgresqlHostConfig12_TransactionIsolation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 5}
}

type PostgresqlHostConfig12_ByteaOutput int32

const (
	PostgresqlHostConfig12_BYTEA_OUTPUT_UNSPECIFIED PostgresqlHostConfig12_ByteaOutput = 0
	PostgresqlHostConfig12_BYTEA_OUTPUT_HEX         PostgresqlHostConfig12_ByteaOutput = 1
	PostgresqlHostConfig12_BYTEA_OUTPUT_ESCAPED     PostgresqlHostConfig12_ByteaOutput = 2
)

var PostgresqlHostConfig12_ByteaOutput_name = map[int32]string{
	0: "BYTEA_OUTPUT_UNSPECIFIED",
	1: "BYTEA_OUTPUT_HEX",
	2: "BYTEA_OUTPUT_ESCAPED",
}

var PostgresqlHostConfig12_ByteaOutput_value = map[string]int32{
	"BYTEA_OUTPUT_UNSPECIFIED": 0,
	"BYTEA_OUTPUT_HEX":         1,
	"BYTEA_OUTPUT_ESCAPED":     2,
}

func (x PostgresqlHostConfig12_ByteaOutput) String() string {
	return proto.EnumName(PostgresqlHostConfig12_ByteaOutput_name, int32(x))
}

func (PostgresqlHostConfig12_ByteaOutput) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 6}
}

type PostgresqlHostConfig12_XmlBinary int32

const (
	PostgresqlHostConfig12_XML_BINARY_UNSPECIFIED PostgresqlHostConfig12_XmlBinary = 0
	PostgresqlHostConfig12_XML_BINARY_BASE64      PostgresqlHostConfig12_XmlBinary = 1
	PostgresqlHostConfig12_XML_BINARY_HEX         PostgresqlHostConfig12_XmlBinary = 2
)

var PostgresqlHostConfig12_XmlBinary_name = map[int32]string{
	0: "XML_BINARY_UNSPECIFIED",
	1: "XML_BINARY_BASE64",
	2: "XML_BINARY_HEX",
}

var PostgresqlHostConfig12_XmlBinary_value = map[string]int32{
	"XML_BINARY_UNSPECIFIED": 0,
	"XML_BINARY_BASE64":      1,
	"XML_BINARY_HEX":         2,
}

func (x PostgresqlHostConfig12_XmlBinary) String() string {
	return proto.EnumName(PostgresqlHostConfig12_XmlBinary_name, int32(x))
}

func (PostgresqlHostConfig12_XmlBinary) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 7}
}

type PostgresqlHostConfig12_XmlOption int32

const (
	PostgresqlHostConfig12_XML_OPTION_UNSPECIFIED PostgresqlHostConfig12_XmlOption = 0
	PostgresqlHostConfig12_XML_OPTION_DOCUMENT    PostgresqlHostConfig12_XmlOption = 1
	PostgresqlHostConfig12_XML_OPTION_CONTENT     PostgresqlHostConfig12_XmlOption = 2
)

var PostgresqlHostConfig12_XmlOption_name = map[int32]string{
	0: "XML_OPTION_UNSPECIFIED",
	1: "XML_OPTION_DOCUMENT",
	2: "XML_OPTION_CONTENT",
}

var PostgresqlHostConfig12_XmlOption_value = map[string]int32{
	"XML_OPTION_UNSPECIFIED": 0,
	"XML_OPTION_DOCUMENT":    1,
	"XML_OPTION_CONTENT":     2,
}

func (x PostgresqlHostConfig12_XmlOption) String() string {
	return proto.EnumName(PostgresqlHostConfig12_XmlOption_name, int32(x))
}

func (PostgresqlHostConfig12_XmlOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 8}
}

type PostgresqlHostConfig12_BackslashQuote int32

const (
	PostgresqlHostConfig12_BACKSLASH_QUOTE_UNSPECIFIED   PostgresqlHostConfig12_BackslashQuote = 0
	PostgresqlHostConfig12_BACKSLASH_QUOTE               PostgresqlHostConfig12_BackslashQuote = 1
	PostgresqlHostConfig12_BACKSLASH_QUOTE_ON            PostgresqlHostConfig12_BackslashQuote = 2
	PostgresqlHostConfig12_BACKSLASH_QUOTE_OFF           PostgresqlHostConfig12_BackslashQuote = 3
	PostgresqlHostConfig12_BACKSLASH_QUOTE_SAFE_ENCODING PostgresqlHostConfig12_BackslashQuote = 4
)

var PostgresqlHostConfig12_BackslashQuote_name = map[int32]string{
	0: "BACKSLASH_QUOTE_UNSPECIFIED",
	1: "BACKSLASH_QUOTE",
	2: "BACKSLASH_QUOTE_ON",
	3: "BACKSLASH_QUOTE_OFF",
	4: "BACKSLASH_QUOTE_SAFE_ENCODING",
}

var PostgresqlHostConfig12_BackslashQuote_value = map[string]int32{
	"BACKSLASH_QUOTE_UNSPECIFIED":   0,
	"BACKSLASH_QUOTE":               1,
	"BACKSLASH_QUOTE_ON":            2,
	"BACKSLASH_QUOTE_OFF":           3,
	"BACKSLASH_QUOTE_SAFE_ENCODING": 4,
}

func (x PostgresqlHostConfig12_BackslashQuote) String() string {
	return proto.EnumName(PostgresqlHostConfig12_BackslashQuote_name, int32(x))
}

func (PostgresqlHostConfig12_BackslashQuote) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0, 9}
}

// Options and structure of `PostgresqlConfig` reflects PostgreSQL configuration file
// parameters which detailed description is available in
// [PostgreSQL documentation](https://www.postgresql.org/docs/11/runtime-config.html).
type PostgresqlHostConfig12 struct {
	RecoveryMinApplyDelay           *wrappers.Int64Value                        `protobuf:"bytes,1,opt,name=recovery_min_apply_delay,json=recoveryMinApplyDelay,proto3" json:"recovery_min_apply_delay,omitempty"`
	SharedBuffers                   *wrappers.Int64Value                        `protobuf:"bytes,2,opt,name=shared_buffers,json=sharedBuffers,proto3" json:"shared_buffers,omitempty"`
	TempBuffers                     *wrappers.Int64Value                        `protobuf:"bytes,3,opt,name=temp_buffers,json=tempBuffers,proto3" json:"temp_buffers,omitempty"`
	WorkMem                         *wrappers.Int64Value                        `protobuf:"bytes,4,opt,name=work_mem,json=workMem,proto3" json:"work_mem,omitempty"`
	TempFileLimit                   *wrappers.Int64Value                        `protobuf:"bytes,5,opt,name=temp_file_limit,json=tempFileLimit,proto3" json:"temp_file_limit,omitempty"`
	BackendFlushAfter               *wrappers.Int64Value                        `protobuf:"bytes,6,opt,name=backend_flush_after,json=backendFlushAfter,proto3" json:"backend_flush_after,omitempty"`
	OldSnapshotThreshold            *wrappers.Int64Value                        `protobuf:"bytes,7,opt,name=old_snapshot_threshold,json=oldSnapshotThreshold,proto3" json:"old_snapshot_threshold,omitempty"`
	MaxStandbyStreamingDelay        *wrappers.Int64Value                        `protobuf:"bytes,8,opt,name=max_standby_streaming_delay,json=maxStandbyStreamingDelay,proto3" json:"max_standby_streaming_delay,omitempty"`
	ConstraintExclusion             PostgresqlHostConfig12_ConstraintExclusion  `protobuf:"varint,9,opt,name=constraint_exclusion,json=constraintExclusion,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_ConstraintExclusion" json:"constraint_exclusion,omitempty"`
	CursorTupleFraction             *wrappers.DoubleValue                       `protobuf:"bytes,10,opt,name=cursor_tuple_fraction,json=cursorTupleFraction,proto3" json:"cursor_tuple_fraction,omitempty"`
	FromCollapseLimit               *wrappers.Int64Value                        `protobuf:"bytes,11,opt,name=from_collapse_limit,json=fromCollapseLimit,proto3" json:"from_collapse_limit,omitempty"`
	JoinCollapseLimit               *wrappers.Int64Value                        `protobuf:"bytes,12,opt,name=join_collapse_limit,json=joinCollapseLimit,proto3" json:"join_collapse_limit,omitempty"`
	ForceParallelMode               PostgresqlHostConfig12_ForceParallelMode    `protobuf:"varint,13,opt,name=force_parallel_mode,json=forceParallelMode,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_ForceParallelMode" json:"force_parallel_mode,omitempty"`
	ClientMinMessages               PostgresqlHostConfig12_LogLevel             `protobuf:"varint,14,opt,name=client_min_messages,json=clientMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_LogLevel" json:"client_min_messages,omitempty"`
	LogMinMessages                  PostgresqlHostConfig12_LogLevel             `protobuf:"varint,15,opt,name=log_min_messages,json=logMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_LogLevel" json:"log_min_messages,omitempty"`
	LogMinErrorStatement            PostgresqlHostConfig12_LogLevel             `protobuf:"varint,16,opt,name=log_min_error_statement,json=logMinErrorStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_LogLevel" json:"log_min_error_statement,omitempty"`
	LogMinDurationStatement         *wrappers.Int64Value                        `protobuf:"bytes,17,opt,name=log_min_duration_statement,json=logMinDurationStatement,proto3" json:"log_min_duration_statement,omitempty"`
	LogCheckpoints                  *wrappers.BoolValue                         `protobuf:"bytes,18,opt,name=log_checkpoints,json=logCheckpoints,proto3" json:"log_checkpoints,omitempty"`
	LogConnections                  *wrappers.BoolValue                         `protobuf:"bytes,19,opt,name=log_connections,json=logConnections,proto3" json:"log_connections,omitempty"`
	LogDisconnections               *wrappers.BoolValue                         `protobuf:"bytes,20,opt,name=log_disconnections,json=logDisconnections,proto3" json:"log_disconnections,omitempty"`
	LogDuration                     *wrappers.BoolValue                         `protobuf:"bytes,21,opt,name=log_duration,json=logDuration,proto3" json:"log_duration,omitempty"`
	LogErrorVerbosity               PostgresqlHostConfig12_LogErrorVerbosity    `protobuf:"varint,22,opt,name=log_error_verbosity,json=logErrorVerbosity,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_LogErrorVerbosity" json:"log_error_verbosity,omitempty"`
	LogLockWaits                    *wrappers.BoolValue                         `protobuf:"bytes,23,opt,name=log_lock_waits,json=logLockWaits,proto3" json:"log_lock_waits,omitempty"`
	LogStatement                    PostgresqlHostConfig12_LogStatement         `protobuf:"varint,24,opt,name=log_statement,json=logStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_LogStatement" json:"log_statement,omitempty"`
	LogTempFiles                    *wrappers.Int64Value                        `protobuf:"bytes,25,opt,name=log_temp_files,json=logTempFiles,proto3" json:"log_temp_files,omitempty"`
	SearchPath                      string                                      `protobuf:"bytes,26,opt,name=search_path,json=searchPath,proto3" json:"search_path,omitempty"`
	RowSecurity                     *wrappers.BoolValue                         `protobuf:"bytes,27,opt,name=row_security,json=rowSecurity,proto3" json:"row_security,omitempty"`
	DefaultTransactionIsolation     PostgresqlHostConfig12_TransactionIsolation `protobuf:"varint,28,opt,name=default_transaction_isolation,json=defaultTransactionIsolation,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_TransactionIsolation" json:"default_transaction_isolation,omitempty"`
	StatementTimeout                *wrappers.Int64Value                        `protobuf:"bytes,29,opt,name=statement_timeout,json=statementTimeout,proto3" json:"statement_timeout,omitempty"`
	LockTimeout                     *wrappers.Int64Value                        `protobuf:"bytes,30,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`
	IdleInTransactionSessionTimeout *wrappers.Int64Value                        `protobuf:"bytes,31,opt,name=idle_in_transaction_session_timeout,json=idleInTransactionSessionTimeout,proto3" json:"idle_in_transaction_session_timeout,omitempty"`
	ByteaOutput                     PostgresqlHostConfig12_ByteaOutput          `protobuf:"varint,32,opt,name=bytea_output,json=byteaOutput,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_ByteaOutput" json:"bytea_output,omitempty"`
	Xmlbinary                       PostgresqlHostConfig12_XmlBinary            `protobuf:"varint,33,opt,name=xmlbinary,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_XmlBinary" json:"xmlbinary,omitempty"`
	Xmloption                       PostgresqlHostConfig12_XmlOption            `protobuf:"varint,34,opt,name=xmloption,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_XmlOption" json:"xmloption,omitempty"`
	GinPendingListLimit             *wrappers.Int64Value                        `protobuf:"bytes,35,opt,name=gin_pending_list_limit,json=ginPendingListLimit,proto3" json:"gin_pending_list_limit,omitempty"`
	DeadlockTimeout                 *wrappers.Int64Value                        `protobuf:"bytes,36,opt,name=deadlock_timeout,json=deadlockTimeout,proto3" json:"deadlock_timeout,omitempty"`
	MaxLocksPerTransaction          *wrappers.Int64Value                        `protobuf:"bytes,37,opt,name=max_locks_per_transaction,json=maxLocksPerTransaction,proto3" json:"max_locks_per_transaction,omitempty"`
	MaxPredLocksPerTransaction      *wrappers.Int64Value                        `protobuf:"bytes,38,opt,name=max_pred_locks_per_transaction,json=maxPredLocksPerTransaction,proto3" json:"max_pred_locks_per_transaction,omitempty"`
	ArrayNulls                      *wrappers.BoolValue                         `protobuf:"bytes,39,opt,name=array_nulls,json=arrayNulls,proto3" json:"array_nulls,omitempty"`
	BackslashQuote                  PostgresqlHostConfig12_BackslashQuote       `protobuf:"varint,40,opt,name=backslash_quote,json=backslashQuote,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_BackslashQuote" json:"backslash_quote,omitempty"`
	DefaultWithOids                 *wrappers.BoolValue                         `protobuf:"bytes,41,opt,name=default_with_oids,json=defaultWithOids,proto3" json:"default_with_oids,omitempty"`
	EscapeStringWarning             *wrappers.BoolValue                         `protobuf:"bytes,42,opt,name=escape_string_warning,json=escapeStringWarning,proto3" json:"escape_string_warning,omitempty"`
	LoCompatPrivileges              *wrappers.BoolValue                         `protobuf:"bytes,43,opt,name=lo_compat_privileges,json=loCompatPrivileges,proto3" json:"lo_compat_privileges,omitempty"`
	OperatorPrecedenceWarning       *wrappers.BoolValue                         `protobuf:"bytes,44,opt,name=operator_precedence_warning,json=operatorPrecedenceWarning,proto3" json:"operator_precedence_warning,omitempty"`
	QuoteAllIdentifiers             *wrappers.BoolValue                         `protobuf:"bytes,45,opt,name=quote_all_identifiers,json=quoteAllIdentifiers,proto3" json:"quote_all_identifiers,omitempty"`
	StandardConformingStrings       *wrappers.BoolValue                         `protobuf:"bytes,46,opt,name=standard_conforming_strings,json=standardConformingStrings,proto3" json:"standard_conforming_strings,omitempty"`
	SynchronizeSeqscans             *wrappers.BoolValue                         `protobuf:"bytes,47,opt,name=synchronize_seqscans,json=synchronizeSeqscans,proto3" json:"synchronize_seqscans,omitempty"`
	TransformNullEquals             *wrappers.BoolValue                         `protobuf:"bytes,48,opt,name=transform_null_equals,json=transformNullEquals,proto3" json:"transform_null_equals,omitempty"`
	ExitOnError                     *wrappers.BoolValue                         `protobuf:"bytes,49,opt,name=exit_on_error,json=exitOnError,proto3" json:"exit_on_error,omitempty"`
	SeqPageCost                     *wrappers.DoubleValue                       `protobuf:"bytes,50,opt,name=seq_page_cost,json=seqPageCost,proto3" json:"seq_page_cost,omitempty"`
	RandomPageCost                  *wrappers.DoubleValue                       `protobuf:"bytes,51,opt,name=random_page_cost,json=randomPageCost,proto3" json:"random_page_cost,omitempty"`
	EnableBitmapscan                *wrappers.BoolValue                         `protobuf:"bytes,54,opt,name=enable_bitmapscan,json=enableBitmapscan,proto3" json:"enable_bitmapscan,omitempty"`
	EnableHashagg                   *wrappers.BoolValue                         `protobuf:"bytes,55,opt,name=enable_hashagg,json=enableHashagg,proto3" json:"enable_hashagg,omitempty"`
	EnableHashjoin                  *wrappers.BoolValue                         `protobuf:"bytes,56,opt,name=enable_hashjoin,json=enableHashjoin,proto3" json:"enable_hashjoin,omitempty"`
	EnableIndexscan                 *wrappers.BoolValue                         `protobuf:"bytes,57,opt,name=enable_indexscan,json=enableIndexscan,proto3" json:"enable_indexscan,omitempty"`
	EnableIndexonlyscan             *wrappers.BoolValue                         `protobuf:"bytes,58,opt,name=enable_indexonlyscan,json=enableIndexonlyscan,proto3" json:"enable_indexonlyscan,omitempty"`
	EnableMaterial                  *wrappers.BoolValue                         `protobuf:"bytes,59,opt,name=enable_material,json=enableMaterial,proto3" json:"enable_material,omitempty"`
	EnableMergejoin                 *wrappers.BoolValue                         `protobuf:"bytes,60,opt,name=enable_mergejoin,json=enableMergejoin,proto3" json:"enable_mergejoin,omitempty"`
	EnableNestloop                  *wrappers.BoolValue                         `protobuf:"bytes,61,opt,name=enable_nestloop,json=enableNestloop,proto3" json:"enable_nestloop,omitempty"`
	EnableSeqscan                   *wrappers.BoolValue                         `protobuf:"bytes,62,opt,name=enable_seqscan,json=enableSeqscan,proto3" json:"enable_seqscan,omitempty"`
	EnableSort                      *wrappers.BoolValue                         `protobuf:"bytes,63,opt,name=enable_sort,json=enableSort,proto3" json:"enable_sort,omitempty"`
	EnableTidscan                   *wrappers.BoolValue                         `protobuf:"bytes,64,opt,name=enable_tidscan,json=enableTidscan,proto3" json:"enable_tidscan,omitempty"`
	MaxParallelWorkers              *wrappers.Int64Value                        `protobuf:"bytes,65,opt,name=max_parallel_workers,json=maxParallelWorkers,proto3" json:"max_parallel_workers,omitempty"`
	MaxParallelWorkersPerGather     *wrappers.Int64Value                        `protobuf:"bytes,66,opt,name=max_parallel_workers_per_gather,json=maxParallelWorkersPerGather,proto3" json:"max_parallel_workers_per_gather,omitempty"`
	Timezone                        string                                      `protobuf:"bytes,67,opt,name=timezone,proto3" json:"timezone,omitempty"`
	EffectiveIoConcurrency          *wrappers.Int64Value                        `protobuf:"bytes,68,opt,name=effective_io_concurrency,json=effectiveIoConcurrency,proto3" json:"effective_io_concurrency,omitempty"`
	EffectiveCacheSize              *wrappers.Int64Value                        `protobuf:"bytes,69,opt,name=effective_cache_size,json=effectiveCacheSize,proto3" json:"effective_cache_size,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                                    `json:"-"`
	XXX_unrecognized                []byte                                      `json:"-"`
	XXX_sizecache                   int32                                       `json:"-"`
}

func (m *PostgresqlHostConfig12) Reset()         { *m = PostgresqlHostConfig12{} }
func (m *PostgresqlHostConfig12) String() string { return proto.CompactTextString(m) }
func (*PostgresqlHostConfig12) ProtoMessage()    {}
func (*PostgresqlHostConfig12) Descriptor() ([]byte, []int) {
	return fileDescriptor_83e092514b9d43a7, []int{0}
}

func (m *PostgresqlHostConfig12) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresqlHostConfig12.Unmarshal(m, b)
}
func (m *PostgresqlHostConfig12) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresqlHostConfig12.Marshal(b, m, deterministic)
}
func (m *PostgresqlHostConfig12) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresqlHostConfig12.Merge(m, src)
}
func (m *PostgresqlHostConfig12) XXX_Size() int {
	return xxx_messageInfo_PostgresqlHostConfig12.Size(m)
}
func (m *PostgresqlHostConfig12) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresqlHostConfig12.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresqlHostConfig12 proto.InternalMessageInfo

func (m *PostgresqlHostConfig12) GetRecoveryMinApplyDelay() *wrappers.Int64Value {
	if m != nil {
		return m.RecoveryMinApplyDelay
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetSharedBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.SharedBuffers
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetTempBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.TempBuffers
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.WorkMem
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetTempFileLimit() *wrappers.Int64Value {
	if m != nil {
		return m.TempFileLimit
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetBackendFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.BackendFlushAfter
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetOldSnapshotThreshold() *wrappers.Int64Value {
	if m != nil {
		return m.OldSnapshotThreshold
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetMaxStandbyStreamingDelay() *wrappers.Int64Value {
	if m != nil {
		return m.MaxStandbyStreamingDelay
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetConstraintExclusion() PostgresqlHostConfig12_ConstraintExclusion {
	if m != nil {
		return m.ConstraintExclusion
	}
	return PostgresqlHostConfig12_CONSTRAINT_EXCLUSION_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetCursorTupleFraction() *wrappers.DoubleValue {
	if m != nil {
		return m.CursorTupleFraction
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetFromCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.FromCollapseLimit
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetJoinCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.JoinCollapseLimit
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetForceParallelMode() PostgresqlHostConfig12_ForceParallelMode {
	if m != nil {
		return m.ForceParallelMode
	}
	return PostgresqlHostConfig12_FORCE_PARALLEL_MODE_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetClientMinMessages() PostgresqlHostConfig12_LogLevel {
	if m != nil {
		return m.ClientMinMessages
	}
	return PostgresqlHostConfig12_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetLogMinMessages() PostgresqlHostConfig12_LogLevel {
	if m != nil {
		return m.LogMinMessages
	}
	return PostgresqlHostConfig12_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetLogMinErrorStatement() PostgresqlHostConfig12_LogLevel {
	if m != nil {
		return m.LogMinErrorStatement
	}
	return PostgresqlHostConfig12_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetLogMinDurationStatement() *wrappers.Int64Value {
	if m != nil {
		return m.LogMinDurationStatement
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetLogCheckpoints() *wrappers.BoolValue {
	if m != nil {
		return m.LogCheckpoints
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetLogConnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogConnections
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetLogDisconnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogDisconnections
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetLogDuration() *wrappers.BoolValue {
	if m != nil {
		return m.LogDuration
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetLogErrorVerbosity() PostgresqlHostConfig12_LogErrorVerbosity {
	if m != nil {
		return m.LogErrorVerbosity
	}
	return PostgresqlHostConfig12_LOG_ERROR_VERBOSITY_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetLogLockWaits() *wrappers.BoolValue {
	if m != nil {
		return m.LogLockWaits
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetLogStatement() PostgresqlHostConfig12_LogStatement {
	if m != nil {
		return m.LogStatement
	}
	return PostgresqlHostConfig12_LOG_STATEMENT_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetLogTempFiles() *wrappers.Int64Value {
	if m != nil {
		return m.LogTempFiles
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetSearchPath() string {
	if m != nil {
		return m.SearchPath
	}
	return ""
}

func (m *PostgresqlHostConfig12) GetRowSecurity() *wrappers.BoolValue {
	if m != nil {
		return m.RowSecurity
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetDefaultTransactionIsolation() PostgresqlHostConfig12_TransactionIsolation {
	if m != nil {
		return m.DefaultTransactionIsolation
	}
	return PostgresqlHostConfig12_TRANSACTION_ISOLATION_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetStatementTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.StatementTimeout
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetLockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.LockTimeout
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetIdleInTransactionSessionTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.IdleInTransactionSessionTimeout
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetByteaOutput() PostgresqlHostConfig12_ByteaOutput {
	if m != nil {
		return m.ByteaOutput
	}
	return PostgresqlHostConfig12_BYTEA_OUTPUT_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetXmlbinary() PostgresqlHostConfig12_XmlBinary {
	if m != nil {
		return m.Xmlbinary
	}
	return PostgresqlHostConfig12_XML_BINARY_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetXmloption() PostgresqlHostConfig12_XmlOption {
	if m != nil {
		return m.Xmloption
	}
	return PostgresqlHostConfig12_XML_OPTION_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetGinPendingListLimit() *wrappers.Int64Value {
	if m != nil {
		return m.GinPendingListLimit
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetDeadlockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.DeadlockTimeout
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetMaxLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetMaxPredLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxPredLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetArrayNulls() *wrappers.BoolValue {
	if m != nil {
		return m.ArrayNulls
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetBackslashQuote() PostgresqlHostConfig12_BackslashQuote {
	if m != nil {
		return m.BackslashQuote
	}
	return PostgresqlHostConfig12_BACKSLASH_QUOTE_UNSPECIFIED
}

func (m *PostgresqlHostConfig12) GetDefaultWithOids() *wrappers.BoolValue {
	if m != nil {
		return m.DefaultWithOids
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEscapeStringWarning() *wrappers.BoolValue {
	if m != nil {
		return m.EscapeStringWarning
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetLoCompatPrivileges() *wrappers.BoolValue {
	if m != nil {
		return m.LoCompatPrivileges
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetOperatorPrecedenceWarning() *wrappers.BoolValue {
	if m != nil {
		return m.OperatorPrecedenceWarning
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetQuoteAllIdentifiers() *wrappers.BoolValue {
	if m != nil {
		return m.QuoteAllIdentifiers
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetStandardConformingStrings() *wrappers.BoolValue {
	if m != nil {
		return m.StandardConformingStrings
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetSynchronizeSeqscans() *wrappers.BoolValue {
	if m != nil {
		return m.SynchronizeSeqscans
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetTransformNullEquals() *wrappers.BoolValue {
	if m != nil {
		return m.TransformNullEquals
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetExitOnError() *wrappers.BoolValue {
	if m != nil {
		return m.ExitOnError
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetSeqPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.SeqPageCost
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetRandomPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.RandomPageCost
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableBitmapscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableBitmapscan
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableHashagg() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHashagg
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableHashjoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHashjoin
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableIndexscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableIndexscan
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableIndexonlyscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableIndexonlyscan
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableMaterial() *wrappers.BoolValue {
	if m != nil {
		return m.EnableMaterial
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableMergejoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnableMergejoin
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableNestloop() *wrappers.BoolValue {
	if m != nil {
		return m.EnableNestloop
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableSeqscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableSeqscan
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableSort() *wrappers.BoolValue {
	if m != nil {
		return m.EnableSort
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEnableTidscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableTidscan
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetMaxParallelWorkers() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelWorkers
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetMaxParallelWorkersPerGather() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelWorkersPerGather
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *PostgresqlHostConfig12) GetEffectiveIoConcurrency() *wrappers.Int64Value {
	if m != nil {
		return m.EffectiveIoConcurrency
	}
	return nil
}

func (m *PostgresqlHostConfig12) GetEffectiveCacheSize() *wrappers.Int64Value {
	if m != nil {
		return m.EffectiveCacheSize
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_ConstraintExclusion", PostgresqlHostConfig12_ConstraintExclusion_name, PostgresqlHostConfig12_ConstraintExclusion_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_ForceParallelMode", PostgresqlHostConfig12_ForceParallelMode_name, PostgresqlHostConfig12_ForceParallelMode_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_LogLevel", PostgresqlHostConfig12_LogLevel_name, PostgresqlHostConfig12_LogLevel_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_LogErrorVerbosity", PostgresqlHostConfig12_LogErrorVerbosity_name, PostgresqlHostConfig12_LogErrorVerbosity_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_LogStatement", PostgresqlHostConfig12_LogStatement_name, PostgresqlHostConfig12_LogStatement_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_TransactionIsolation", PostgresqlHostConfig12_TransactionIsolation_name, PostgresqlHostConfig12_TransactionIsolation_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_ByteaOutput", PostgresqlHostConfig12_ByteaOutput_name, PostgresqlHostConfig12_ByteaOutput_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_XmlBinary", PostgresqlHostConfig12_XmlBinary_name, PostgresqlHostConfig12_XmlBinary_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_XmlOption", PostgresqlHostConfig12_XmlOption_name, PostgresqlHostConfig12_XmlOption_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12_BackslashQuote", PostgresqlHostConfig12_BackslashQuote_name, PostgresqlHostConfig12_BackslashQuote_value)
	proto.RegisterType((*PostgresqlHostConfig12)(nil), "yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig12")
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/postgresql/v1/config/host12.proto", fileDescriptor_83e092514b9d43a7)
}

var fileDescriptor_83e092514b9d43a7 = []byte{
	// 2520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x99, 0xdb, 0x73, 0xdb, 0xc6,
	0xf5, 0xc7, 0x7f, 0x94, 0x1c, 0xc7, 0x5e, 0xdd, 0xc0, 0xa5, 0x24, 0xc3, 0x52, 0x7c, 0x89, 0x12,
	0xe7, 0xe7, 0xa4, 0x15, 0x25, 0xca, 0xb2, 0xad, 0x34, 0x4d, 0x1a, 0x90, 0x04, 0x65, 0xb6, 0x20,
	0xc1, 0x80, 0x90, 0xed, 0xa4, 0x93, 0xd9, 0x59, 0x02, 0x4b, 0x12, 0x35, 0x80, 0x85, 0x77, 0x41,
	0x49, 0xf4, 0x4c, 0xa7, 0xd3, 0x99, 0x3e, 0xf5, 0xb1, 0x0f, 0x9d, 0x69, 0xfb, 0x07, 0xf9, 0x3f,
	0xe9, 0x1f, 0xe1, 0xa7, 0xce, 0xe2, 0xc2, 0x8b, 0xc4, 0x14, 0x4c, 0xe5, 0x37, 0xf1, 0xec, 0x7e,
	0x3f, 0xe7, 0xec, 0x9e, 0xb3, 0x37, 0x08, 0x1c, 0x0c, 0xb1, 0x6f, 0x93, 0xf3, 0x3d, 0xcb, 0xa5,
	0x03, 0x7b, 0xcf, 0xb3, 0x3b, 0x7b, 0x01, 0xe5, 0x61, 0x8f, 0x11, 0xfe, 0xda, 0xdd, 0x3b, 0x2d,
	0xed, 0x59, 0xd4, 0xef, 0x3a, 0xbd, 0xbd, 0x3e, 0xe5, 0x61, 0xe9, 0xa0, 0x18, 0x30, 0x1a, 0x52,
	0xf8, 0x20, 0xd6, 0x14, 0x23, 0x4d, 0xd1, 0xb3, 0x3b, 0xc5, 0xb1, 0xa6, 0x78, 0x5a, 0x2a, 0xc6,
	0x9a, 0xad, 0xbb, 0x3d, 0x4a, 0x7b, 0x2e, 0xd9, 0x8b, 0x44, 0x9d, 0x41, 0x77, 0xef, 0x8c, 0xe1,
	0x20, 0x20, 0x8c, 0xc7, 0x98, 0xad, 0x3b, 0x53, 0xae, 0x4f, 0xb1, 0xeb, 0xd8, 0x38, 0x74, 0xa8,
	0x1f, 0x37, 0xef, 0xfc, 0xeb, 0x08, 0x6c, 0xb6, 0x46, 0xdc, 0x67, 0x94, 0x87, 0x95, 0x88, 0x5b,
	0x3a, 0x80, 0x26, 0x90, 0x19, 0xb1, 0xe8, 0x29, 0x61, 0x43, 0xe4, 0x39, 0x3e, 0xc2, 0x41, 0xe0,
	0x0e, 0x91, 0x4d, 0x5c, 0x3c, 0x94, 0x73, 0xf7, 0x73, 0x0f, 0x97, 0x0e, 0xb6, 0x8b, 0xb1, 0xf3,
	0x62, 0xea, 0xbc, 0x58, 0xf7, 0xc3, 0x27, 0x87, 0xcf, 0xb1, 0x3b, 0x20, 0xc6, 0x46, 0x2a, 0x6e,
	0x38, 0xbe, 0x22, 0xa4, 0x55, 0xa1, 0x84, 0x65, 0xb0, 0xca, 0xfb, 0x98, 0x11, 0x1b, 0x75, 0x06,
	0xdd, 0x2e, 0x61, 0x5c, 0x5e, 0xc8, 0x66, 0xad, 0xc4, 0x92, 0x72, 0xac, 0x80, 0xdf, 0x80, 0xe5,
	0x90, 0x78, 0xc1, 0x88, 0xb0, 0x98, 0x4d, 0x58, 0x12, 0x82, 0x54, 0xff, 0x04, 0xdc, 0x38, 0xa3,
	0xec, 0x15, 0xf2, 0x88, 0x27, 0x5f, 0xcb, 0xd6, 0x7e, 0x28, 0x3a, 0x37, 0x88, 0x07, 0x2b, 0x60,
	0x2d, 0xf2, 0xdb, 0x75, 0x5c, 0x82, 0x5c, 0xc7, 0x73, 0x42, 0xf9, 0x83, 0x39, 0x82, 0x17, 0x9a,
	0x9a, 0xe3, 0x12, 0x4d, 0x28, 0xe0, 0x0b, 0x50, 0xe8, 0x60, 0xeb, 0x15, 0xf1, 0x6d, 0xd4, 0x75,
	0x07, 0xbc, 0x8f, 0x70, 0x37, 0x24, 0x4c, 0xbe, 0x9e, 0x09, 0x2a, 0x83, 0x77, 0x6f, 0x4b, 0xd7,
	0xf7, 0x77, 0x0f, 0xf6, 0x0f, 0x8f, 0x8c, 0x7c, 0xc2, 0xa8, 0x09, 0x84, 0x22, 0x08, 0x10, 0x81,
	0x4d, 0xea, 0xda, 0x88, 0xfb, 0x38, 0xe0, 0x7d, 0x1a, 0xa2, 0xb0, 0xcf, 0x08, 0xef, 0x53, 0xd7,
	0x96, 0x3f, 0xcc, 0x66, 0x2f, 0xbf, 0x7b, 0x5b, 0xba, 0xb1, 0x5b, 0xda, 0x3d, 0x7a, 0x72, 0xb8,
	0xbf, 0x6f, 0xac, 0x53, 0xd7, 0x6e, 0x27, 0x1c, 0x33, 0xc5, 0xc0, 0x1f, 0xc0, 0xb6, 0x87, 0xcf,
	0x11, 0x0f, 0xb1, 0x6f, 0x77, 0x86, 0x88, 0x87, 0x8c, 0x60, 0xcf, 0xf1, 0x7b, 0x49, 0x4d, 0xdc,
	0xc8, 0x9e, 0x0a, 0xd9, 0xc3, 0xe7, 0xed, 0x58, 0xde, 0x4e, 0xd5, 0x71, 0x59, 0xfc, 0x25, 0x07,
	0xd6, 0x2d, 0xea, 0xf3, 0x90, 0x61, 0xc7, 0x0f, 0x11, 0x39, 0xb7, 0xdc, 0x01, 0x77, 0xa8, 0x2f,
	0xdf, 0xbc, 0x9f, 0x7b, 0xb8, 0x7a, 0xf0, 0x5d, 0x71, 0xae, 0xd5, 0x50, 0x9c, 0x5d, 0xca, 0xc5,
	0xca, 0x88, 0xac, 0xa6, 0x60, 0xa3, 0x60, 0x5d, 0x36, 0xc2, 0x16, 0xd8, 0xb0, 0x06, 0x8c, 0x53,
	0x86, 0xc2, 0x41, 0xe0, 0x12, 0xd4, 0x65, 0xd8, 0x12, 0xab, 0x45, 0x06, 0xd1, 0xe0, 0x3e, 0xba,
	0x34, 0xb8, 0x2a, 0x1d, 0x74, 0x5c, 0x12, 0x8f, 0xae, 0x10, 0x4b, 0x4d, 0xa1, 0xac, 0x25, 0x42,
	0xf8, 0x23, 0x28, 0x74, 0x19, 0xf5, 0x90, 0x45, 0x5d, 0x17, 0x07, 0x3c, 0xad, 0x9b, 0xa5, 0xec,
	0x94, 0x48, 0xef, 0xde, 0x96, 0x96, 0x4b, 0xbb, 0x07, 0xa5, 0xc3, 0xa7, 0x87, 0x47, 0x8f, 0x9e,
	0x1c, 0x3e, 0x35, 0xf2, 0x82, 0x54, 0x49, 0x40, 0x71, 0x35, 0xfd, 0x08, 0x0a, 0x7f, 0xa0, 0x8e,
	0x7f, 0x11, 0xbf, 0xfc, 0x3f, 0xe1, 0x05, 0x69, 0x1a, 0xff, 0x27, 0x50, 0xe8, 0x52, 0x66, 0x11,
	0x14, 0x60, 0x86, 0x5d, 0x97, 0xb8, 0xc8, 0xa3, 0x36, 0x91, 0x57, 0xa2, 0xa4, 0xe8, 0x57, 0x4b,
	0x4a, 0x4d, 0x80, 0x5b, 0x09, 0xb7, 0x41, 0x6d, 0x62, 0xe4, 0xbb, 0x17, 0x4d, 0xf0, 0x14, 0x14,
	0x2c, 0xd7, 0x21, 0x7e, 0x18, 0x6d, 0x41, 0x1e, 0xe1, 0x1c, 0xf7, 0x08, 0x97, 0x57, 0xa3, 0x00,
	0x6a, 0x57, 0x0b, 0x40, 0xa3, 0x3d, 0x8d, 0x9c, 0x12, 0xd7, 0xc8, 0xc7, 0x2e, 0x1a, 0x8e, 0xdf,
	0x48, 0x1c, 0xc0, 0x00, 0x48, 0x2e, 0xed, 0x4d, 0x3b, 0x5d, 0x7b, 0xaf, 0x4e, 0x57, 0x5d, 0xda,
	0x9b, 0xf4, 0xf8, 0x47, 0x70, 0x2b, 0xf5, 0x48, 0x18, 0xa3, 0x4c, 0xac, 0xb3, 0x90, 0x78, 0xc4,
	0x0f, 0x65, 0xe9, 0xbd, 0x3a, 0x5e, 0x8f, 0x1d, 0xab, 0xc2, 0x49, 0x3b, 0xf5, 0x01, 0x5f, 0x82,
	0xad, 0xd4, 0xbd, 0x3d, 0x60, 0xd1, 0x11, 0x31, 0x11, 0x41, 0x3e, 0x7b, 0x6d, 0xdf, 0x8a, 0xb1,
	0xd5, 0x44, 0x3c, 0x26, 0x57, 0xc0, 0x9a, 0x20, 0x5b, 0x7d, 0x62, 0xbd, 0x0a, 0xa8, 0xe3, 0x87,
	0x5c, 0x86, 0x11, 0x6e, 0xeb, 0x12, 0xae, 0x4c, 0xa9, 0x1b, 0xd3, 0xc4, 0xec, 0x54, 0xc6, 0x8a,
	0x11, 0x84, 0xfa, 0x3e, 0x89, 0x16, 0x16, 0x97, 0x0b, 0xf3, 0x41, 0xc6, 0x0a, 0x58, 0x07, 0x50,
	0x40, 0x6c, 0x87, 0x4f, 0x72, 0xd6, 0x33, 0x39, 0x79, 0x97, 0xf6, 0xaa, 0x53, 0x22, 0xf8, 0x35,
	0x58, 0x8e, 0x50, 0xc9, 0x68, 0xe5, 0x8d, 0x4c, 0xc8, 0x92, 0x80, 0x24, 0xdd, 0xc5, 0xba, 0x12,
	0xf2, 0x38, 0xd1, 0xa7, 0x84, 0x75, 0x28, 0x77, 0xc2, 0xa1, 0xbc, 0xf9, 0x3e, 0xd6, 0x95, 0x46,
	0x7b, 0x51, 0x6e, 0x9f, 0xa7, 0xd8, 0x28, 0xfe, 0x69, 0x13, 0xfc, 0x16, 0x88, 0xc9, 0x41, 0x2e,
	0xb5, 0x5e, 0xa1, 0x33, 0xec, 0x84, 0x5c, 0xbe, 0x95, 0x39, 0x02, 0x31, 0x62, 0x8d, 0x5a, 0xaf,
	0x5e, 0x88, 0xfe, 0x90, 0x82, 0x15, 0x41, 0x18, 0xd7, 0x88, 0x1c, 0x05, 0xff, 0xdb, 0x2b, 0x07,
	0x3f, 0xaa, 0x9c, 0xc8, 0xe1, 0xb8, 0x8e, 0x94, 0x38, 0xe4, 0xd1, 0x09, 0xcc, 0xe5, 0xdb, 0xd9,
	0x55, 0x29, 0x10, 0x66, 0x72, 0xfe, 0x72, 0x78, 0x0f, 0x2c, 0x71, 0x82, 0x99, 0xd5, 0x47, 0x01,
	0x0e, 0xfb, 0xf2, 0xd6, 0xfd, 0xdc, 0xc3, 0x9b, 0x06, 0x88, 0x4d, 0x2d, 0x1c, 0xf6, 0x45, 0x5a,
	0x19, 0x3d, 0x43, 0x9c, 0x58, 0x03, 0x26, 0x12, 0xb2, 0x9d, 0x9d, 0x56, 0x46, 0xcf, 0xda, 0x49,
	0x77, 0xf8, 0xf7, 0x1c, 0xb8, 0x63, 0x93, 0x2e, 0x1e, 0xb8, 0x21, 0x0a, 0x19, 0xf6, 0x79, 0x7c,
	0x08, 0x20, 0x87, 0x53, 0x37, 0xae, 0x93, 0x8f, 0xa2, 0x49, 0x32, 0xae, 0x36, 0x49, 0xe6, 0x18,
	0x5d, 0x4f, 0xc9, 0xc6, 0x76, 0xe2, 0x78, 0x56, 0x23, 0x7c, 0x06, 0xf2, 0xa3, 0x44, 0xa1, 0xd0,
	0xf1, 0x08, 0x1d, 0x84, 0xf2, 0x9d, 0xec, 0xe9, 0x93, 0x46, 0x2a, 0x33, 0x16, 0x89, 0xbb, 0x57,
	0x54, 0x34, 0x29, 0xe4, 0xee, 0x1c, 0x77, 0x2f, 0x21, 0x48, 0xf5, 0x0e, 0xf8, 0xc4, 0xb1, 0x5d,
	0x82, 0x1c, 0x7f, 0x6a, 0x86, 0x38, 0xe1, 0xe2, 0x00, 0x1e, 0x61, 0xef, 0x65, 0x63, 0xef, 0x09,
	0x4e, 0xdd, 0x9f, 0x18, 0x6f, 0x3b, 0x86, 0xa4, 0xae, 0x5c, 0xb0, 0xdc, 0x19, 0x86, 0x04, 0x23,
	0x3a, 0x08, 0x83, 0x41, 0x28, 0xdf, 0x8f, 0xe6, 0xbe, 0x7e, 0xb5, 0xb9, 0x2f, 0x0b, 0xa2, 0x1e,
	0x01, 0x8d, 0xa5, 0xce, 0xf8, 0x07, 0x24, 0xe0, 0xe6, 0xb9, 0xe7, 0x76, 0x1c, 0x1f, 0xb3, 0xa1,
	0xfc, 0x71, 0xe4, 0xea, 0xf8, 0x6a, 0xae, 0x5e, 0x7a, 0x6e, 0x39, 0xc2, 0x19, 0x63, 0x72, 0xe2,
	0x86, 0x06, 0x51, 0x35, 0xed, 0xbc, 0x27, 0x37, 0x7a, 0x84, 0x33, 0xc6, 0x64, 0xd8, 0x02, 0x9b,
	0x3d, 0xc7, 0x47, 0x01, 0xf1, 0x6d, 0x71, 0xc3, 0x73, 0x1d, 0x1e, 0x26, 0x57, 0x8b, 0x4f, 0xb2,
	0x33, 0x53, 0xe8, 0x39, 0x7e, 0x2b, 0x56, 0x6a, 0x0e, 0x0f, 0xe3, 0xab, 0x44, 0x0d, 0x48, 0x36,
	0xc1, 0xf6, 0x54, 0xf1, 0x7c, 0x9a, 0xcd, 0x5a, 0x4b, 0x45, 0x69, 0x56, 0x9f, 0x83, 0xdb, 0xe2,
	0x16, 0x2a, 0x4c, 0x1c, 0x05, 0x84, 0x4d, 0x96, 0x91, 0xfc, 0x20, 0x1b, 0xb8, 0xe9, 0xe1, 0x73,
	0xb1, 0x8b, 0xf1, 0x16, 0x61, 0x13, 0xb5, 0x03, 0x11, 0xb8, 0x2b, 0xb8, 0x81, 0x78, 0x9a, 0xcc,
	0x86, 0x7f, 0x96, 0x0d, 0xdf, 0xf2, 0xf0, 0x79, 0x8b, 0x11, 0x7b, 0x96, 0x83, 0xaf, 0xc0, 0x12,
	0x66, 0x0c, 0x0f, 0x91, 0x3f, 0x70, 0x5d, 0x2e, 0xff, 0x7f, 0xe6, 0xd6, 0x02, 0xa2, 0xee, 0x4d,
	0xd1, 0x1b, 0x0e, 0xc0, 0x9a, 0xb8, 0xf1, 0x73, 0x17, 0xf3, 0x3e, 0x7a, 0x3d, 0xa0, 0x21, 0x91,
	0x1f, 0x46, 0xc9, 0xd7, 0xae, 0x58, 0xce, 0x29, 0xf4, 0x3b, 0xc1, 0x34, 0x56, 0x3b, 0x53, 0xbf,
	0x61, 0x0d, 0xe4, 0xd3, 0xfd, 0xec, 0xcc, 0x09, 0xfb, 0x88, 0x3a, 0x36, 0x97, 0x3f, 0xcf, 0x8c,
	0x7c, 0x2d, 0x11, 0xbd, 0x70, 0xc2, 0xbe, 0xee, 0xd8, 0x1c, 0x36, 0xc1, 0x06, 0xe1, 0x16, 0x0e,
	0x88, 0x78, 0x35, 0x88, 0x82, 0x3a, 0xc3, 0xcc, 0x77, 0xfc, 0x9e, 0xfc, 0x45, 0x26, 0xab, 0x10,
	0x0b, 0xdb, 0x91, 0xee, 0x45, 0x2c, 0x83, 0x1a, 0x58, 0x77, 0x29, 0xb2, 0xa8, 0x17, 0xe0, 0x10,
	0x05, 0xcc, 0x39, 0x75, 0x5c, 0x22, 0xae, 0x68, 0xbf, 0xc8, 0xc4, 0x41, 0x97, 0x56, 0x22, 0x59,
	0x6b, 0xa4, 0x12, 0x0f, 0x1b, 0x1a, 0x10, 0x86, 0x43, 0xca, 0x44, 0xfe, 0x2d, 0x62, 0x13, 0xdf,
	0x22, 0xa3, 0x18, 0x7f, 0x99, 0x09, 0xbd, 0x9d, 0xca, 0x5b, 0x23, 0x75, 0x1a, 0x69, 0x13, 0x6c,
	0x44, 0xe9, 0x42, 0xd8, 0x75, 0x91, 0x63, 0x13, 0x3f, 0x74, 0xba, 0x8e, 0x78, 0xb4, 0xee, 0x66,
	0x8f, 0x3c, 0x12, 0x2a, 0xae, 0x5b, 0x1f, 0xcb, 0x44, 0xac, 0xd1, 0x03, 0x0c, 0x33, 0x5b, 0xdc,
	0x86, 0xba, 0x94, 0x45, 0x4f, 0xb0, 0x78, 0x5a, 0xb9, 0x5c, 0xcc, 0x8e, 0x35, 0x95, 0x57, 0x46,
	0xea, 0x78, 0x6e, 0x39, 0x6c, 0x80, 0x75, 0x3e, 0xf4, 0xad, 0x3e, 0xa3, 0xbe, 0xf3, 0x86, 0x20,
	0x4e, 0x5e, 0x73, 0x0b, 0xfb, 0x5c, 0xde, 0xcb, 0x0e, 0x75, 0x42, 0xd7, 0x4e, 0x64, 0x62, 0xe8,
	0xd1, 0xf2, 0x11, 0x5e, 0xa2, 0xa2, 0x47, 0xe4, 0xf5, 0x00, 0xbb, 0x5c, 0xde, 0xcf, 0xe6, 0x8d,
	0x84, 0xa2, 0xfc, 0xd5, 0x48, 0x06, 0xbf, 0x01, 0x2b, 0xe4, 0xdc, 0x09, 0x11, 0x4d, 0x6e, 0xc8,
	0x72, 0x29, 0xfb, 0x74, 0x16, 0x02, 0x3d, 0xbe, 0xeb, 0xc2, 0x6f, 0xc1, 0x0a, 0x27, 0xaf, 0x51,
	0x80, 0x7b, 0x04, 0x59, 0x94, 0x87, 0xf2, 0xc1, 0x1c, 0x8f, 0xba, 0x25, 0x4e, 0x5e, 0xb7, 0x70,
	0x8f, 0x54, 0x28, 0x8f, 0xf6, 0x30, 0x86, 0x7d, 0x9b, 0x7a, 0x13, 0x90, 0x47, 0x73, 0x40, 0x56,
	0x63, 0xd5, 0x88, 0x73, 0x0c, 0xf2, 0xc4, 0xc7, 0x1d, 0x97, 0xa0, 0x8e, 0x13, 0x7a, 0x38, 0x10,
	0xf3, 0x25, 0x3f, 0xc9, 0x1c, 0x8d, 0x14, 0x8b, 0xca, 0x23, 0x8d, 0xb8, 0x13, 0x25, 0xa0, 0x3e,
	0xe6, 0x7d, 0xdc, 0xeb, 0xc9, 0x4f, 0x33, 0x29, 0x2b, 0xb1, 0xe2, 0x59, 0x2c, 0x10, 0x37, 0xeb,
	0x09, 0x84, 0x78, 0x02, 0xca, 0x47, 0xd9, 0x37, 0xeb, 0x31, 0x43, 0x28, 0xa0, 0x0a, 0x92, 0xd8,
	0x90, 0x23, 0x36, 0xa3, 0x68, 0x3c, 0x5f, 0x66, 0x6f, 0x13, 0xb1, 0xa6, 0x9e, 0x4a, 0x44, 0x01,
	0x4e, 0x62, 0xa8, 0xef, 0x0e, 0x23, 0xd4, 0xaf, 0xe6, 0xd8, 0x25, 0xc6, 0xa8, 0x54, 0x36, 0x31,
	0x34, 0x0f, 0x87, 0x84, 0x39, 0xd8, 0x95, 0xbf, 0x9a, 0x77, 0x68, 0x8d, 0x44, 0x31, 0x31, 0x34,
	0x8f, 0xb0, 0x1e, 0x89, 0x26, 0xe8, 0xd7, 0xf3, 0x0e, 0xad, 0x91, 0x4a, 0x26, 0x62, 0xf1, 0x09,
	0x0f, 0x5d, 0x4a, 0x03, 0xf9, 0xeb, 0x79, 0x63, 0x69, 0x26, 0x8a, 0x89, 0x74, 0x27, 0x6b, 0x53,
	0xfe, 0x66, 0xde, 0x74, 0x27, 0xab, 0x52, 0x9c, 0x42, 0x29, 0x82, 0xb2, 0x50, 0xfe, 0x4d, 0xf6,
	0x29, 0x94, 0xe8, 0x29, 0x0b, 0x27, 0xfc, 0x87, 0x8e, 0x1d, 0xf9, 0xff, 0x76, 0x5e, 0xff, 0x66,
	0x2c, 0x80, 0xdf, 0x83, 0xf5, 0xe8, 0x98, 0x4d, 0xbf, 0x27, 0x9c, 0x51, 0xf6, 0x4a, 0x6c, 0x87,
	0xca, 0xdc, 0xdf, 0xbf, 0x4a, 0xfb, 0x07, 0x87, 0x06, 0x14, 0x07, 0x6d, 0xc2, 0x78, 0x11, 0x23,
	0xa0, 0x07, 0xee, 0xcd, 0x42, 0x47, 0xe7, 0x78, 0x0f, 0x87, 0x7d, 0xc2, 0xe4, 0xf2, 0xcf, 0xf3,
	0xb2, 0x7d, 0xd9, 0x4b, 0x8b, 0xb0, 0xe3, 0x88, 0x05, 0xb7, 0xc0, 0x0d, 0x71, 0x8f, 0x79, 0x43,
	0x7d, 0x22, 0x57, 0xa2, 0x97, 0xc4, 0xe8, 0x37, 0xc4, 0x40, 0x26, 0xdd, 0xae, 0x78, 0x2c, 0x9e,
	0x12, 0xe4, 0x88, 0x93, 0xca, 0xb7, 0x06, 0x8c, 0x11, 0xdf, 0x1a, 0xca, 0xd5, 0x9f, 0x11, 0xc3,
	0xfe, 0xbe, 0xb1, 0x39, 0x02, 0xd5, 0x69, 0x65, 0x8c, 0x81, 0x18, 0xac, 0x8f, 0x5d, 0x58, 0xd8,
	0xea, 0x13, 0xc4, 0x9d, 0x37, 0x44, 0x56, 0xb3, 0xf1, 0xf0, 0xdd, 0xdb, 0xd2, 0xea, 0xfe, 0xee,
	0xe3, 0xc3, 0x2f, 0x9f, 0x3e, 0x7e, 0x7c, 0x54, 0x7a, 0x74, 0x74, 0x74, 0x64, 0xc0, 0x11, 0xac,
	0x22, 0x58, 0x6d, 0xe7, 0x0d, 0xd9, 0xf9, 0x67, 0x0e, 0x14, 0x66, 0x7c, 0x3a, 0x83, 0x9f, 0x82,
	0xfb, 0x15, 0xbd, 0xd9, 0x36, 0x0d, 0xa5, 0xde, 0x34, 0x91, 0xfa, 0xb2, 0xa2, 0x9d, 0xb4, 0xeb,
	0x7a, 0x13, 0x9d, 0x34, 0xdb, 0x2d, 0xb5, 0x52, 0xaf, 0xd5, 0xd5, 0xaa, 0xf4, 0x7f, 0x70, 0x1b,
	0xdc, 0x9a, 0xd9, 0x4b, 0x6f, 0x4a, 0x39, 0xf8, 0x11, 0x90, 0x67, 0x37, 0xd6, 0x6a, 0xd2, 0x02,
	0xdc, 0x01, 0x77, 0x67, 0xb6, 0xb6, 0x14, 0xc3, 0xac, 0x9b, 0x75, 0xbd, 0x29, 0x2d, 0xee, 0xfc,
	0x2d, 0x07, 0xf2, 0x97, 0x3e, 0x21, 0xc1, 0x4f, 0xc0, 0xbd, 0x9a, 0x6e, 0x54, 0x54, 0xd1, 0x55,
	0xd1, 0x34, 0x55, 0x43, 0x0d, 0xbd, 0xaa, 0x5e, 0x88, 0x6c, 0x0b, 0x6c, 0xce, 0xea, 0x14, 0x05,
	0xb6, 0x0d, 0x6e, 0xcd, 0x6c, 0x8b, 0xe2, 0xba, 0x07, 0xb6, 0x67, 0x35, 0x1a, 0xea, 0xb1, 0xa1,
	0xb6, 0xdb, 0x22, 0xa8, 0x05, 0x70, 0x23, 0xfd, 0xd0, 0x02, 0x6f, 0x83, 0x0d, 0x4d, 0x3f, 0x46,
	0x9a, 0xfa, 0x5c, 0xd5, 0x2e, 0x44, 0xb0, 0x0e, 0xa4, 0x71, 0x53, 0x55, 0x2d, 0x9f, 0x1c, 0x3f,
	0x96, 0x72, 0x33, 0xac, 0x87, 0xd2, 0xc2, 0x0c, 0xeb, 0x23, 0x69, 0x71, 0x86, 0xf5, 0x40, 0xba,
	0x36, 0xc3, 0x5a, 0x92, 0x3e, 0x80, 0x79, 0xb0, 0x32, 0xb6, 0x6a, 0xfa, 0xb1, 0x74, 0x7d, 0xba,
	0x63, 0x53, 0x37, 0xeb, 0x15, 0x55, 0xfa, 0x10, 0x6e, 0x80, 0xfc, 0xd8, 0xfa, 0x42, 0x31, 0x9a,
	0xf5, 0xe6, 0xb1, 0x74, 0x03, 0x16, 0xc0, 0xda, 0xd8, 0xac, 0x1a, 0x86, 0x6e, 0x48, 0x37, 0xa7,
	0x8d, 0x35, 0xc5, 0x54, 0x34, 0x09, 0x4c, 0x1b, 0x5b, 0x4a, 0xb3, 0x5e, 0x91, 0x96, 0x76, 0xfe,
	0x91, 0x03, 0xf9, 0x4b, 0x1f, 0x25, 0x44, 0xa6, 0x44, 0xd7, 0x08, 0x87, 0x9e, 0xab, 0x46, 0x59,
	0x6f, 0xd7, 0xcd, 0xef, 0x2f, 0xcc, 0xd3, 0x1d, 0x70, 0x7b, 0x56, 0x27, 0x53, 0x35, 0xda, 0xaa,
	0x94, 0x13, 0xf9, 0x98, 0xd5, 0x5c, 0x55, 0x6b, 0xca, 0x89, 0x66, 0xc6, 0x09, 0x9b, 0xd5, 0x21,
	0xfe, 0x4b, 0x95, 0x16, 0x77, 0xfe, 0x9a, 0x03, 0xcb, 0x93, 0xdf, 0x1c, 0x52, 0x8f, 0x6d, 0x53,
	0x31, 0xd5, 0x86, 0xda, 0x34, 0x2f, 0x04, 0xb4, 0x09, 0xe0, 0x74, 0x73, 0x53, 0x6f, 0x8a, 0x48,
	0x92, 0x99, 0x1b, 0xdb, 0xab, 0x55, 0x4d, 0x5a, 0xb8, 0x6c, 0x6e, 0xe8, 0x55, 0x69, 0xf1, 0xb2,
	0x59, 0xd1, 0x34, 0xe9, 0xda, 0xce, 0xbf, 0x73, 0x60, 0x7d, 0xe6, 0xf3, 0xfd, 0x01, 0xf8, 0xd8,
	0x34, 0x94, 0x66, 0x5b, 0xa9, 0x88, 0xe2, 0x47, 0xf5, 0xb6, 0xae, 0x29, 0xe6, 0xe5, 0x15, 0xf7,
	0x05, 0xf8, 0x6c, 0x76, 0x37, 0x43, 0x55, 0xaa, 0xe8, 0xa4, 0x59, 0xd1, 0x1b, 0x8d, 0xba, 0x69,
	0xaa, 0x55, 0x29, 0x07, 0x1f, 0x82, 0x4f, 0xff, 0x4b, 0xdf, 0x71, 0xcf, 0x05, 0xf8, 0x39, 0x78,
	0xf0, 0x53, 0x3d, 0x5b, 0xaa, 0x62, 0x2a, 0x65, 0x4d, 0x8d, 0x44, 0xd2, 0x22, 0xfc, 0x0c, 0xec,
	0xcc, 0xee, 0xda, 0x56, 0x8d, 0xba, 0xa2, 0xd5, 0x7f, 0x10, 0x9d, 0xa5, 0x6b, 0x3b, 0xbf, 0x07,
	0x4b, 0x13, 0xef, 0x68, 0xb1, 0x19, 0x94, 0xbf, 0x37, 0x55, 0x05, 0xe9, 0x27, 0x66, 0xeb, 0xc4,
	0xbc, 0xbc, 0x56, 0xa6, 0x5a, 0x9f, 0xa9, 0x2f, 0xa5, 0x1c, 0x94, 0xc1, 0xfa, 0x94, 0x55, 0x6d,
	0x57, 0x94, 0x96, 0x88, 0x77, 0xc7, 0x00, 0x37, 0x47, 0x2f, 0x67, 0xb1, 0xd4, 0x5f, 0x36, 0x34,
	0x54, 0xae, 0x37, 0x15, 0xe3, 0x62, 0x71, 0x6d, 0x80, 0xfc, 0x44, 0x5b, 0x59, 0x69, 0xab, 0x4f,
	0x0e, 0xa5, 0x1c, 0x84, 0x60, 0x75, 0xc2, 0x2c, 0xbc, 0x2d, 0xec, 0xbc, 0x8c, 0x98, 0xf1, 0x33,
	0x39, 0x65, 0xea, 0xad, 0x19, 0x29, 0xb8, 0x05, 0x0a, 0x13, 0x6d, 0x55, 0xbd, 0x72, 0x22, 0xf2,
	0x2b, 0xe5, 0x44, 0xe1, 0x4c, 0x34, 0x54, 0xf4, 0xa6, 0x29, 0xec, 0x0b, 0x62, 0x8f, 0x5d, 0x9d,
	0x7e, 0x84, 0x89, 0xa2, 0x2d, 0x2b, 0x95, 0xdf, 0xb5, 0x35, 0xa5, 0xfd, 0x0c, 0x7d, 0x77, 0xa2,
	0x9b, 0x17, 0xf7, 0xaf, 0x02, 0x58, 0xbb, 0xd0, 0x21, 0x76, 0x70, 0x51, 0xa5, 0x37, 0xa5, 0x05,
	0x11, 0xd1, 0x25, 0x7b, 0xad, 0x26, 0x2d, 0xc2, 0x8f, 0xc1, 0x9d, 0x8b, 0x0d, 0x6d, 0xa5, 0xa6,
	0x22, 0xb5, 0x59, 0xd1, 0xab, 0x62, 0xe1, 0x5f, 0x2b, 0xff, 0x39, 0x07, 0x3e, 0x9f, 0x7a, 0x5e,
	0xe2, 0xc0, 0xf9, 0xc9, 0x27, 0xe6, 0x0f, 0x66, 0xcf, 0x09, 0xfb, 0x83, 0x4e, 0xd1, 0xa2, 0xde,
	0x5e, 0xac, 0xda, 0x8d, 0xff, 0xeb, 0xd8, 0xa3, 0xbb, 0x3d, 0xe2, 0x47, 0x27, 0xd1, 0xde, 0x5c,
	0xff, 0x09, 0xfd, 0x6a, 0x6c, 0xec, 0x5c, 0x8f, 0x74, 0x8f, 0xfe, 0x13, 0x00, 0x00, 0xff, 0xff,
	0x1c, 0x6e, 0xa2, 0xbf, 0x44, 0x1d, 0x00, 0x00,
}
