// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/postgresql/v1/config/host11.proto

package postgresql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PostgresqlHostConfig11_ConstraintExclusion int32

const (
	PostgresqlHostConfig11_CONSTRAINT_EXCLUSION_UNSPECIFIED PostgresqlHostConfig11_ConstraintExclusion = 0
	PostgresqlHostConfig11_CONSTRAINT_EXCLUSION_ON          PostgresqlHostConfig11_ConstraintExclusion = 1
	PostgresqlHostConfig11_CONSTRAINT_EXCLUSION_OFF         PostgresqlHostConfig11_ConstraintExclusion = 2
	PostgresqlHostConfig11_CONSTRAINT_EXCLUSION_PARTITION   PostgresqlHostConfig11_ConstraintExclusion = 3
)

var PostgresqlHostConfig11_ConstraintExclusion_name = map[int32]string{
	0: "CONSTRAINT_EXCLUSION_UNSPECIFIED",
	1: "CONSTRAINT_EXCLUSION_ON",
	2: "CONSTRAINT_EXCLUSION_OFF",
	3: "CONSTRAINT_EXCLUSION_PARTITION",
}

var PostgresqlHostConfig11_ConstraintExclusion_value = map[string]int32{
	"CONSTRAINT_EXCLUSION_UNSPECIFIED": 0,
	"CONSTRAINT_EXCLUSION_ON":          1,
	"CONSTRAINT_EXCLUSION_OFF":         2,
	"CONSTRAINT_EXCLUSION_PARTITION":   3,
}

func (x PostgresqlHostConfig11_ConstraintExclusion) String() string {
	return proto.EnumName(PostgresqlHostConfig11_ConstraintExclusion_name, int32(x))
}

func (PostgresqlHostConfig11_ConstraintExclusion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 0}
}

type PostgresqlHostConfig11_ForceParallelMode int32

const (
	PostgresqlHostConfig11_FORCE_PARALLEL_MODE_UNSPECIFIED PostgresqlHostConfig11_ForceParallelMode = 0
	PostgresqlHostConfig11_FORCE_PARALLEL_MODE_ON          PostgresqlHostConfig11_ForceParallelMode = 1
	PostgresqlHostConfig11_FORCE_PARALLEL_MODE_OFF         PostgresqlHostConfig11_ForceParallelMode = 2
	PostgresqlHostConfig11_FORCE_PARALLEL_MODE_REGRESS     PostgresqlHostConfig11_ForceParallelMode = 3
)

var PostgresqlHostConfig11_ForceParallelMode_name = map[int32]string{
	0: "FORCE_PARALLEL_MODE_UNSPECIFIED",
	1: "FORCE_PARALLEL_MODE_ON",
	2: "FORCE_PARALLEL_MODE_OFF",
	3: "FORCE_PARALLEL_MODE_REGRESS",
}

var PostgresqlHostConfig11_ForceParallelMode_value = map[string]int32{
	"FORCE_PARALLEL_MODE_UNSPECIFIED": 0,
	"FORCE_PARALLEL_MODE_ON":          1,
	"FORCE_PARALLEL_MODE_OFF":         2,
	"FORCE_PARALLEL_MODE_REGRESS":     3,
}

func (x PostgresqlHostConfig11_ForceParallelMode) String() string {
	return proto.EnumName(PostgresqlHostConfig11_ForceParallelMode_name, int32(x))
}

func (PostgresqlHostConfig11_ForceParallelMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 1}
}

type PostgresqlHostConfig11_LogLevel int32

const (
	PostgresqlHostConfig11_LOG_LEVEL_UNSPECIFIED PostgresqlHostConfig11_LogLevel = 0
	PostgresqlHostConfig11_LOG_LEVEL_DEBUG5      PostgresqlHostConfig11_LogLevel = 1
	PostgresqlHostConfig11_LOG_LEVEL_DEBUG4      PostgresqlHostConfig11_LogLevel = 2
	PostgresqlHostConfig11_LOG_LEVEL_DEBUG3      PostgresqlHostConfig11_LogLevel = 3
	PostgresqlHostConfig11_LOG_LEVEL_DEBUG2      PostgresqlHostConfig11_LogLevel = 4
	PostgresqlHostConfig11_LOG_LEVEL_DEBUG1      PostgresqlHostConfig11_LogLevel = 5
	PostgresqlHostConfig11_LOG_LEVEL_LOG         PostgresqlHostConfig11_LogLevel = 6
	PostgresqlHostConfig11_LOG_LEVEL_NOTICE      PostgresqlHostConfig11_LogLevel = 7
	PostgresqlHostConfig11_LOG_LEVEL_WARNING     PostgresqlHostConfig11_LogLevel = 8
	PostgresqlHostConfig11_LOG_LEVEL_ERROR       PostgresqlHostConfig11_LogLevel = 9
	PostgresqlHostConfig11_LOG_LEVEL_FATAL       PostgresqlHostConfig11_LogLevel = 10
	PostgresqlHostConfig11_LOG_LEVEL_PANIC       PostgresqlHostConfig11_LogLevel = 11
)

var PostgresqlHostConfig11_LogLevel_name = map[int32]string{
	0:  "LOG_LEVEL_UNSPECIFIED",
	1:  "LOG_LEVEL_DEBUG5",
	2:  "LOG_LEVEL_DEBUG4",
	3:  "LOG_LEVEL_DEBUG3",
	4:  "LOG_LEVEL_DEBUG2",
	5:  "LOG_LEVEL_DEBUG1",
	6:  "LOG_LEVEL_LOG",
	7:  "LOG_LEVEL_NOTICE",
	8:  "LOG_LEVEL_WARNING",
	9:  "LOG_LEVEL_ERROR",
	10: "LOG_LEVEL_FATAL",
	11: "LOG_LEVEL_PANIC",
}

var PostgresqlHostConfig11_LogLevel_value = map[string]int32{
	"LOG_LEVEL_UNSPECIFIED": 0,
	"LOG_LEVEL_DEBUG5":      1,
	"LOG_LEVEL_DEBUG4":      2,
	"LOG_LEVEL_DEBUG3":      3,
	"LOG_LEVEL_DEBUG2":      4,
	"LOG_LEVEL_DEBUG1":      5,
	"LOG_LEVEL_LOG":         6,
	"LOG_LEVEL_NOTICE":      7,
	"LOG_LEVEL_WARNING":     8,
	"LOG_LEVEL_ERROR":       9,
	"LOG_LEVEL_FATAL":       10,
	"LOG_LEVEL_PANIC":       11,
}

func (x PostgresqlHostConfig11_LogLevel) String() string {
	return proto.EnumName(PostgresqlHostConfig11_LogLevel_name, int32(x))
}

func (PostgresqlHostConfig11_LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 2}
}

type PostgresqlHostConfig11_LogErrorVerbosity int32

const (
	PostgresqlHostConfig11_LOG_ERROR_VERBOSITY_UNSPECIFIED PostgresqlHostConfig11_LogErrorVerbosity = 0
	PostgresqlHostConfig11_LOG_ERROR_VERBOSITY_TERSE       PostgresqlHostConfig11_LogErrorVerbosity = 1
	PostgresqlHostConfig11_LOG_ERROR_VERBOSITY_DEFAULT     PostgresqlHostConfig11_LogErrorVerbosity = 2
	PostgresqlHostConfig11_LOG_ERROR_VERBOSITY_VERBOSE     PostgresqlHostConfig11_LogErrorVerbosity = 3
)

var PostgresqlHostConfig11_LogErrorVerbosity_name = map[int32]string{
	0: "LOG_ERROR_VERBOSITY_UNSPECIFIED",
	1: "LOG_ERROR_VERBOSITY_TERSE",
	2: "LOG_ERROR_VERBOSITY_DEFAULT",
	3: "LOG_ERROR_VERBOSITY_VERBOSE",
}

var PostgresqlHostConfig11_LogErrorVerbosity_value = map[string]int32{
	"LOG_ERROR_VERBOSITY_UNSPECIFIED": 0,
	"LOG_ERROR_VERBOSITY_TERSE":       1,
	"LOG_ERROR_VERBOSITY_DEFAULT":     2,
	"LOG_ERROR_VERBOSITY_VERBOSE":     3,
}

func (x PostgresqlHostConfig11_LogErrorVerbosity) String() string {
	return proto.EnumName(PostgresqlHostConfig11_LogErrorVerbosity_name, int32(x))
}

func (PostgresqlHostConfig11_LogErrorVerbosity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 3}
}

type PostgresqlHostConfig11_LogStatement int32

const (
	PostgresqlHostConfig11_LOG_STATEMENT_UNSPECIFIED PostgresqlHostConfig11_LogStatement = 0
	PostgresqlHostConfig11_LOG_STATEMENT_NONE        PostgresqlHostConfig11_LogStatement = 1
	PostgresqlHostConfig11_LOG_STATEMENT_DDL         PostgresqlHostConfig11_LogStatement = 2
	PostgresqlHostConfig11_LOG_STATEMENT_MOD         PostgresqlHostConfig11_LogStatement = 3
	PostgresqlHostConfig11_LOG_STATEMENT_ALL         PostgresqlHostConfig11_LogStatement = 4
)

var PostgresqlHostConfig11_LogStatement_name = map[int32]string{
	0: "LOG_STATEMENT_UNSPECIFIED",
	1: "LOG_STATEMENT_NONE",
	2: "LOG_STATEMENT_DDL",
	3: "LOG_STATEMENT_MOD",
	4: "LOG_STATEMENT_ALL",
}

var PostgresqlHostConfig11_LogStatement_value = map[string]int32{
	"LOG_STATEMENT_UNSPECIFIED": 0,
	"LOG_STATEMENT_NONE":        1,
	"LOG_STATEMENT_DDL":         2,
	"LOG_STATEMENT_MOD":         3,
	"LOG_STATEMENT_ALL":         4,
}

func (x PostgresqlHostConfig11_LogStatement) String() string {
	return proto.EnumName(PostgresqlHostConfig11_LogStatement_name, int32(x))
}

func (PostgresqlHostConfig11_LogStatement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 4}
}

type PostgresqlHostConfig11_TransactionIsolation int32

const (
	PostgresqlHostConfig11_TRANSACTION_ISOLATION_UNSPECIFIED      PostgresqlHostConfig11_TransactionIsolation = 0
	PostgresqlHostConfig11_TRANSACTION_ISOLATION_READ_UNCOMMITTED PostgresqlHostConfig11_TransactionIsolation = 1
	PostgresqlHostConfig11_TRANSACTION_ISOLATION_READ_COMMITTED   PostgresqlHostConfig11_TransactionIsolation = 2
	PostgresqlHostConfig11_TRANSACTION_ISOLATION_REPEATABLE_READ  PostgresqlHostConfig11_TransactionIsolation = 3
	PostgresqlHostConfig11_TRANSACTION_ISOLATION_SERIALIZABLE     PostgresqlHostConfig11_TransactionIsolation = 4
)

var PostgresqlHostConfig11_TransactionIsolation_name = map[int32]string{
	0: "TRANSACTION_ISOLATION_UNSPECIFIED",
	1: "TRANSACTION_ISOLATION_READ_UNCOMMITTED",
	2: "TRANSACTION_ISOLATION_READ_COMMITTED",
	3: "TRANSACTION_ISOLATION_REPEATABLE_READ",
	4: "TRANSACTION_ISOLATION_SERIALIZABLE",
}

var PostgresqlHostConfig11_TransactionIsolation_value = map[string]int32{
	"TRANSACTION_ISOLATION_UNSPECIFIED":      0,
	"TRANSACTION_ISOLATION_READ_UNCOMMITTED": 1,
	"TRANSACTION_ISOLATION_READ_COMMITTED":   2,
	"TRANSACTION_ISOLATION_REPEATABLE_READ":  3,
	"TRANSACTION_ISOLATION_SERIALIZABLE":     4,
}

func (x PostgresqlHostConfig11_TransactionIsolation) String() string {
	return proto.EnumName(PostgresqlHostConfig11_TransactionIsolation_name, int32(x))
}

func (PostgresqlHostConfig11_TransactionIsolation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 5}
}

type PostgresqlHostConfig11_ByteaOutput int32

const (
	PostgresqlHostConfig11_BYTEA_OUTPUT_UNSPECIFIED PostgresqlHostConfig11_ByteaOutput = 0
	PostgresqlHostConfig11_BYTEA_OUTPUT_HEX         PostgresqlHostConfig11_ByteaOutput = 1
	PostgresqlHostConfig11_BYTEA_OUTPUT_ESCAPED     PostgresqlHostConfig11_ByteaOutput = 2
)

var PostgresqlHostConfig11_ByteaOutput_name = map[int32]string{
	0: "BYTEA_OUTPUT_UNSPECIFIED",
	1: "BYTEA_OUTPUT_HEX",
	2: "BYTEA_OUTPUT_ESCAPED",
}

var PostgresqlHostConfig11_ByteaOutput_value = map[string]int32{
	"BYTEA_OUTPUT_UNSPECIFIED": 0,
	"BYTEA_OUTPUT_HEX":         1,
	"BYTEA_OUTPUT_ESCAPED":     2,
}

func (x PostgresqlHostConfig11_ByteaOutput) String() string {
	return proto.EnumName(PostgresqlHostConfig11_ByteaOutput_name, int32(x))
}

func (PostgresqlHostConfig11_ByteaOutput) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 6}
}

type PostgresqlHostConfig11_XmlBinary int32

const (
	PostgresqlHostConfig11_XML_BINARY_UNSPECIFIED PostgresqlHostConfig11_XmlBinary = 0
	PostgresqlHostConfig11_XML_BINARY_BASE64      PostgresqlHostConfig11_XmlBinary = 1
	PostgresqlHostConfig11_XML_BINARY_HEX         PostgresqlHostConfig11_XmlBinary = 2
)

var PostgresqlHostConfig11_XmlBinary_name = map[int32]string{
	0: "XML_BINARY_UNSPECIFIED",
	1: "XML_BINARY_BASE64",
	2: "XML_BINARY_HEX",
}

var PostgresqlHostConfig11_XmlBinary_value = map[string]int32{
	"XML_BINARY_UNSPECIFIED": 0,
	"XML_BINARY_BASE64":      1,
	"XML_BINARY_HEX":         2,
}

func (x PostgresqlHostConfig11_XmlBinary) String() string {
	return proto.EnumName(PostgresqlHostConfig11_XmlBinary_name, int32(x))
}

func (PostgresqlHostConfig11_XmlBinary) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 7}
}

type PostgresqlHostConfig11_XmlOption int32

const (
	PostgresqlHostConfig11_XML_OPTION_UNSPECIFIED PostgresqlHostConfig11_XmlOption = 0
	PostgresqlHostConfig11_XML_OPTION_DOCUMENT    PostgresqlHostConfig11_XmlOption = 1
	PostgresqlHostConfig11_XML_OPTION_CONTENT     PostgresqlHostConfig11_XmlOption = 2
)

var PostgresqlHostConfig11_XmlOption_name = map[int32]string{
	0: "XML_OPTION_UNSPECIFIED",
	1: "XML_OPTION_DOCUMENT",
	2: "XML_OPTION_CONTENT",
}

var PostgresqlHostConfig11_XmlOption_value = map[string]int32{
	"XML_OPTION_UNSPECIFIED": 0,
	"XML_OPTION_DOCUMENT":    1,
	"XML_OPTION_CONTENT":     2,
}

func (x PostgresqlHostConfig11_XmlOption) String() string {
	return proto.EnumName(PostgresqlHostConfig11_XmlOption_name, int32(x))
}

func (PostgresqlHostConfig11_XmlOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 8}
}

type PostgresqlHostConfig11_BackslashQuote int32

const (
	PostgresqlHostConfig11_BACKSLASH_QUOTE_UNSPECIFIED   PostgresqlHostConfig11_BackslashQuote = 0
	PostgresqlHostConfig11_BACKSLASH_QUOTE               PostgresqlHostConfig11_BackslashQuote = 1
	PostgresqlHostConfig11_BACKSLASH_QUOTE_ON            PostgresqlHostConfig11_BackslashQuote = 2
	PostgresqlHostConfig11_BACKSLASH_QUOTE_OFF           PostgresqlHostConfig11_BackslashQuote = 3
	PostgresqlHostConfig11_BACKSLASH_QUOTE_SAFE_ENCODING PostgresqlHostConfig11_BackslashQuote = 4
)

var PostgresqlHostConfig11_BackslashQuote_name = map[int32]string{
	0: "BACKSLASH_QUOTE_UNSPECIFIED",
	1: "BACKSLASH_QUOTE",
	2: "BACKSLASH_QUOTE_ON",
	3: "BACKSLASH_QUOTE_OFF",
	4: "BACKSLASH_QUOTE_SAFE_ENCODING",
}

var PostgresqlHostConfig11_BackslashQuote_value = map[string]int32{
	"BACKSLASH_QUOTE_UNSPECIFIED":   0,
	"BACKSLASH_QUOTE":               1,
	"BACKSLASH_QUOTE_ON":            2,
	"BACKSLASH_QUOTE_OFF":           3,
	"BACKSLASH_QUOTE_SAFE_ENCODING": 4,
}

func (x PostgresqlHostConfig11_BackslashQuote) String() string {
	return proto.EnumName(PostgresqlHostConfig11_BackslashQuote_name, int32(x))
}

func (PostgresqlHostConfig11_BackslashQuote) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0, 9}
}

// Options and structure of `PostgresqlConfig` reflects PostgreSQL configuration file
// parameters which detailed description is available in
// [PostgreSQL documentation](https://www.postgresql.org/docs/11/runtime-config.html).
type PostgresqlHostConfig11 struct {
	RecoveryMinApplyDelay           *wrappers.Int64Value                        `protobuf:"bytes,1,opt,name=recovery_min_apply_delay,json=recoveryMinApplyDelay,proto3" json:"recovery_min_apply_delay,omitempty"`
	SharedBuffers                   *wrappers.Int64Value                        `protobuf:"bytes,2,opt,name=shared_buffers,json=sharedBuffers,proto3" json:"shared_buffers,omitempty"`
	TempBuffers                     *wrappers.Int64Value                        `protobuf:"bytes,3,opt,name=temp_buffers,json=tempBuffers,proto3" json:"temp_buffers,omitempty"`
	WorkMem                         *wrappers.Int64Value                        `protobuf:"bytes,4,opt,name=work_mem,json=workMem,proto3" json:"work_mem,omitempty"`
	TempFileLimit                   *wrappers.Int64Value                        `protobuf:"bytes,5,opt,name=temp_file_limit,json=tempFileLimit,proto3" json:"temp_file_limit,omitempty"`
	BackendFlushAfter               *wrappers.Int64Value                        `protobuf:"bytes,6,opt,name=backend_flush_after,json=backendFlushAfter,proto3" json:"backend_flush_after,omitempty"`
	OldSnapshotThreshold            *wrappers.Int64Value                        `protobuf:"bytes,7,opt,name=old_snapshot_threshold,json=oldSnapshotThreshold,proto3" json:"old_snapshot_threshold,omitempty"`
	MaxStandbyStreamingDelay        *wrappers.Int64Value                        `protobuf:"bytes,8,opt,name=max_standby_streaming_delay,json=maxStandbyStreamingDelay,proto3" json:"max_standby_streaming_delay,omitempty"`
	ConstraintExclusion             PostgresqlHostConfig11_ConstraintExclusion  `protobuf:"varint,9,opt,name=constraint_exclusion,json=constraintExclusion,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_ConstraintExclusion" json:"constraint_exclusion,omitempty"`
	CursorTupleFraction             *wrappers.DoubleValue                       `protobuf:"bytes,10,opt,name=cursor_tuple_fraction,json=cursorTupleFraction,proto3" json:"cursor_tuple_fraction,omitempty"`
	FromCollapseLimit               *wrappers.Int64Value                        `protobuf:"bytes,11,opt,name=from_collapse_limit,json=fromCollapseLimit,proto3" json:"from_collapse_limit,omitempty"`
	JoinCollapseLimit               *wrappers.Int64Value                        `protobuf:"bytes,12,opt,name=join_collapse_limit,json=joinCollapseLimit,proto3" json:"join_collapse_limit,omitempty"`
	ForceParallelMode               PostgresqlHostConfig11_ForceParallelMode    `protobuf:"varint,13,opt,name=force_parallel_mode,json=forceParallelMode,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_ForceParallelMode" json:"force_parallel_mode,omitempty"`
	ClientMinMessages               PostgresqlHostConfig11_LogLevel             `protobuf:"varint,14,opt,name=client_min_messages,json=clientMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_LogLevel" json:"client_min_messages,omitempty"`
	LogMinMessages                  PostgresqlHostConfig11_LogLevel             `protobuf:"varint,15,opt,name=log_min_messages,json=logMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_LogLevel" json:"log_min_messages,omitempty"`
	LogMinErrorStatement            PostgresqlHostConfig11_LogLevel             `protobuf:"varint,16,opt,name=log_min_error_statement,json=logMinErrorStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_LogLevel" json:"log_min_error_statement,omitempty"`
	LogMinDurationStatement         *wrappers.Int64Value                        `protobuf:"bytes,17,opt,name=log_min_duration_statement,json=logMinDurationStatement,proto3" json:"log_min_duration_statement,omitempty"`
	LogCheckpoints                  *wrappers.BoolValue                         `protobuf:"bytes,18,opt,name=log_checkpoints,json=logCheckpoints,proto3" json:"log_checkpoints,omitempty"`
	LogConnections                  *wrappers.BoolValue                         `protobuf:"bytes,19,opt,name=log_connections,json=logConnections,proto3" json:"log_connections,omitempty"`
	LogDisconnections               *wrappers.BoolValue                         `protobuf:"bytes,20,opt,name=log_disconnections,json=logDisconnections,proto3" json:"log_disconnections,omitempty"`
	LogDuration                     *wrappers.BoolValue                         `protobuf:"bytes,21,opt,name=log_duration,json=logDuration,proto3" json:"log_duration,omitempty"`
	LogErrorVerbosity               PostgresqlHostConfig11_LogErrorVerbosity    `protobuf:"varint,22,opt,name=log_error_verbosity,json=logErrorVerbosity,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_LogErrorVerbosity" json:"log_error_verbosity,omitempty"`
	LogLockWaits                    *wrappers.BoolValue                         `protobuf:"bytes,23,opt,name=log_lock_waits,json=logLockWaits,proto3" json:"log_lock_waits,omitempty"`
	LogStatement                    PostgresqlHostConfig11_LogStatement         `protobuf:"varint,24,opt,name=log_statement,json=logStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_LogStatement" json:"log_statement,omitempty"`
	LogTempFiles                    *wrappers.Int64Value                        `protobuf:"bytes,25,opt,name=log_temp_files,json=logTempFiles,proto3" json:"log_temp_files,omitempty"`
	SearchPath                      string                                      `protobuf:"bytes,26,opt,name=search_path,json=searchPath,proto3" json:"search_path,omitempty"`
	RowSecurity                     *wrappers.BoolValue                         `protobuf:"bytes,27,opt,name=row_security,json=rowSecurity,proto3" json:"row_security,omitempty"`
	DefaultTransactionIsolation     PostgresqlHostConfig11_TransactionIsolation `protobuf:"varint,28,opt,name=default_transaction_isolation,json=defaultTransactionIsolation,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_TransactionIsolation" json:"default_transaction_isolation,omitempty"`
	StatementTimeout                *wrappers.Int64Value                        `protobuf:"bytes,29,opt,name=statement_timeout,json=statementTimeout,proto3" json:"statement_timeout,omitempty"`
	LockTimeout                     *wrappers.Int64Value                        `protobuf:"bytes,30,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`
	IdleInTransactionSessionTimeout *wrappers.Int64Value                        `protobuf:"bytes,31,opt,name=idle_in_transaction_session_timeout,json=idleInTransactionSessionTimeout,proto3" json:"idle_in_transaction_session_timeout,omitempty"`
	ByteaOutput                     PostgresqlHostConfig11_ByteaOutput          `protobuf:"varint,32,opt,name=bytea_output,json=byteaOutput,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_ByteaOutput" json:"bytea_output,omitempty"`
	Xmlbinary                       PostgresqlHostConfig11_XmlBinary            `protobuf:"varint,33,opt,name=xmlbinary,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_XmlBinary" json:"xmlbinary,omitempty"`
	Xmloption                       PostgresqlHostConfig11_XmlOption            `protobuf:"varint,34,opt,name=xmloption,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_XmlOption" json:"xmloption,omitempty"`
	GinPendingListLimit             *wrappers.Int64Value                        `protobuf:"bytes,35,opt,name=gin_pending_list_limit,json=ginPendingListLimit,proto3" json:"gin_pending_list_limit,omitempty"`
	DeadlockTimeout                 *wrappers.Int64Value                        `protobuf:"bytes,36,opt,name=deadlock_timeout,json=deadlockTimeout,proto3" json:"deadlock_timeout,omitempty"`
	MaxLocksPerTransaction          *wrappers.Int64Value                        `protobuf:"bytes,37,opt,name=max_locks_per_transaction,json=maxLocksPerTransaction,proto3" json:"max_locks_per_transaction,omitempty"`
	MaxPredLocksPerTransaction      *wrappers.Int64Value                        `protobuf:"bytes,38,opt,name=max_pred_locks_per_transaction,json=maxPredLocksPerTransaction,proto3" json:"max_pred_locks_per_transaction,omitempty"`
	ArrayNulls                      *wrappers.BoolValue                         `protobuf:"bytes,39,opt,name=array_nulls,json=arrayNulls,proto3" json:"array_nulls,omitempty"`
	BackslashQuote                  PostgresqlHostConfig11_BackslashQuote       `protobuf:"varint,40,opt,name=backslash_quote,json=backslashQuote,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_BackslashQuote" json:"backslash_quote,omitempty"`
	DefaultWithOids                 *wrappers.BoolValue                         `protobuf:"bytes,41,opt,name=default_with_oids,json=defaultWithOids,proto3" json:"default_with_oids,omitempty"`
	EscapeStringWarning             *wrappers.BoolValue                         `protobuf:"bytes,42,opt,name=escape_string_warning,json=escapeStringWarning,proto3" json:"escape_string_warning,omitempty"`
	LoCompatPrivileges              *wrappers.BoolValue                         `protobuf:"bytes,43,opt,name=lo_compat_privileges,json=loCompatPrivileges,proto3" json:"lo_compat_privileges,omitempty"`
	OperatorPrecedenceWarning       *wrappers.BoolValue                         `protobuf:"bytes,44,opt,name=operator_precedence_warning,json=operatorPrecedenceWarning,proto3" json:"operator_precedence_warning,omitempty"`
	QuoteAllIdentifiers             *wrappers.BoolValue                         `protobuf:"bytes,45,opt,name=quote_all_identifiers,json=quoteAllIdentifiers,proto3" json:"quote_all_identifiers,omitempty"`
	StandardConformingStrings       *wrappers.BoolValue                         `protobuf:"bytes,46,opt,name=standard_conforming_strings,json=standardConformingStrings,proto3" json:"standard_conforming_strings,omitempty"`
	SynchronizeSeqscans             *wrappers.BoolValue                         `protobuf:"bytes,47,opt,name=synchronize_seqscans,json=synchronizeSeqscans,proto3" json:"synchronize_seqscans,omitempty"`
	TransformNullEquals             *wrappers.BoolValue                         `protobuf:"bytes,48,opt,name=transform_null_equals,json=transformNullEquals,proto3" json:"transform_null_equals,omitempty"`
	ExitOnError                     *wrappers.BoolValue                         `protobuf:"bytes,49,opt,name=exit_on_error,json=exitOnError,proto3" json:"exit_on_error,omitempty"`
	SeqPageCost                     *wrappers.DoubleValue                       `protobuf:"bytes,50,opt,name=seq_page_cost,json=seqPageCost,proto3" json:"seq_page_cost,omitempty"`
	RandomPageCost                  *wrappers.DoubleValue                       `protobuf:"bytes,51,opt,name=random_page_cost,json=randomPageCost,proto3" json:"random_page_cost,omitempty"`
	EnableBitmapscan                *wrappers.BoolValue                         `protobuf:"bytes,54,opt,name=enable_bitmapscan,json=enableBitmapscan,proto3" json:"enable_bitmapscan,omitempty"`
	EnableHashagg                   *wrappers.BoolValue                         `protobuf:"bytes,55,opt,name=enable_hashagg,json=enableHashagg,proto3" json:"enable_hashagg,omitempty"`
	EnableHashjoin                  *wrappers.BoolValue                         `protobuf:"bytes,56,opt,name=enable_hashjoin,json=enableHashjoin,proto3" json:"enable_hashjoin,omitempty"`
	EnableIndexscan                 *wrappers.BoolValue                         `protobuf:"bytes,57,opt,name=enable_indexscan,json=enableIndexscan,proto3" json:"enable_indexscan,omitempty"`
	EnableIndexonlyscan             *wrappers.BoolValue                         `protobuf:"bytes,58,opt,name=enable_indexonlyscan,json=enableIndexonlyscan,proto3" json:"enable_indexonlyscan,omitempty"`
	EnableMaterial                  *wrappers.BoolValue                         `protobuf:"bytes,59,opt,name=enable_material,json=enableMaterial,proto3" json:"enable_material,omitempty"`
	EnableMergejoin                 *wrappers.BoolValue                         `protobuf:"bytes,60,opt,name=enable_mergejoin,json=enableMergejoin,proto3" json:"enable_mergejoin,omitempty"`
	EnableNestloop                  *wrappers.BoolValue                         `protobuf:"bytes,61,opt,name=enable_nestloop,json=enableNestloop,proto3" json:"enable_nestloop,omitempty"`
	EnableSeqscan                   *wrappers.BoolValue                         `protobuf:"bytes,62,opt,name=enable_seqscan,json=enableSeqscan,proto3" json:"enable_seqscan,omitempty"`
	EnableSort                      *wrappers.BoolValue                         `protobuf:"bytes,63,opt,name=enable_sort,json=enableSort,proto3" json:"enable_sort,omitempty"`
	EnableTidscan                   *wrappers.BoolValue                         `protobuf:"bytes,64,opt,name=enable_tidscan,json=enableTidscan,proto3" json:"enable_tidscan,omitempty"`
	MaxParallelWorkers              *wrappers.Int64Value                        `protobuf:"bytes,65,opt,name=max_parallel_workers,json=maxParallelWorkers,proto3" json:"max_parallel_workers,omitempty"`
	MaxParallelWorkersPerGather     *wrappers.Int64Value                        `protobuf:"bytes,66,opt,name=max_parallel_workers_per_gather,json=maxParallelWorkersPerGather,proto3" json:"max_parallel_workers_per_gather,omitempty"`
	Timezone                        string                                      `protobuf:"bytes,67,opt,name=timezone,proto3" json:"timezone,omitempty"`
	EffectiveIoConcurrency          *wrappers.Int64Value                        `protobuf:"bytes,68,opt,name=effective_io_concurrency,json=effectiveIoConcurrency,proto3" json:"effective_io_concurrency,omitempty"`
	EffectiveCacheSize              *wrappers.Int64Value                        `protobuf:"bytes,69,opt,name=effective_cache_size,json=effectiveCacheSize,proto3" json:"effective_cache_size,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                                    `json:"-"`
	XXX_unrecognized                []byte                                      `json:"-"`
	XXX_sizecache                   int32                                       `json:"-"`
}

func (m *PostgresqlHostConfig11) Reset()         { *m = PostgresqlHostConfig11{} }
func (m *PostgresqlHostConfig11) String() string { return proto.CompactTextString(m) }
func (*PostgresqlHostConfig11) ProtoMessage()    {}
func (*PostgresqlHostConfig11) Descriptor() ([]byte, []int) {
	return fileDescriptor_129a0454cf81f4f0, []int{0}
}

func (m *PostgresqlHostConfig11) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresqlHostConfig11.Unmarshal(m, b)
}
func (m *PostgresqlHostConfig11) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresqlHostConfig11.Marshal(b, m, deterministic)
}
func (m *PostgresqlHostConfig11) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresqlHostConfig11.Merge(m, src)
}
func (m *PostgresqlHostConfig11) XXX_Size() int {
	return xxx_messageInfo_PostgresqlHostConfig11.Size(m)
}
func (m *PostgresqlHostConfig11) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresqlHostConfig11.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresqlHostConfig11 proto.InternalMessageInfo

func (m *PostgresqlHostConfig11) GetRecoveryMinApplyDelay() *wrappers.Int64Value {
	if m != nil {
		return m.RecoveryMinApplyDelay
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetSharedBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.SharedBuffers
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetTempBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.TempBuffers
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.WorkMem
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetTempFileLimit() *wrappers.Int64Value {
	if m != nil {
		return m.TempFileLimit
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetBackendFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.BackendFlushAfter
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetOldSnapshotThreshold() *wrappers.Int64Value {
	if m != nil {
		return m.OldSnapshotThreshold
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetMaxStandbyStreamingDelay() *wrappers.Int64Value {
	if m != nil {
		return m.MaxStandbyStreamingDelay
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetConstraintExclusion() PostgresqlHostConfig11_ConstraintExclusion {
	if m != nil {
		return m.ConstraintExclusion
	}
	return PostgresqlHostConfig11_CONSTRAINT_EXCLUSION_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetCursorTupleFraction() *wrappers.DoubleValue {
	if m != nil {
		return m.CursorTupleFraction
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetFromCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.FromCollapseLimit
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetJoinCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.JoinCollapseLimit
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetForceParallelMode() PostgresqlHostConfig11_ForceParallelMode {
	if m != nil {
		return m.ForceParallelMode
	}
	return PostgresqlHostConfig11_FORCE_PARALLEL_MODE_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetClientMinMessages() PostgresqlHostConfig11_LogLevel {
	if m != nil {
		return m.ClientMinMessages
	}
	return PostgresqlHostConfig11_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetLogMinMessages() PostgresqlHostConfig11_LogLevel {
	if m != nil {
		return m.LogMinMessages
	}
	return PostgresqlHostConfig11_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetLogMinErrorStatement() PostgresqlHostConfig11_LogLevel {
	if m != nil {
		return m.LogMinErrorStatement
	}
	return PostgresqlHostConfig11_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetLogMinDurationStatement() *wrappers.Int64Value {
	if m != nil {
		return m.LogMinDurationStatement
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetLogCheckpoints() *wrappers.BoolValue {
	if m != nil {
		return m.LogCheckpoints
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetLogConnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogConnections
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetLogDisconnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogDisconnections
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetLogDuration() *wrappers.BoolValue {
	if m != nil {
		return m.LogDuration
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetLogErrorVerbosity() PostgresqlHostConfig11_LogErrorVerbosity {
	if m != nil {
		return m.LogErrorVerbosity
	}
	return PostgresqlHostConfig11_LOG_ERROR_VERBOSITY_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetLogLockWaits() *wrappers.BoolValue {
	if m != nil {
		return m.LogLockWaits
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetLogStatement() PostgresqlHostConfig11_LogStatement {
	if m != nil {
		return m.LogStatement
	}
	return PostgresqlHostConfig11_LOG_STATEMENT_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetLogTempFiles() *wrappers.Int64Value {
	if m != nil {
		return m.LogTempFiles
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetSearchPath() string {
	if m != nil {
		return m.SearchPath
	}
	return ""
}

func (m *PostgresqlHostConfig11) GetRowSecurity() *wrappers.BoolValue {
	if m != nil {
		return m.RowSecurity
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetDefaultTransactionIsolation() PostgresqlHostConfig11_TransactionIsolation {
	if m != nil {
		return m.DefaultTransactionIsolation
	}
	return PostgresqlHostConfig11_TRANSACTION_ISOLATION_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetStatementTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.StatementTimeout
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetLockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.LockTimeout
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetIdleInTransactionSessionTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.IdleInTransactionSessionTimeout
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetByteaOutput() PostgresqlHostConfig11_ByteaOutput {
	if m != nil {
		return m.ByteaOutput
	}
	return PostgresqlHostConfig11_BYTEA_OUTPUT_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetXmlbinary() PostgresqlHostConfig11_XmlBinary {
	if m != nil {
		return m.Xmlbinary
	}
	return PostgresqlHostConfig11_XML_BINARY_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetXmloption() PostgresqlHostConfig11_XmlOption {
	if m != nil {
		return m.Xmloption
	}
	return PostgresqlHostConfig11_XML_OPTION_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetGinPendingListLimit() *wrappers.Int64Value {
	if m != nil {
		return m.GinPendingListLimit
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetDeadlockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.DeadlockTimeout
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetMaxLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetMaxPredLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxPredLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetArrayNulls() *wrappers.BoolValue {
	if m != nil {
		return m.ArrayNulls
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetBackslashQuote() PostgresqlHostConfig11_BackslashQuote {
	if m != nil {
		return m.BackslashQuote
	}
	return PostgresqlHostConfig11_BACKSLASH_QUOTE_UNSPECIFIED
}

func (m *PostgresqlHostConfig11) GetDefaultWithOids() *wrappers.BoolValue {
	if m != nil {
		return m.DefaultWithOids
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEscapeStringWarning() *wrappers.BoolValue {
	if m != nil {
		return m.EscapeStringWarning
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetLoCompatPrivileges() *wrappers.BoolValue {
	if m != nil {
		return m.LoCompatPrivileges
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetOperatorPrecedenceWarning() *wrappers.BoolValue {
	if m != nil {
		return m.OperatorPrecedenceWarning
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetQuoteAllIdentifiers() *wrappers.BoolValue {
	if m != nil {
		return m.QuoteAllIdentifiers
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetStandardConformingStrings() *wrappers.BoolValue {
	if m != nil {
		return m.StandardConformingStrings
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetSynchronizeSeqscans() *wrappers.BoolValue {
	if m != nil {
		return m.SynchronizeSeqscans
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetTransformNullEquals() *wrappers.BoolValue {
	if m != nil {
		return m.TransformNullEquals
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetExitOnError() *wrappers.BoolValue {
	if m != nil {
		return m.ExitOnError
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetSeqPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.SeqPageCost
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetRandomPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.RandomPageCost
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableBitmapscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableBitmapscan
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableHashagg() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHashagg
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableHashjoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHashjoin
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableIndexscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableIndexscan
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableIndexonlyscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableIndexonlyscan
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableMaterial() *wrappers.BoolValue {
	if m != nil {
		return m.EnableMaterial
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableMergejoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnableMergejoin
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableNestloop() *wrappers.BoolValue {
	if m != nil {
		return m.EnableNestloop
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableSeqscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableSeqscan
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableSort() *wrappers.BoolValue {
	if m != nil {
		return m.EnableSort
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEnableTidscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableTidscan
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetMaxParallelWorkers() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelWorkers
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetMaxParallelWorkersPerGather() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelWorkersPerGather
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *PostgresqlHostConfig11) GetEffectiveIoConcurrency() *wrappers.Int64Value {
	if m != nil {
		return m.EffectiveIoConcurrency
	}
	return nil
}

func (m *PostgresqlHostConfig11) GetEffectiveCacheSize() *wrappers.Int64Value {
	if m != nil {
		return m.EffectiveCacheSize
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_ConstraintExclusion", PostgresqlHostConfig11_ConstraintExclusion_name, PostgresqlHostConfig11_ConstraintExclusion_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_ForceParallelMode", PostgresqlHostConfig11_ForceParallelMode_name, PostgresqlHostConfig11_ForceParallelMode_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_LogLevel", PostgresqlHostConfig11_LogLevel_name, PostgresqlHostConfig11_LogLevel_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_LogErrorVerbosity", PostgresqlHostConfig11_LogErrorVerbosity_name, PostgresqlHostConfig11_LogErrorVerbosity_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_LogStatement", PostgresqlHostConfig11_LogStatement_name, PostgresqlHostConfig11_LogStatement_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_TransactionIsolation", PostgresqlHostConfig11_TransactionIsolation_name, PostgresqlHostConfig11_TransactionIsolation_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_ByteaOutput", PostgresqlHostConfig11_ByteaOutput_name, PostgresqlHostConfig11_ByteaOutput_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_XmlBinary", PostgresqlHostConfig11_XmlBinary_name, PostgresqlHostConfig11_XmlBinary_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_XmlOption", PostgresqlHostConfig11_XmlOption_name, PostgresqlHostConfig11_XmlOption_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11_BackslashQuote", PostgresqlHostConfig11_BackslashQuote_name, PostgresqlHostConfig11_BackslashQuote_value)
	proto.RegisterType((*PostgresqlHostConfig11)(nil), "yandex.cloud.mdb.postgresql.v1.config.PostgresqlHostConfig11")
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/postgresql/v1/config/host11.proto", fileDescriptor_129a0454cf81f4f0)
}

var fileDescriptor_129a0454cf81f4f0 = []byte{
	// 2520 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x99, 0xdb, 0x73, 0xdb, 0xc6,
	0xf5, 0xc7, 0x7f, 0x94, 0x1c, 0xc7, 0x5e, 0xdd, 0xc0, 0xa5, 0x24, 0xc3, 0x52, 0x7c, 0x89, 0x12,
	0xe7, 0xe7, 0xa4, 0x15, 0x25, 0xca, 0xb2, 0xad, 0x34, 0x4d, 0x1a, 0x90, 0x04, 0x65, 0xb6, 0x20,
	0xc1, 0x80, 0x90, 0xed, 0xa4, 0x93, 0xd9, 0x59, 0x02, 0x4b, 0x12, 0x35, 0x80, 0x85, 0x77, 0x41,
	0x49, 0xf4, 0x4c, 0xa7, 0xd3, 0x99, 0x3e, 0xf5, 0xb1, 0x0f, 0x9d, 0x69, 0xfb, 0x07, 0xf9, 0x3f,
	0xe9, 0x1f, 0xe1, 0xa7, 0xce, 0xe2, 0xc2, 0x8b, 0xc4, 0x14, 0x4c, 0xe5, 0x37, 0xf1, 0xec, 0x7e,
	0x3f, 0xe7, 0xec, 0x9e, 0xb3, 0x37, 0x08, 0x1c, 0x0c, 0xb1, 0x6f, 0x93, 0xf3, 0x3d, 0xcb, 0xa5,
	0x03, 0x7b, 0xcf, 0xb3, 0x3b, 0x7b, 0x01, 0xe5, 0x61, 0x8f, 0x11, 0xfe, 0xda, 0xdd, 0x3b, 0x2d,
	0xed, 0x59, 0xd4, 0xef, 0x3a, 0xbd, 0xbd, 0x3e, 0xe5, 0x61, 0xa9, 0x54, 0x0c, 0x18, 0x0d, 0x29,
	0x7c, 0x10, 0x6b, 0x8a, 0x91, 0xa6, 0xe8, 0xd9, 0x9d, 0xe2, 0x58, 0x53, 0x3c, 0x2d, 0x15, 0x63,
	0xcd, 0xd6, 0xdd, 0x1e, 0xa5, 0x3d, 0x97, 0xec, 0x45, 0xa2, 0xce, 0xa0, 0xbb, 0x77, 0xc6, 0x70,
	0x10, 0x10, 0xc6, 0x63, 0xcc, 0xd6, 0x9d, 0x29, 0xd7, 0xa7, 0xd8, 0x75, 0x6c, 0x1c, 0x3a, 0xd4,
	0x8f, 0x9b, 0x77, 0xfe, 0x75, 0x04, 0x36, 0x5b, 0x23, 0xee, 0x33, 0xca, 0xc3, 0x4a, 0xc4, 0x2d,
	0x95, 0xa0, 0x09, 0x64, 0x46, 0x2c, 0x7a, 0x4a, 0xd8, 0x10, 0x79, 0x8e, 0x8f, 0x70, 0x10, 0xb8,
	0x43, 0x64, 0x13, 0x17, 0x0f, 0xe5, 0xdc, 0xfd, 0xdc, 0xc3, 0xa5, 0x83, 0xed, 0x62, 0xec, 0xbc,
	0x98, 0x3a, 0x2f, 0xd6, 0xfd, 0xf0, 0xc9, 0xe1, 0x73, 0xec, 0x0e, 0x88, 0xb1, 0x91, 0x8a, 0x1b,
	0x8e, 0xaf, 0x08, 0x69, 0x55, 0x28, 0x61, 0x19, 0xac, 0xf2, 0x3e, 0x66, 0xc4, 0x46, 0x9d, 0x41,
	0xb7, 0x4b, 0x18, 0x97, 0x17, 0xb2, 0x59, 0x2b, 0xb1, 0xa4, 0x1c, 0x2b, 0xe0, 0x37, 0x60, 0x39,
	0x24, 0x5e, 0x30, 0x22, 0x2c, 0x66, 0x13, 0x96, 0x84, 0x20, 0xd5, 0x3f, 0x01, 0x37, 0xce, 0x28,
	0x7b, 0x85, 0x3c, 0xe2, 0xc9, 0xd7, 0xb2, 0xb5, 0x1f, 0x8a, 0xce, 0x0d, 0xe2, 0xc1, 0x0a, 0x58,
	0x8b, 0xfc, 0x76, 0x1d, 0x97, 0x20, 0xd7, 0xf1, 0x9c, 0x50, 0xfe, 0x60, 0x8e, 0xe0, 0x85, 0xa6,
	0xe6, 0xb8, 0x44, 0x13, 0x0a, 0xf8, 0x02, 0x14, 0x3a, 0xd8, 0x7a, 0x45, 0x7c, 0x1b, 0x75, 0xdd,
	0x01, 0xef, 0x23, 0xdc, 0x0d, 0x09, 0x93, 0xaf, 0x67, 0x82, 0xca, 0xe0, 0xdd, 0xdb, 0xd2, 0xf5,
	0xfd, 0xdd, 0x83, 0xfd, 0xc3, 0x23, 0x23, 0x9f, 0x30, 0x6a, 0x02, 0xa1, 0x08, 0x02, 0x44, 0x60,
	0x93, 0xba, 0x36, 0xe2, 0x3e, 0x0e, 0x78, 0x9f, 0x86, 0x28, 0xec, 0x33, 0xc2, 0xfb, 0xd4, 0xb5,
	0xe5, 0x0f, 0xb3, 0xd9, 0xcb, 0xef, 0xde, 0x96, 0x6e, 0xec, 0x96, 0x76, 0x8f, 0x9e, 0x1c, 0xee,
	0xef, 0x1b, 0xeb, 0xd4, 0xb5, 0xdb, 0x09, 0xc7, 0x4c, 0x31, 0xf0, 0x07, 0xb0, 0xed, 0xe1, 0x73,
	0xc4, 0x43, 0xec, 0xdb, 0x9d, 0x21, 0xe2, 0x21, 0x23, 0xd8, 0x73, 0xfc, 0x5e, 0x52, 0x13, 0x37,
	0xb2, 0xa7, 0x42, 0xf6, 0xf0, 0x79, 0x3b, 0x96, 0xb7, 0x53, 0x75, 0x5c, 0x16, 0x7f, 0xc9, 0x81,
	0x75, 0x8b, 0xfa, 0x3c, 0x64, 0xd8, 0xf1, 0x43, 0x44, 0xce, 0x2d, 0x77, 0xc0, 0x1d, 0xea, 0xcb,
	0x37, 0xef, 0xe7, 0x1e, 0xae, 0x1e, 0x7c, 0x57, 0x9c, 0x6b, 0x35, 0x14, 0x67, 0x97, 0x72, 0xb1,
	0x32, 0x22, 0xab, 0x29, 0xd8, 0x28, 0x58, 0x97, 0x8d, 0xb0, 0x05, 0x36, 0xac, 0x01, 0xe3, 0x94,
	0xa1, 0x70, 0x10, 0xb8, 0x04, 0x75, 0x19, 0xb6, 0xc4, 0x6a, 0x91, 0x41, 0x34, 0xb8, 0x8f, 0x2e,
	0x0d, 0xae, 0x4a, 0x07, 0x1d, 0x97, 0xc4, 0xa3, 0x2b, 0xc4, 0x52, 0x53, 0x28, 0x6b, 0x89, 0x10,
	0xfe, 0x08, 0x0a, 0x5d, 0x46, 0x3d, 0x64, 0x51, 0xd7, 0xc5, 0x01, 0x4f, 0xeb, 0x66, 0x29, 0x3b,
	0x25, 0xd2, 0xbb, 0xb7, 0xa5, 0xe5, 0xd2, 0xee, 0x41, 0xe9, 0xf0, 0xe9, 0xe1, 0xd1, 0xa3, 0x27,
	0x87, 0x4f, 0x8d, 0xbc, 0x20, 0x55, 0x12, 0x50, 0x5c, 0x4d, 0x3f, 0x82, 0xc2, 0x1f, 0xa8, 0xe3,
	0x5f, 0xc4, 0x2f, 0xff, 0x4f, 0x78, 0x41, 0x9a, 0xc6, 0xff, 0x09, 0x14, 0xba, 0x94, 0x59, 0x04,
	0x05, 0x98, 0x61, 0xd7, 0x25, 0x2e, 0xf2, 0xa8, 0x4d, 0xe4, 0x95, 0x28, 0x29, 0xfa, 0xd5, 0x92,
	0x52, 0x13, 0xe0, 0x56, 0xc2, 0x6d, 0x50, 0x9b, 0x18, 0xf9, 0xee, 0x45, 0x13, 0x3c, 0x05, 0x05,
	0xcb, 0x75, 0x88, 0x1f, 0x46, 0x5b, 0x90, 0x47, 0x38, 0xc7, 0x3d, 0xc2, 0xe5, 0xd5, 0x28, 0x80,
	0xda, 0xd5, 0x02, 0xd0, 0x68, 0x4f, 0x23, 0xa7, 0xc4, 0x35, 0xf2, 0xb1, 0x8b, 0x86, 0xe3, 0x37,
	0x12, 0x07, 0x30, 0x00, 0x92, 0x4b, 0x7b, 0xd3, 0x4e, 0xd7, 0xde, 0xab, 0xd3, 0x55, 0x97, 0xf6,
	0x26, 0x3d, 0xfe, 0x11, 0xdc, 0x4a, 0x3d, 0x12, 0xc6, 0x28, 0x13, 0xeb, 0x2c, 0x24, 0x1e, 0xf1,
	0x43, 0x59, 0x7a, 0xaf, 0x8e, 0xd7, 0x63, 0xc7, 0xaa, 0x70, 0xd2, 0x4e, 0x7d, 0xc0, 0x97, 0x60,
	0x2b, 0x75, 0x6f, 0x0f, 0x58, 0x74, 0x44, 0x4c, 0x44, 0x90, 0xcf, 0x5e, 0xdb, 0xb7, 0x62, 0x6c,
	0x35, 0x11, 0x8f, 0xc9, 0x15, 0xb0, 0x26, 0xc8, 0x56, 0x9f, 0x58, 0xaf, 0x02, 0xea, 0xf8, 0x21,
	0x97, 0x61, 0x84, 0xdb, 0xba, 0x84, 0x2b, 0x53, 0xea, 0xc6, 0x34, 0x31, 0x3b, 0x95, 0xb1, 0x62,
	0x04, 0xa1, 0xbe, 0x4f, 0xa2, 0x85, 0xc5, 0xe5, 0xc2, 0x7c, 0x90, 0xb1, 0x02, 0xd6, 0x01, 0x14,
	0x10, 0xdb, 0xe1, 0x93, 0x9c, 0xf5, 0x4c, 0x4e, 0xde, 0xa5, 0xbd, 0xea, 0x94, 0x08, 0x7e, 0x0d,
	0x96, 0x23, 0x54, 0x32, 0x5a, 0x79, 0x23, 0x13, 0xb2, 0x24, 0x20, 0x49, 0x77, 0xb1, 0xae, 0x84,
	0x3c, 0x4e, 0xf4, 0x29, 0x61, 0x1d, 0xca, 0x9d, 0x70, 0x28, 0x6f, 0xbe, 0x8f, 0x75, 0xa5, 0xd1,
	0x5e, 0x94, 0xdb, 0xe7, 0x29, 0x36, 0x8a, 0x7f, 0xda, 0x04, 0xbf, 0x05, 0x62, 0x72, 0x90, 0x4b,
	0xad, 0x57, 0xe8, 0x0c, 0x3b, 0x21, 0x97, 0x6f, 0x65, 0x8e, 0x40, 0x8c, 0x58, 0xa3, 0xd6, 0xab,
	0x17, 0xa2, 0x3f, 0xa4, 0x60, 0x45, 0x10, 0xc6, 0x35, 0x22, 0x47, 0xc1, 0xff, 0xf6, 0xca, 0xc1,
	0x8f, 0x2a, 0x27, 0x72, 0x38, 0xae, 0x23, 0x25, 0x0e, 0x79, 0x74, 0x02, 0x73, 0xf9, 0x76, 0x76,
	0x55, 0x0a, 0x84, 0x99, 0x9c, 0xbf, 0x1c, 0xde, 0x03, 0x4b, 0x9c, 0x60, 0x66, 0xf5, 0x51, 0x80,
	0xc3, 0xbe, 0xbc, 0x75, 0x3f, 0xf7, 0xf0, 0xa6, 0x01, 0x62, 0x53, 0x0b, 0x87, 0x7d, 0x91, 0x56,
	0x46, 0xcf, 0x10, 0x27, 0xd6, 0x80, 0x89, 0x84, 0x6c, 0x67, 0xa7, 0x95, 0xd1, 0xb3, 0x76, 0xd2,
	0x1d, 0xfe, 0x3d, 0x07, 0xee, 0xd8, 0xa4, 0x8b, 0x07, 0x6e, 0x88, 0x42, 0x86, 0x7d, 0x1e, 0x1f,
	0x02, 0xc8, 0xe1, 0xd4, 0x8d, 0xeb, 0xe4, 0xa3, 0x68, 0x92, 0x8c, 0xab, 0x4d, 0x92, 0x39, 0x46,
	0xd7, 0x53, 0xb2, 0xb1, 0x9d, 0x38, 0x9e, 0xd5, 0x08, 0x9f, 0x81, 0xfc, 0x28, 0x51, 0x28, 0x74,
	0x3c, 0x42, 0x07, 0xa1, 0x7c, 0x27, 0x7b, 0xfa, 0xa4, 0x91, 0xca, 0x8c, 0x45, 0xe2, 0xee, 0x15,
	0x15, 0x4d, 0x0a, 0xb9, 0x3b, 0xc7, 0xdd, 0x4b, 0x08, 0x52, 0xbd, 0x03, 0x3e, 0x71, 0x6c, 0x97,
	0x20, 0xc7, 0x9f, 0x9a, 0x21, 0x4e, 0xb8, 0x38, 0x80, 0x47, 0xd8, 0x7b, 0xd9, 0xd8, 0x7b, 0x82,
	0x53, 0xf7, 0x27, 0xc6, 0xdb, 0x8e, 0x21, 0xa9, 0x2b, 0x17, 0x2c, 0x77, 0x86, 0x21, 0xc1, 0x88,
	0x0e, 0xc2, 0x60, 0x10, 0xca, 0xf7, 0xa3, 0xb9, 0xaf, 0x5f, 0x6d, 0xee, 0xcb, 0x82, 0xa8, 0x47,
	0x40, 0x63, 0xa9, 0x33, 0xfe, 0x01, 0x09, 0xb8, 0x79, 0xee, 0xb9, 0x1d, 0xc7, 0xc7, 0x6c, 0x28,
	0x7f, 0x1c, 0xb9, 0x3a, 0xbe, 0x9a, 0xab, 0x97, 0x9e, 0x5b, 0x8e, 0x70, 0xc6, 0x98, 0x9c, 0xb8,
	0xa1, 0x41, 0x54, 0x4d, 0x3b, 0xef, 0xc9, 0x8d, 0x1e, 0xe1, 0x8c, 0x31, 0x19, 0xb6, 0xc0, 0x66,
	0xcf, 0xf1, 0x51, 0x40, 0x7c, 0x5b, 0xdc, 0xf0, 0x5c, 0x87, 0x87, 0xc9, 0xd5, 0xe2, 0x93, 0xec,
	0xcc, 0x14, 0x7a, 0x8e, 0xdf, 0x8a, 0x95, 0x9a, 0xc3, 0xc3, 0xf8, 0x2a, 0x51, 0x03, 0x92, 0x4d,
	0xb0, 0x3d, 0x55, 0x3c, 0x9f, 0x66, 0xb3, 0xd6, 0x52, 0x51, 0x9a, 0xd5, 0xe7, 0xe0, 0xb6, 0xb8,
	0x85, 0x0a, 0x13, 0x47, 0x01, 0x61, 0x93, 0x65, 0x24, 0x3f, 0xc8, 0x06, 0x6e, 0x7a, 0xf8, 0x5c,
	0xec, 0x62, 0xbc, 0x45, 0xd8, 0x44, 0xed, 0x40, 0x04, 0xee, 0x0a, 0x6e, 0x20, 0x9e, 0x26, 0xb3,
	0xe1, 0x9f, 0x65, 0xc3, 0xb7, 0x3c, 0x7c, 0xde, 0x62, 0xc4, 0x9e, 0xe5, 0xe0, 0x2b, 0xb0, 0x84,
	0x19, 0xc3, 0x43, 0xe4, 0x0f, 0x5c, 0x97, 0xcb, 0xff, 0x9f, 0xb9, 0xb5, 0x80, 0xa8, 0x7b, 0x53,
	0xf4, 0x86, 0x03, 0xb0, 0x26, 0x6e, 0xfc, 0xdc, 0xc5, 0xbc, 0x8f, 0x5e, 0x0f, 0x68, 0x48, 0xe4,
	0x87, 0x51, 0xf2, 0xb5, 0x2b, 0x96, 0x73, 0x0a, 0xfd, 0x4e, 0x30, 0x8d, 0xd5, 0xce, 0xd4, 0x6f,
	0x58, 0x03, 0xf9, 0x74, 0x3f, 0x3b, 0x73, 0xc2, 0x3e, 0xa2, 0x8e, 0xcd, 0xe5, 0xcf, 0x33, 0x23,
	0x5f, 0x4b, 0x44, 0x2f, 0x9c, 0xb0, 0xaf, 0x3b, 0x36, 0x87, 0x4d, 0xb0, 0x41, 0xb8, 0x85, 0x03,
	0x22, 0x5e, 0x0d, 0xa2, 0xa0, 0xce, 0x30, 0xf3, 0x1d, 0xbf, 0x27, 0x7f, 0x91, 0xc9, 0x2a, 0xc4,
	0xc2, 0x76, 0xa4, 0x7b, 0x11, 0xcb, 0xa0, 0x06, 0xd6, 0x5d, 0x8a, 0x2c, 0xea, 0x05, 0x38, 0x44,
	0x01, 0x73, 0x4e, 0x1d, 0x97, 0x88, 0x2b, 0xda, 0x2f, 0x32, 0x71, 0xd0, 0xa5, 0x95, 0x48, 0xd6,
	0x1a, 0xa9, 0xc4, 0xc3, 0x86, 0x06, 0x84, 0xe1, 0x90, 0x32, 0x91, 0x7f, 0x8b, 0xd8, 0xc4, 0xb7,
	0xc8, 0x28, 0xc6, 0x5f, 0x66, 0x42, 0x6f, 0xa7, 0xf2, 0xd6, 0x48, 0x9d, 0x46, 0xda, 0x04, 0x1b,
	0x51, 0xba, 0x10, 0x76, 0x5d, 0xe4, 0xd8, 0xc4, 0x0f, 0x9d, 0xae, 0x23, 0x1e, 0xad, 0xbb, 0xd9,
	0x23, 0x8f, 0x84, 0x8a, 0xeb, 0xd6, 0xc7, 0x32, 0x11, 0x6b, 0xf4, 0x00, 0xc3, 0xcc, 0x16, 0xb7,
	0xa1, 0x2e, 0x65, 0xd1, 0x13, 0x2c, 0x9e, 0x56, 0x2e, 0x17, 0xb3, 0x63, 0x4d, 0xe5, 0x95, 0x91,
	0x3a, 0x9e, 0x5b, 0x0e, 0x1b, 0x60, 0x9d, 0x0f, 0x7d, 0xab, 0xcf, 0xa8, 0xef, 0xbc, 0x21, 0x88,
	0x93, 0xd7, 0xdc, 0xc2, 0x3e, 0x97, 0xf7, 0xb2, 0x43, 0x9d, 0xd0, 0xb5, 0x13, 0x99, 0x18, 0x7a,
	0xb4, 0x7c, 0x84, 0x97, 0xa8, 0xe8, 0x11, 0x79, 0x3d, 0xc0, 0x2e, 0x97, 0xf7, 0xb3, 0x79, 0x23,
	0xa1, 0x28, 0x7f, 0x35, 0x92, 0xc1, 0x6f, 0xc0, 0x0a, 0x39, 0x77, 0x42, 0x44, 0x93, 0x1b, 0xb2,
	0x5c, 0xca, 0x3e, 0x9d, 0x85, 0x40, 0x8f, 0xef, 0xba, 0xf0, 0x5b, 0xb0, 0xc2, 0xc9, 0x6b, 0x14,
	0xe0, 0x1e, 0x41, 0x16, 0xe5, 0xa1, 0x7c, 0x30, 0xc7, 0xa3, 0x6e, 0x89, 0x93, 0xd7, 0x2d, 0xdc,
	0x23, 0x15, 0xca, 0xa3, 0x3d, 0x8c, 0x61, 0xdf, 0xa6, 0xde, 0x04, 0xe4, 0xd1, 0x1c, 0x90, 0xd5,
	0x58, 0x35, 0xe2, 0x1c, 0x83, 0x3c, 0xf1, 0x71, 0xc7, 0x25, 0xa8, 0xe3, 0x84, 0x1e, 0x0e, 0xc4,
	0x7c, 0xc9, 0x4f, 0x32, 0x47, 0x23, 0xc5, 0xa2, 0xf2, 0x48, 0x23, 0xee, 0x44, 0x09, 0xa8, 0x8f,
	0x79, 0x1f, 0xf7, 0x7a, 0xf2, 0xd3, 0x4c, 0xca, 0x4a, 0xac, 0x78, 0x16, 0x0b, 0xc4, 0xcd, 0x7a,
	0x02, 0x21, 0x9e, 0x80, 0xf2, 0x51, 0xf6, 0xcd, 0x7a, 0xcc, 0x10, 0x0a, 0xa8, 0x82, 0x24, 0x36,
	0xe4, 0x88, 0xcd, 0x28, 0x1a, 0xcf, 0x97, 0xd9, 0xdb, 0x44, 0xac, 0xa9, 0xa7, 0x12, 0x51, 0x80,
	0x93, 0x18, 0xea, 0xbb, 0xc3, 0x08, 0xf5, 0xab, 0x39, 0x76, 0x89, 0x31, 0x2a, 0x95, 0x4d, 0x0c,
	0xcd, 0xc3, 0x21, 0x61, 0x0e, 0x76, 0xe5, 0xaf, 0xe6, 0x1d, 0x5a, 0x23, 0x51, 0x4c, 0x0c, 0xcd,
	0x23, 0xac, 0x47, 0xa2, 0x09, 0xfa, 0xf5, 0xbc, 0x43, 0x6b, 0xa4, 0x92, 0x89, 0x58, 0x7c, 0xc2,
	0x43, 0x97, 0xd2, 0x40, 0xfe, 0x7a, 0xde, 0x58, 0x9a, 0x89, 0x62, 0x22, 0xdd, 0xc9, 0xda, 0x94,
	0xbf, 0x99, 0x37, 0xdd, 0xc9, 0xaa, 0x14, 0xa7, 0x50, 0x8a, 0xa0, 0x2c, 0x94, 0x7f, 0x93, 0x7d,
	0x0a, 0x25, 0x7a, 0xca, 0xc2, 0x09, 0xff, 0xa1, 0x63, 0x47, 0xfe, 0xbf, 0x9d, 0xd7, 0xbf, 0x19,
	0x0b, 0xe0, 0xf7, 0x60, 0x3d, 0x3a, 0x66, 0xd3, 0xef, 0x09, 0x67, 0x94, 0xbd, 0x12, 0xdb, 0xa1,
	0x32, 0xf7, 0xf7, 0xaf, 0xd2, 0xfe, 0xc1, 0xa1, 0x01, 0xc5, 0x41, 0x9b, 0x30, 0x5e, 0xc4, 0x08,
	0xe8, 0x81, 0x7b, 0xb3, 0xd0, 0xd1, 0x39, 0xde, 0xc3, 0x61, 0x9f, 0x30, 0xb9, 0xfc, 0xf3, 0xbc,
	0x6c, 0x5f, 0xf6, 0xd2, 0x22, 0xec, 0x38, 0x62, 0xc1, 0x2d, 0x70, 0x43, 0xdc, 0x63, 0xde, 0x50,
	0x9f, 0xc8, 0x95, 0xe8, 0x25, 0x31, 0xfa, 0x0d, 0x31, 0x90, 0x49, 0xb7, 0x2b, 0x1e, 0x8b, 0xa7,
	0x04, 0x39, 0xe2, 0xa4, 0xf2, 0xad, 0x01, 0x63, 0xc4, 0xb7, 0x86, 0x72, 0xf5, 0x67, 0xc4, 0xb0,
	0xbf, 0x6f, 0x6c, 0x8e, 0x40, 0x75, 0x5a, 0x19, 0x63, 0x20, 0x06, 0xeb, 0x63, 0x17, 0x16, 0xb6,
	0xfa, 0x04, 0x71, 0xe7, 0x0d, 0x91, 0xd5, 0x6c, 0x3c, 0x7c, 0xf7, 0xb6, 0xb4, 0xba, 0xbf, 0xfb,
	0xf8, 0xf0, 0xcb, 0xa7, 0x8f, 0x1f, 0x1f, 0x95, 0x1e, 0x1d, 0x1d, 0x1d, 0x19, 0x70, 0x04, 0xab,
	0x08, 0x56, 0xdb, 0x79, 0x43, 0x76, 0xfe, 0x99, 0x03, 0x85, 0x19, 0x9f, 0xce, 0xe0, 0xa7, 0xe0,
	0x7e, 0x45, 0x6f, 0xb6, 0x4d, 0x43, 0xa9, 0x37, 0x4d, 0xa4, 0xbe, 0xac, 0x68, 0x27, 0xed, 0xba,
	0xde, 0x44, 0x27, 0xcd, 0x76, 0x4b, 0xad, 0xd4, 0x6b, 0x75, 0xb5, 0x2a, 0xfd, 0x1f, 0xdc, 0x06,
	0xb7, 0x66, 0xf6, 0xd2, 0x9b, 0x52, 0x0e, 0x7e, 0x04, 0xe4, 0xd9, 0x8d, 0xb5, 0x9a, 0xb4, 0x00,
	0x77, 0xc0, 0xdd, 0x99, 0xad, 0x2d, 0xc5, 0x30, 0xeb, 0x66, 0x5d, 0x6f, 0x4a, 0x8b, 0x3b, 0x7f,
	0xcb, 0x81, 0xfc, 0xa5, 0x4f, 0x48, 0xf0, 0x13, 0x70, 0xaf, 0xa6, 0x1b, 0x15, 0x55, 0x74, 0x55,
	0x34, 0x4d, 0xd5, 0x50, 0x43, 0xaf, 0xaa, 0x17, 0x22, 0xdb, 0x02, 0x9b, 0xb3, 0x3a, 0x45, 0x81,
	0x6d, 0x83, 0x5b, 0x33, 0xdb, 0xa2, 0xb8, 0xee, 0x81, 0xed, 0x59, 0x8d, 0x86, 0x7a, 0x6c, 0xa8,
	0xed, 0xb6, 0x08, 0x6a, 0x01, 0xdc, 0x48, 0x3f, 0xb4, 0xc0, 0xdb, 0x60, 0x43, 0xd3, 0x8f, 0x91,
	0xa6, 0x3e, 0x57, 0xb5, 0x0b, 0x11, 0xac, 0x03, 0x69, 0xdc, 0x54, 0x55, 0xcb, 0x27, 0xc7, 0x8f,
	0xa5, 0xdc, 0x0c, 0xeb, 0xa1, 0xb4, 0x30, 0xc3, 0xfa, 0x48, 0x5a, 0x9c, 0x61, 0x3d, 0x90, 0xae,
	0xcd, 0xb0, 0x96, 0xa4, 0x0f, 0x60, 0x1e, 0xac, 0x8c, 0xad, 0x9a, 0x7e, 0x2c, 0x5d, 0x9f, 0xee,
	0xd8, 0xd4, 0xcd, 0x7a, 0x45, 0x95, 0x3e, 0x84, 0x1b, 0x20, 0x3f, 0xb6, 0xbe, 0x50, 0x8c, 0x66,
	0xbd, 0x79, 0x2c, 0xdd, 0x80, 0x05, 0xb0, 0x36, 0x36, 0xab, 0x86, 0xa1, 0x1b, 0xd2, 0xcd, 0x69,
	0x63, 0x4d, 0x31, 0x15, 0x4d, 0x02, 0xd3, 0xc6, 0x96, 0xd2, 0xac, 0x57, 0xa4, 0xa5, 0x9d, 0x7f,
	0xe4, 0x40, 0xfe, 0xd2, 0x47, 0x09, 0x91, 0x29, 0xd1, 0x35, 0xc2, 0xa1, 0xe7, 0xaa, 0x51, 0xd6,
	0xdb, 0x75, 0xf3, 0xfb, 0x0b, 0xf3, 0x74, 0x07, 0xdc, 0x9e, 0xd5, 0xc9, 0x54, 0x8d, 0xb6, 0x2a,
	0xe5, 0x44, 0x3e, 0x66, 0x35, 0x57, 0xd5, 0x9a, 0x72, 0xa2, 0x99, 0x71, 0xc2, 0x66, 0x75, 0x88,
	0xff, 0x52, 0xa5, 0xc5, 0x9d, 0xbf, 0xe6, 0xc0, 0xf2, 0xe4, 0x37, 0x87, 0xd4, 0x63, 0xdb, 0x54,
	0x4c, 0xb5, 0xa1, 0x36, 0xcd, 0x0b, 0x01, 0x6d, 0x02, 0x38, 0xdd, 0xdc, 0xd4, 0x9b, 0x22, 0x92,
	0x64, 0xe6, 0xc6, 0xf6, 0x6a, 0x55, 0x93, 0x16, 0x2e, 0x9b, 0x1b, 0x7a, 0x55, 0x5a, 0xbc, 0x6c,
	0x56, 0x34, 0x4d, 0xba, 0xb6, 0xf3, 0xef, 0x1c, 0x58, 0x9f, 0xf9, 0x7c, 0x7f, 0x00, 0x3e, 0x36,
	0x0d, 0xa5, 0xd9, 0x56, 0x2a, 0xa2, 0xf8, 0x51, 0xbd, 0xad, 0x6b, 0x8a, 0x79, 0x79, 0xc5, 0x7d,
	0x01, 0x3e, 0x9b, 0xdd, 0xcd, 0x50, 0x95, 0x2a, 0x3a, 0x69, 0x56, 0xf4, 0x46, 0xa3, 0x6e, 0x9a,
	0x6a, 0x55, 0xca, 0xc1, 0x87, 0xe0, 0xd3, 0xff, 0xd2, 0x77, 0xdc, 0x73, 0x01, 0x7e, 0x0e, 0x1e,
	0xfc, 0x54, 0xcf, 0x96, 0xaa, 0x98, 0x4a, 0x59, 0x53, 0x23, 0x91, 0xb4, 0x08, 0x3f, 0x03, 0x3b,
	0xb3, 0xbb, 0xb6, 0x55, 0xa3, 0xae, 0x68, 0xf5, 0x1f, 0x44, 0x67, 0xe9, 0xda, 0xce, 0xef, 0xc1,
	0xd2, 0xc4, 0x3b, 0x5a, 0x6c, 0x06, 0xe5, 0xef, 0x4d, 0x55, 0x41, 0xfa, 0x89, 0xd9, 0x3a, 0x31,
	0x2f, 0xaf, 0x95, 0xa9, 0xd6, 0x67, 0xea, 0x4b, 0x29, 0x07, 0x65, 0xb0, 0x3e, 0x65, 0x55, 0xdb,
	0x15, 0xa5, 0x25, 0xe2, 0xdd, 0x31, 0xc0, 0xcd, 0xd1, 0xcb, 0x59, 0x2c, 0xf5, 0x97, 0x0d, 0x0d,
	0x95, 0xeb, 0x4d, 0xc5, 0xb8, 0x58, 0x5c, 0x1b, 0x20, 0x3f, 0xd1, 0x56, 0x56, 0xda, 0xea, 0x93,
	0x43, 0x29, 0x07, 0x21, 0x58, 0x9d, 0x30, 0x0b, 0x6f, 0x0b, 0x3b, 0x2f, 0x23, 0x66, 0xfc, 0x4c,
	0x4e, 0x99, 0x7a, 0x6b, 0x46, 0x0a, 0x6e, 0x81, 0xc2, 0x44, 0x5b, 0x55, 0xaf, 0x9c, 0x88, 0xfc,
	0x4a, 0x39, 0x51, 0x38, 0x13, 0x0d, 0x15, 0xbd, 0x69, 0x0a, 0xfb, 0x82, 0xd8, 0x63, 0x57, 0xa7,
	0x1f, 0x61, 0xa2, 0x68, 0xcb, 0x4a, 0xe5, 0x77, 0x6d, 0x4d, 0x69, 0x3f, 0x43, 0xdf, 0x9d, 0xe8,
	0xe6, 0xc5, 0xfd, 0xab, 0x00, 0xd6, 0x2e, 0x74, 0x88, 0x1d, 0x5c, 0x54, 0xe9, 0x4d, 0x69, 0x41,
	0x44, 0x74, 0xc9, 0x5e, 0xab, 0x49, 0x8b, 0xf0, 0x63, 0x70, 0xe7, 0x62, 0x43, 0x5b, 0xa9, 0xa9,
	0x48, 0x6d, 0x56, 0xf4, 0xaa, 0x58, 0xf8, 0xd7, 0xca, 0x7f, 0xce, 0x81, 0xcf, 0xa7, 0x9e, 0x97,
	0x38, 0x70, 0x7e, 0xf2, 0x89, 0xf9, 0x83, 0xd9, 0x73, 0xc2, 0xfe, 0xa0, 0x53, 0xb4, 0xa8, 0xb7,
	0x17, 0xab, 0x76, 0xe3, 0xff, 0x3a, 0xf6, 0xe8, 0x6e, 0x8f, 0xf8, 0xd1, 0x49, 0xb4, 0x37, 0xd7,
	0x7f, 0x42, 0xbf, 0x1a, 0x1b, 0x3b, 0xd7, 0x23, 0xdd, 0xa3, 0xff, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x75, 0x6d, 0x4c, 0xf4, 0x44, 0x1d, 0x00, 0x00,
}
