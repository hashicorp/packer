// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/postgresql/v1/config/postgresql10.proto

package postgresql // import "github.com/yandex-cloud/go-genproto/yandex/cloud/mdb/postgresql/v1/config"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"
import _ "github.com/yandex-cloud/go-genproto/yandex/cloud/validation"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type PostgresqlConfig10_WalLevel int32

const (
	PostgresqlConfig10_WAL_LEVEL_UNSPECIFIED PostgresqlConfig10_WalLevel = 0
	PostgresqlConfig10_WAL_LEVEL_REPLICA     PostgresqlConfig10_WalLevel = 1
	PostgresqlConfig10_WAL_LEVEL_LOGICAL     PostgresqlConfig10_WalLevel = 2
)

var PostgresqlConfig10_WalLevel_name = map[int32]string{
	0: "WAL_LEVEL_UNSPECIFIED",
	1: "WAL_LEVEL_REPLICA",
	2: "WAL_LEVEL_LOGICAL",
}
var PostgresqlConfig10_WalLevel_value = map[string]int32{
	"WAL_LEVEL_UNSPECIFIED": 0,
	"WAL_LEVEL_REPLICA":     1,
	"WAL_LEVEL_LOGICAL":     2,
}

func (x PostgresqlConfig10_WalLevel) String() string {
	return proto.EnumName(PostgresqlConfig10_WalLevel_name, int32(x))
}
func (PostgresqlConfig10_WalLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 0}
}

type PostgresqlConfig10_SynchronousCommit int32

const (
	PostgresqlConfig10_SYNCHRONOUS_COMMIT_UNSPECIFIED  PostgresqlConfig10_SynchronousCommit = 0
	PostgresqlConfig10_SYNCHRONOUS_COMMIT_ON           PostgresqlConfig10_SynchronousCommit = 1
	PostgresqlConfig10_SYNCHRONOUS_COMMIT_OFF          PostgresqlConfig10_SynchronousCommit = 2
	PostgresqlConfig10_SYNCHRONOUS_COMMIT_LOCAL        PostgresqlConfig10_SynchronousCommit = 3
	PostgresqlConfig10_SYNCHRONOUS_COMMIT_REMOTE_WRITE PostgresqlConfig10_SynchronousCommit = 4
	PostgresqlConfig10_SYNCHRONOUS_COMMIT_REMOTE_APPLY PostgresqlConfig10_SynchronousCommit = 5
)

var PostgresqlConfig10_SynchronousCommit_name = map[int32]string{
	0: "SYNCHRONOUS_COMMIT_UNSPECIFIED",
	1: "SYNCHRONOUS_COMMIT_ON",
	2: "SYNCHRONOUS_COMMIT_OFF",
	3: "SYNCHRONOUS_COMMIT_LOCAL",
	4: "SYNCHRONOUS_COMMIT_REMOTE_WRITE",
	5: "SYNCHRONOUS_COMMIT_REMOTE_APPLY",
}
var PostgresqlConfig10_SynchronousCommit_value = map[string]int32{
	"SYNCHRONOUS_COMMIT_UNSPECIFIED":  0,
	"SYNCHRONOUS_COMMIT_ON":           1,
	"SYNCHRONOUS_COMMIT_OFF":          2,
	"SYNCHRONOUS_COMMIT_LOCAL":        3,
	"SYNCHRONOUS_COMMIT_REMOTE_WRITE": 4,
	"SYNCHRONOUS_COMMIT_REMOTE_APPLY": 5,
}

func (x PostgresqlConfig10_SynchronousCommit) String() string {
	return proto.EnumName(PostgresqlConfig10_SynchronousCommit_name, int32(x))
}
func (PostgresqlConfig10_SynchronousCommit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 1}
}

type PostgresqlConfig10_ConstraintExclusion int32

const (
	PostgresqlConfig10_CONSTRAINT_EXCLUSION_UNSPECIFIED PostgresqlConfig10_ConstraintExclusion = 0
	PostgresqlConfig10_CONSTRAINT_EXCLUSION_ON          PostgresqlConfig10_ConstraintExclusion = 1
	PostgresqlConfig10_CONSTRAINT_EXCLUSION_OFF         PostgresqlConfig10_ConstraintExclusion = 2
	PostgresqlConfig10_CONSTRAINT_EXCLUSION_PARTITION   PostgresqlConfig10_ConstraintExclusion = 3
)

var PostgresqlConfig10_ConstraintExclusion_name = map[int32]string{
	0: "CONSTRAINT_EXCLUSION_UNSPECIFIED",
	1: "CONSTRAINT_EXCLUSION_ON",
	2: "CONSTRAINT_EXCLUSION_OFF",
	3: "CONSTRAINT_EXCLUSION_PARTITION",
}
var PostgresqlConfig10_ConstraintExclusion_value = map[string]int32{
	"CONSTRAINT_EXCLUSION_UNSPECIFIED": 0,
	"CONSTRAINT_EXCLUSION_ON":          1,
	"CONSTRAINT_EXCLUSION_OFF":         2,
	"CONSTRAINT_EXCLUSION_PARTITION":   3,
}

func (x PostgresqlConfig10_ConstraintExclusion) String() string {
	return proto.EnumName(PostgresqlConfig10_ConstraintExclusion_name, int32(x))
}
func (PostgresqlConfig10_ConstraintExclusion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 2}
}

type PostgresqlConfig10_ForceParallelMode int32

const (
	PostgresqlConfig10_FORCE_PARALLEL_MODE_UNSPECIFIED PostgresqlConfig10_ForceParallelMode = 0
	PostgresqlConfig10_FORCE_PARALLEL_MODE_ON          PostgresqlConfig10_ForceParallelMode = 1
	PostgresqlConfig10_FORCE_PARALLEL_MODE_OFF         PostgresqlConfig10_ForceParallelMode = 2
	PostgresqlConfig10_FORCE_PARALLEL_MODE_REGRESS     PostgresqlConfig10_ForceParallelMode = 3
)

var PostgresqlConfig10_ForceParallelMode_name = map[int32]string{
	0: "FORCE_PARALLEL_MODE_UNSPECIFIED",
	1: "FORCE_PARALLEL_MODE_ON",
	2: "FORCE_PARALLEL_MODE_OFF",
	3: "FORCE_PARALLEL_MODE_REGRESS",
}
var PostgresqlConfig10_ForceParallelMode_value = map[string]int32{
	"FORCE_PARALLEL_MODE_UNSPECIFIED": 0,
	"FORCE_PARALLEL_MODE_ON":          1,
	"FORCE_PARALLEL_MODE_OFF":         2,
	"FORCE_PARALLEL_MODE_REGRESS":     3,
}

func (x PostgresqlConfig10_ForceParallelMode) String() string {
	return proto.EnumName(PostgresqlConfig10_ForceParallelMode_name, int32(x))
}
func (PostgresqlConfig10_ForceParallelMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 3}
}

type PostgresqlConfig10_LogLevel int32

const (
	PostgresqlConfig10_LOG_LEVEL_UNSPECIFIED PostgresqlConfig10_LogLevel = 0
	PostgresqlConfig10_LOG_LEVEL_DEBUG5      PostgresqlConfig10_LogLevel = 1
	PostgresqlConfig10_LOG_LEVEL_DEBUG4      PostgresqlConfig10_LogLevel = 2
	PostgresqlConfig10_LOG_LEVEL_DEBUG3      PostgresqlConfig10_LogLevel = 3
	PostgresqlConfig10_LOG_LEVEL_DEBUG2      PostgresqlConfig10_LogLevel = 4
	PostgresqlConfig10_LOG_LEVEL_DEBUG1      PostgresqlConfig10_LogLevel = 5
	PostgresqlConfig10_LOG_LEVEL_LOG         PostgresqlConfig10_LogLevel = 6
	PostgresqlConfig10_LOG_LEVEL_NOTICE      PostgresqlConfig10_LogLevel = 7
	PostgresqlConfig10_LOG_LEVEL_WARNING     PostgresqlConfig10_LogLevel = 8
	PostgresqlConfig10_LOG_LEVEL_ERROR       PostgresqlConfig10_LogLevel = 9
	PostgresqlConfig10_LOG_LEVEL_FATAL       PostgresqlConfig10_LogLevel = 10
	PostgresqlConfig10_LOG_LEVEL_PANIC       PostgresqlConfig10_LogLevel = 11
)

var PostgresqlConfig10_LogLevel_name = map[int32]string{
	0:  "LOG_LEVEL_UNSPECIFIED",
	1:  "LOG_LEVEL_DEBUG5",
	2:  "LOG_LEVEL_DEBUG4",
	3:  "LOG_LEVEL_DEBUG3",
	4:  "LOG_LEVEL_DEBUG2",
	5:  "LOG_LEVEL_DEBUG1",
	6:  "LOG_LEVEL_LOG",
	7:  "LOG_LEVEL_NOTICE",
	8:  "LOG_LEVEL_WARNING",
	9:  "LOG_LEVEL_ERROR",
	10: "LOG_LEVEL_FATAL",
	11: "LOG_LEVEL_PANIC",
}
var PostgresqlConfig10_LogLevel_value = map[string]int32{
	"LOG_LEVEL_UNSPECIFIED": 0,
	"LOG_LEVEL_DEBUG5":      1,
	"LOG_LEVEL_DEBUG4":      2,
	"LOG_LEVEL_DEBUG3":      3,
	"LOG_LEVEL_DEBUG2":      4,
	"LOG_LEVEL_DEBUG1":      5,
	"LOG_LEVEL_LOG":         6,
	"LOG_LEVEL_NOTICE":      7,
	"LOG_LEVEL_WARNING":     8,
	"LOG_LEVEL_ERROR":       9,
	"LOG_LEVEL_FATAL":       10,
	"LOG_LEVEL_PANIC":       11,
}

func (x PostgresqlConfig10_LogLevel) String() string {
	return proto.EnumName(PostgresqlConfig10_LogLevel_name, int32(x))
}
func (PostgresqlConfig10_LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 4}
}

type PostgresqlConfig10_LogErrorVerbosity int32

const (
	PostgresqlConfig10_LOG_ERROR_VERBOSITY_UNSPECIFIED PostgresqlConfig10_LogErrorVerbosity = 0
	PostgresqlConfig10_LOG_ERROR_VERBOSITY_TERSE       PostgresqlConfig10_LogErrorVerbosity = 1
	PostgresqlConfig10_LOG_ERROR_VERBOSITY_DEFAULT     PostgresqlConfig10_LogErrorVerbosity = 2
	PostgresqlConfig10_LOG_ERROR_VERBOSITY_VERBOSE     PostgresqlConfig10_LogErrorVerbosity = 3
)

var PostgresqlConfig10_LogErrorVerbosity_name = map[int32]string{
	0: "LOG_ERROR_VERBOSITY_UNSPECIFIED",
	1: "LOG_ERROR_VERBOSITY_TERSE",
	2: "LOG_ERROR_VERBOSITY_DEFAULT",
	3: "LOG_ERROR_VERBOSITY_VERBOSE",
}
var PostgresqlConfig10_LogErrorVerbosity_value = map[string]int32{
	"LOG_ERROR_VERBOSITY_UNSPECIFIED": 0,
	"LOG_ERROR_VERBOSITY_TERSE":       1,
	"LOG_ERROR_VERBOSITY_DEFAULT":     2,
	"LOG_ERROR_VERBOSITY_VERBOSE":     3,
}

func (x PostgresqlConfig10_LogErrorVerbosity) String() string {
	return proto.EnumName(PostgresqlConfig10_LogErrorVerbosity_name, int32(x))
}
func (PostgresqlConfig10_LogErrorVerbosity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 5}
}

type PostgresqlConfig10_LogStatement int32

const (
	PostgresqlConfig10_LOG_STATEMENT_UNSPECIFIED PostgresqlConfig10_LogStatement = 0
	PostgresqlConfig10_LOG_STATEMENT_NONE        PostgresqlConfig10_LogStatement = 1
	PostgresqlConfig10_LOG_STATEMENT_DDL         PostgresqlConfig10_LogStatement = 2
	PostgresqlConfig10_LOG_STATEMENT_MOD         PostgresqlConfig10_LogStatement = 3
	PostgresqlConfig10_LOG_STATEMENT_ALL         PostgresqlConfig10_LogStatement = 4
)

var PostgresqlConfig10_LogStatement_name = map[int32]string{
	0: "LOG_STATEMENT_UNSPECIFIED",
	1: "LOG_STATEMENT_NONE",
	2: "LOG_STATEMENT_DDL",
	3: "LOG_STATEMENT_MOD",
	4: "LOG_STATEMENT_ALL",
}
var PostgresqlConfig10_LogStatement_value = map[string]int32{
	"LOG_STATEMENT_UNSPECIFIED": 0,
	"LOG_STATEMENT_NONE":        1,
	"LOG_STATEMENT_DDL":         2,
	"LOG_STATEMENT_MOD":         3,
	"LOG_STATEMENT_ALL":         4,
}

func (x PostgresqlConfig10_LogStatement) String() string {
	return proto.EnumName(PostgresqlConfig10_LogStatement_name, int32(x))
}
func (PostgresqlConfig10_LogStatement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 6}
}

type PostgresqlConfig10_TransactionIsolation int32

const (
	PostgresqlConfig10_TRANSACTION_ISOLATION_UNSPECIFIED      PostgresqlConfig10_TransactionIsolation = 0
	PostgresqlConfig10_TRANSACTION_ISOLATION_READ_UNCOMMITTED PostgresqlConfig10_TransactionIsolation = 1
	PostgresqlConfig10_TRANSACTION_ISOLATION_READ_COMMITTED   PostgresqlConfig10_TransactionIsolation = 2
	PostgresqlConfig10_TRANSACTION_ISOLATION_REPEATABLE_READ  PostgresqlConfig10_TransactionIsolation = 3
	PostgresqlConfig10_TRANSACTION_ISOLATION_SERIALIZABLE     PostgresqlConfig10_TransactionIsolation = 4
)

var PostgresqlConfig10_TransactionIsolation_name = map[int32]string{
	0: "TRANSACTION_ISOLATION_UNSPECIFIED",
	1: "TRANSACTION_ISOLATION_READ_UNCOMMITTED",
	2: "TRANSACTION_ISOLATION_READ_COMMITTED",
	3: "TRANSACTION_ISOLATION_REPEATABLE_READ",
	4: "TRANSACTION_ISOLATION_SERIALIZABLE",
}
var PostgresqlConfig10_TransactionIsolation_value = map[string]int32{
	"TRANSACTION_ISOLATION_UNSPECIFIED":      0,
	"TRANSACTION_ISOLATION_READ_UNCOMMITTED": 1,
	"TRANSACTION_ISOLATION_READ_COMMITTED":   2,
	"TRANSACTION_ISOLATION_REPEATABLE_READ":  3,
	"TRANSACTION_ISOLATION_SERIALIZABLE":     4,
}

func (x PostgresqlConfig10_TransactionIsolation) String() string {
	return proto.EnumName(PostgresqlConfig10_TransactionIsolation_name, int32(x))
}
func (PostgresqlConfig10_TransactionIsolation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 7}
}

type PostgresqlConfig10_ByteaOutput int32

const (
	PostgresqlConfig10_BYTEA_OUTPUT_UNSPECIFIED PostgresqlConfig10_ByteaOutput = 0
	PostgresqlConfig10_BYTEA_OUTPUT_HEX         PostgresqlConfig10_ByteaOutput = 1
	PostgresqlConfig10_BYTEA_OUTPUT_ESCAPED     PostgresqlConfig10_ByteaOutput = 2
)

var PostgresqlConfig10_ByteaOutput_name = map[int32]string{
	0: "BYTEA_OUTPUT_UNSPECIFIED",
	1: "BYTEA_OUTPUT_HEX",
	2: "BYTEA_OUTPUT_ESCAPED",
}
var PostgresqlConfig10_ByteaOutput_value = map[string]int32{
	"BYTEA_OUTPUT_UNSPECIFIED": 0,
	"BYTEA_OUTPUT_HEX":         1,
	"BYTEA_OUTPUT_ESCAPED":     2,
}

func (x PostgresqlConfig10_ByteaOutput) String() string {
	return proto.EnumName(PostgresqlConfig10_ByteaOutput_name, int32(x))
}
func (PostgresqlConfig10_ByteaOutput) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 8}
}

type PostgresqlConfig10_XmlBinary int32

const (
	PostgresqlConfig10_XML_BINARY_UNSPECIFIED PostgresqlConfig10_XmlBinary = 0
	PostgresqlConfig10_XML_BINARY_BASE64      PostgresqlConfig10_XmlBinary = 1
	PostgresqlConfig10_XML_BINARY_HEX         PostgresqlConfig10_XmlBinary = 2
)

var PostgresqlConfig10_XmlBinary_name = map[int32]string{
	0: "XML_BINARY_UNSPECIFIED",
	1: "XML_BINARY_BASE64",
	2: "XML_BINARY_HEX",
}
var PostgresqlConfig10_XmlBinary_value = map[string]int32{
	"XML_BINARY_UNSPECIFIED": 0,
	"XML_BINARY_BASE64":      1,
	"XML_BINARY_HEX":         2,
}

func (x PostgresqlConfig10_XmlBinary) String() string {
	return proto.EnumName(PostgresqlConfig10_XmlBinary_name, int32(x))
}
func (PostgresqlConfig10_XmlBinary) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 9}
}

type PostgresqlConfig10_XmlOption int32

const (
	PostgresqlConfig10_XML_OPTION_UNSPECIFIED PostgresqlConfig10_XmlOption = 0
	PostgresqlConfig10_XML_OPTION_DOCUMENT    PostgresqlConfig10_XmlOption = 1
	PostgresqlConfig10_XML_OPTION_CONTENT     PostgresqlConfig10_XmlOption = 2
)

var PostgresqlConfig10_XmlOption_name = map[int32]string{
	0: "XML_OPTION_UNSPECIFIED",
	1: "XML_OPTION_DOCUMENT",
	2: "XML_OPTION_CONTENT",
}
var PostgresqlConfig10_XmlOption_value = map[string]int32{
	"XML_OPTION_UNSPECIFIED": 0,
	"XML_OPTION_DOCUMENT":    1,
	"XML_OPTION_CONTENT":     2,
}

func (x PostgresqlConfig10_XmlOption) String() string {
	return proto.EnumName(PostgresqlConfig10_XmlOption_name, int32(x))
}
func (PostgresqlConfig10_XmlOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 10}
}

type PostgresqlConfig10_BackslashQuote int32

const (
	PostgresqlConfig10_BACKSLASH_QUOTE_UNSPECIFIED   PostgresqlConfig10_BackslashQuote = 0
	PostgresqlConfig10_BACKSLASH_QUOTE               PostgresqlConfig10_BackslashQuote = 1
	PostgresqlConfig10_BACKSLASH_QUOTE_ON            PostgresqlConfig10_BackslashQuote = 2
	PostgresqlConfig10_BACKSLASH_QUOTE_OFF           PostgresqlConfig10_BackslashQuote = 3
	PostgresqlConfig10_BACKSLASH_QUOTE_SAFE_ENCODING PostgresqlConfig10_BackslashQuote = 4
)

var PostgresqlConfig10_BackslashQuote_name = map[int32]string{
	0: "BACKSLASH_QUOTE_UNSPECIFIED",
	1: "BACKSLASH_QUOTE",
	2: "BACKSLASH_QUOTE_ON",
	3: "BACKSLASH_QUOTE_OFF",
	4: "BACKSLASH_QUOTE_SAFE_ENCODING",
}
var PostgresqlConfig10_BackslashQuote_value = map[string]int32{
	"BACKSLASH_QUOTE_UNSPECIFIED":   0,
	"BACKSLASH_QUOTE":               1,
	"BACKSLASH_QUOTE_ON":            2,
	"BACKSLASH_QUOTE_OFF":           3,
	"BACKSLASH_QUOTE_SAFE_ENCODING": 4,
}

func (x PostgresqlConfig10_BackslashQuote) String() string {
	return proto.EnumName(PostgresqlConfig10_BackslashQuote_name, int32(x))
}
func (PostgresqlConfig10_BackslashQuote) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0, 11}
}

// Options and structure of `PostgresqlConfig` reflects PostgreSQL configuration file
// parameters whose detailed description is available in
// [PostgreSQL documentation](https://www.postgresql.org/docs/10/runtime-config.html).
type PostgresqlConfig10 struct {
	MaxConnections                  *wrappers.Int64Value                    `protobuf:"bytes,1,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	SharedBuffers                   *wrappers.Int64Value                    `protobuf:"bytes,2,opt,name=shared_buffers,json=sharedBuffers,proto3" json:"shared_buffers,omitempty"`
	TempBuffers                     *wrappers.Int64Value                    `protobuf:"bytes,3,opt,name=temp_buffers,json=tempBuffers,proto3" json:"temp_buffers,omitempty"`
	MaxPreparedTransactions         *wrappers.Int64Value                    `protobuf:"bytes,4,opt,name=max_prepared_transactions,json=maxPreparedTransactions,proto3" json:"max_prepared_transactions,omitempty"`
	WorkMem                         *wrappers.Int64Value                    `protobuf:"bytes,5,opt,name=work_mem,json=workMem,proto3" json:"work_mem,omitempty"`
	MaintenanceWorkMem              *wrappers.Int64Value                    `protobuf:"bytes,6,opt,name=maintenance_work_mem,json=maintenanceWorkMem,proto3" json:"maintenance_work_mem,omitempty"`
	ReplacementSortTuples           *wrappers.Int64Value                    `protobuf:"bytes,7,opt,name=replacement_sort_tuples,json=replacementSortTuples,proto3" json:"replacement_sort_tuples,omitempty"`
	AutovacuumWorkMem               *wrappers.Int64Value                    `protobuf:"bytes,8,opt,name=autovacuum_work_mem,json=autovacuumWorkMem,proto3" json:"autovacuum_work_mem,omitempty"`
	TempFileLimit                   *wrappers.Int64Value                    `protobuf:"bytes,9,opt,name=temp_file_limit,json=tempFileLimit,proto3" json:"temp_file_limit,omitempty"`
	VacuumCostDelay                 *wrappers.Int64Value                    `protobuf:"bytes,10,opt,name=vacuum_cost_delay,json=vacuumCostDelay,proto3" json:"vacuum_cost_delay,omitempty"`
	VacuumCostPageHit               *wrappers.Int64Value                    `protobuf:"bytes,11,opt,name=vacuum_cost_page_hit,json=vacuumCostPageHit,proto3" json:"vacuum_cost_page_hit,omitempty"`
	VacuumCostPageMiss              *wrappers.Int64Value                    `protobuf:"bytes,12,opt,name=vacuum_cost_page_miss,json=vacuumCostPageMiss,proto3" json:"vacuum_cost_page_miss,omitempty"`
	VacuumCostPageDirty             *wrappers.Int64Value                    `protobuf:"bytes,13,opt,name=vacuum_cost_page_dirty,json=vacuumCostPageDirty,proto3" json:"vacuum_cost_page_dirty,omitempty"`
	VacuumCostLimit                 *wrappers.Int64Value                    `protobuf:"bytes,14,opt,name=vacuum_cost_limit,json=vacuumCostLimit,proto3" json:"vacuum_cost_limit,omitempty"`
	BgwriterDelay                   *wrappers.Int64Value                    `protobuf:"bytes,15,opt,name=bgwriter_delay,json=bgwriterDelay,proto3" json:"bgwriter_delay,omitempty"`
	BgwriterLruMaxpages             *wrappers.Int64Value                    `protobuf:"bytes,16,opt,name=bgwriter_lru_maxpages,json=bgwriterLruMaxpages,proto3" json:"bgwriter_lru_maxpages,omitempty"`
	BgwriterLruMultiplier           *wrappers.DoubleValue                   `protobuf:"bytes,17,opt,name=bgwriter_lru_multiplier,json=bgwriterLruMultiplier,proto3" json:"bgwriter_lru_multiplier,omitempty"`
	BgwriterFlushAfter              *wrappers.Int64Value                    `protobuf:"bytes,18,opt,name=bgwriter_flush_after,json=bgwriterFlushAfter,proto3" json:"bgwriter_flush_after,omitempty"`
	BackendFlushAfter               *wrappers.Int64Value                    `protobuf:"bytes,19,opt,name=backend_flush_after,json=backendFlushAfter,proto3" json:"backend_flush_after,omitempty"`
	OldSnapshotThreshold            *wrappers.Int64Value                    `protobuf:"bytes,20,opt,name=old_snapshot_threshold,json=oldSnapshotThreshold,proto3" json:"old_snapshot_threshold,omitempty"`
	WalLevel                        PostgresqlConfig10_WalLevel             `protobuf:"varint,21,opt,name=wal_level,json=walLevel,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_WalLevel" json:"wal_level,omitempty"`
	SynchronousCommit               PostgresqlConfig10_SynchronousCommit    `protobuf:"varint,22,opt,name=synchronous_commit,json=synchronousCommit,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_SynchronousCommit" json:"synchronous_commit,omitempty"`
	CheckpointTimeout               *wrappers.Int64Value                    `protobuf:"bytes,23,opt,name=checkpoint_timeout,json=checkpointTimeout,proto3" json:"checkpoint_timeout,omitempty"`
	CheckpointCompletionTarget      *wrappers.DoubleValue                   `protobuf:"bytes,24,opt,name=checkpoint_completion_target,json=checkpointCompletionTarget,proto3" json:"checkpoint_completion_target,omitempty"`
	CheckpointFlushAfter            *wrappers.Int64Value                    `protobuf:"bytes,25,opt,name=checkpoint_flush_after,json=checkpointFlushAfter,proto3" json:"checkpoint_flush_after,omitempty"`
	MaxWalSize                      *wrappers.Int64Value                    `protobuf:"bytes,26,opt,name=max_wal_size,json=maxWalSize,proto3" json:"max_wal_size,omitempty"`
	MinWalSize                      *wrappers.Int64Value                    `protobuf:"bytes,27,opt,name=min_wal_size,json=minWalSize,proto3" json:"min_wal_size,omitempty"`
	MaxStandbyStreamingDelay        *wrappers.Int64Value                    `protobuf:"bytes,28,opt,name=max_standby_streaming_delay,json=maxStandbyStreamingDelay,proto3" json:"max_standby_streaming_delay,omitempty"`
	DefaultStatisticsTarget         *wrappers.Int64Value                    `protobuf:"bytes,29,opt,name=default_statistics_target,json=defaultStatisticsTarget,proto3" json:"default_statistics_target,omitempty"`
	ConstraintExclusion             PostgresqlConfig10_ConstraintExclusion  `protobuf:"varint,30,opt,name=constraint_exclusion,json=constraintExclusion,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_ConstraintExclusion" json:"constraint_exclusion,omitempty"`
	CursorTupleFraction             *wrappers.DoubleValue                   `protobuf:"bytes,31,opt,name=cursor_tuple_fraction,json=cursorTupleFraction,proto3" json:"cursor_tuple_fraction,omitempty"`
	FromCollapseLimit               *wrappers.Int64Value                    `protobuf:"bytes,32,opt,name=from_collapse_limit,json=fromCollapseLimit,proto3" json:"from_collapse_limit,omitempty"`
	JoinCollapseLimit               *wrappers.Int64Value                    `protobuf:"bytes,33,opt,name=join_collapse_limit,json=joinCollapseLimit,proto3" json:"join_collapse_limit,omitempty"`
	ForceParallelMode               PostgresqlConfig10_ForceParallelMode    `protobuf:"varint,34,opt,name=force_parallel_mode,json=forceParallelMode,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_ForceParallelMode" json:"force_parallel_mode,omitempty"`
	ClientMinMessages               PostgresqlConfig10_LogLevel             `protobuf:"varint,35,opt,name=client_min_messages,json=clientMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_LogLevel" json:"client_min_messages,omitempty"`
	LogMinMessages                  PostgresqlConfig10_LogLevel             `protobuf:"varint,36,opt,name=log_min_messages,json=logMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_LogLevel" json:"log_min_messages,omitempty"`
	LogMinErrorStatement            PostgresqlConfig10_LogLevel             `protobuf:"varint,37,opt,name=log_min_error_statement,json=logMinErrorStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_LogLevel" json:"log_min_error_statement,omitempty"`
	LogMinDurationStatement         *wrappers.Int64Value                    `protobuf:"bytes,38,opt,name=log_min_duration_statement,json=logMinDurationStatement,proto3" json:"log_min_duration_statement,omitempty"`
	LogCheckpoints                  *wrappers.BoolValue                     `protobuf:"bytes,39,opt,name=log_checkpoints,json=logCheckpoints,proto3" json:"log_checkpoints,omitempty"`
	LogConnections                  *wrappers.BoolValue                     `protobuf:"bytes,40,opt,name=log_connections,json=logConnections,proto3" json:"log_connections,omitempty"`
	LogDisconnections               *wrappers.BoolValue                     `protobuf:"bytes,41,opt,name=log_disconnections,json=logDisconnections,proto3" json:"log_disconnections,omitempty"`
	LogDuration                     *wrappers.BoolValue                     `protobuf:"bytes,42,opt,name=log_duration,json=logDuration,proto3" json:"log_duration,omitempty"`
	LogErrorVerbosity               PostgresqlConfig10_LogErrorVerbosity    `protobuf:"varint,43,opt,name=log_error_verbosity,json=logErrorVerbosity,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_LogErrorVerbosity" json:"log_error_verbosity,omitempty"`
	LogLockWaits                    *wrappers.BoolValue                     `protobuf:"bytes,44,opt,name=log_lock_waits,json=logLockWaits,proto3" json:"log_lock_waits,omitempty"`
	LogStatement                    PostgresqlConfig10_LogStatement         `protobuf:"varint,45,opt,name=log_statement,json=logStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_LogStatement" json:"log_statement,omitempty"`
	LogTempFiles                    *wrappers.Int64Value                    `protobuf:"bytes,46,opt,name=log_temp_files,json=logTempFiles,proto3" json:"log_temp_files,omitempty"`
	SearchPath                      string                                  `protobuf:"bytes,47,opt,name=search_path,json=searchPath,proto3" json:"search_path,omitempty"`
	RowSecurity                     *wrappers.BoolValue                     `protobuf:"bytes,48,opt,name=row_security,json=rowSecurity,proto3" json:"row_security,omitempty"`
	DefaultTransactionIsolation     PostgresqlConfig10_TransactionIsolation `protobuf:"varint,49,opt,name=default_transaction_isolation,json=defaultTransactionIsolation,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_TransactionIsolation" json:"default_transaction_isolation,omitempty"`
	StatementTimeout                *wrappers.Int64Value                    `protobuf:"bytes,50,opt,name=statement_timeout,json=statementTimeout,proto3" json:"statement_timeout,omitempty"`
	LockTimeout                     *wrappers.Int64Value                    `protobuf:"bytes,51,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`
	IdleInTransactionSessionTimeout *wrappers.Int64Value                    `protobuf:"bytes,52,opt,name=idle_in_transaction_session_timeout,json=idleInTransactionSessionTimeout,proto3" json:"idle_in_transaction_session_timeout,omitempty"`
	ByteaOutput                     PostgresqlConfig10_ByteaOutput          `protobuf:"varint,53,opt,name=bytea_output,json=byteaOutput,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_ByteaOutput" json:"bytea_output,omitempty"`
	Xmlbinary                       PostgresqlConfig10_XmlBinary            `protobuf:"varint,54,opt,name=xmlbinary,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_XmlBinary" json:"xmlbinary,omitempty"`
	Xmloption                       PostgresqlConfig10_XmlOption            `protobuf:"varint,55,opt,name=xmloption,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_XmlOption" json:"xmloption,omitempty"`
	GinPendingListLimit             *wrappers.Int64Value                    `protobuf:"bytes,56,opt,name=gin_pending_list_limit,json=ginPendingListLimit,proto3" json:"gin_pending_list_limit,omitempty"`
	DeadlockTimeout                 *wrappers.Int64Value                    `protobuf:"bytes,57,opt,name=deadlock_timeout,json=deadlockTimeout,proto3" json:"deadlock_timeout,omitempty"`
	MaxLocksPerTransaction          *wrappers.Int64Value                    `protobuf:"bytes,58,opt,name=max_locks_per_transaction,json=maxLocksPerTransaction,proto3" json:"max_locks_per_transaction,omitempty"`
	MaxPredLocksPerTransaction      *wrappers.Int64Value                    `protobuf:"bytes,59,opt,name=max_pred_locks_per_transaction,json=maxPredLocksPerTransaction,proto3" json:"max_pred_locks_per_transaction,omitempty"`
	ArrayNulls                      *wrappers.BoolValue                     `protobuf:"bytes,60,opt,name=array_nulls,json=arrayNulls,proto3" json:"array_nulls,omitempty"`
	BackslashQuote                  PostgresqlConfig10_BackslashQuote       `protobuf:"varint,61,opt,name=backslash_quote,json=backslashQuote,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_BackslashQuote" json:"backslash_quote,omitempty"`
	DefaultWithOids                 *wrappers.BoolValue                     `protobuf:"bytes,62,opt,name=default_with_oids,json=defaultWithOids,proto3" json:"default_with_oids,omitempty"`
	EscapeStringWarning             *wrappers.BoolValue                     `protobuf:"bytes,63,opt,name=escape_string_warning,json=escapeStringWarning,proto3" json:"escape_string_warning,omitempty"`
	LoCompatPrivileges              *wrappers.BoolValue                     `protobuf:"bytes,64,opt,name=lo_compat_privileges,json=loCompatPrivileges,proto3" json:"lo_compat_privileges,omitempty"`
	OperatorPrecedenceWarning       *wrappers.BoolValue                     `protobuf:"bytes,65,opt,name=operator_precedence_warning,json=operatorPrecedenceWarning,proto3" json:"operator_precedence_warning,omitempty"`
	QuoteAllIdentifiers             *wrappers.BoolValue                     `protobuf:"bytes,66,opt,name=quote_all_identifiers,json=quoteAllIdentifiers,proto3" json:"quote_all_identifiers,omitempty"`
	StandardConformingStrings       *wrappers.BoolValue                     `protobuf:"bytes,67,opt,name=standard_conforming_strings,json=standardConformingStrings,proto3" json:"standard_conforming_strings,omitempty"`
	SynchronizeSeqscans             *wrappers.BoolValue                     `protobuf:"bytes,68,opt,name=synchronize_seqscans,json=synchronizeSeqscans,proto3" json:"synchronize_seqscans,omitempty"`
	TransformNullEquals             *wrappers.BoolValue                     `protobuf:"bytes,69,opt,name=transform_null_equals,json=transformNullEquals,proto3" json:"transform_null_equals,omitempty"`
	ExitOnError                     *wrappers.BoolValue                     `protobuf:"bytes,70,opt,name=exit_on_error,json=exitOnError,proto3" json:"exit_on_error,omitempty"`
	SeqPageCost                     *wrappers.DoubleValue                   `protobuf:"bytes,71,opt,name=seq_page_cost,json=seqPageCost,proto3" json:"seq_page_cost,omitempty"`
	RandomPageCost                  *wrappers.DoubleValue                   `protobuf:"bytes,72,opt,name=random_page_cost,json=randomPageCost,proto3" json:"random_page_cost,omitempty"`
	AutovacuumMaxWorkers            *wrappers.Int64Value                    `protobuf:"bytes,73,opt,name=autovacuum_max_workers,json=autovacuumMaxWorkers,proto3" json:"autovacuum_max_workers,omitempty"`
	AutovacuumVacuumCostDelay       *wrappers.Int64Value                    `protobuf:"bytes,74,opt,name=autovacuum_vacuum_cost_delay,json=autovacuumVacuumCostDelay,proto3" json:"autovacuum_vacuum_cost_delay,omitempty"`
	AutovacuumVacuumCostLimit       *wrappers.Int64Value                    `protobuf:"bytes,75,opt,name=autovacuum_vacuum_cost_limit,json=autovacuumVacuumCostLimit,proto3" json:"autovacuum_vacuum_cost_limit,omitempty"`
	AutovacuumNaptime               *wrappers.Int64Value                    `protobuf:"bytes,76,opt,name=autovacuum_naptime,json=autovacuumNaptime,proto3" json:"autovacuum_naptime,omitempty"`
	ArchiveTimeout                  *wrappers.Int64Value                    `protobuf:"bytes,77,opt,name=archive_timeout,json=archiveTimeout,proto3" json:"archive_timeout,omitempty"`
	TrackActivityQuerySize          *wrappers.Int64Value                    `protobuf:"bytes,78,opt,name=track_activity_query_size,json=trackActivityQuerySize,proto3" json:"track_activity_query_size,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                                `json:"-"`
	XXX_unrecognized                []byte                                  `json:"-"`
	XXX_sizecache                   int32                                   `json:"-"`
}

func (m *PostgresqlConfig10) Reset()         { *m = PostgresqlConfig10{} }
func (m *PostgresqlConfig10) String() string { return proto.CompactTextString(m) }
func (*PostgresqlConfig10) ProtoMessage()    {}
func (*PostgresqlConfig10) Descriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{0}
}
func (m *PostgresqlConfig10) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresqlConfig10.Unmarshal(m, b)
}
func (m *PostgresqlConfig10) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresqlConfig10.Marshal(b, m, deterministic)
}
func (dst *PostgresqlConfig10) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresqlConfig10.Merge(dst, src)
}
func (m *PostgresqlConfig10) XXX_Size() int {
	return xxx_messageInfo_PostgresqlConfig10.Size(m)
}
func (m *PostgresqlConfig10) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresqlConfig10.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresqlConfig10 proto.InternalMessageInfo

func (m *PostgresqlConfig10) GetMaxConnections() *wrappers.Int64Value {
	if m != nil {
		return m.MaxConnections
	}
	return nil
}

func (m *PostgresqlConfig10) GetSharedBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.SharedBuffers
	}
	return nil
}

func (m *PostgresqlConfig10) GetTempBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.TempBuffers
	}
	return nil
}

func (m *PostgresqlConfig10) GetMaxPreparedTransactions() *wrappers.Int64Value {
	if m != nil {
		return m.MaxPreparedTransactions
	}
	return nil
}

func (m *PostgresqlConfig10) GetWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.WorkMem
	}
	return nil
}

func (m *PostgresqlConfig10) GetMaintenanceWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.MaintenanceWorkMem
	}
	return nil
}

func (m *PostgresqlConfig10) GetReplacementSortTuples() *wrappers.Int64Value {
	if m != nil {
		return m.ReplacementSortTuples
	}
	return nil
}

func (m *PostgresqlConfig10) GetAutovacuumWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumWorkMem
	}
	return nil
}

func (m *PostgresqlConfig10) GetTempFileLimit() *wrappers.Int64Value {
	if m != nil {
		return m.TempFileLimit
	}
	return nil
}

func (m *PostgresqlConfig10) GetVacuumCostDelay() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostDelay
	}
	return nil
}

func (m *PostgresqlConfig10) GetVacuumCostPageHit() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageHit
	}
	return nil
}

func (m *PostgresqlConfig10) GetVacuumCostPageMiss() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageMiss
	}
	return nil
}

func (m *PostgresqlConfig10) GetVacuumCostPageDirty() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageDirty
	}
	return nil
}

func (m *PostgresqlConfig10) GetVacuumCostLimit() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostLimit
	}
	return nil
}

func (m *PostgresqlConfig10) GetBgwriterDelay() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterDelay
	}
	return nil
}

func (m *PostgresqlConfig10) GetBgwriterLruMaxpages() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterLruMaxpages
	}
	return nil
}

func (m *PostgresqlConfig10) GetBgwriterLruMultiplier() *wrappers.DoubleValue {
	if m != nil {
		return m.BgwriterLruMultiplier
	}
	return nil
}

func (m *PostgresqlConfig10) GetBgwriterFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig10) GetBackendFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.BackendFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig10) GetOldSnapshotThreshold() *wrappers.Int64Value {
	if m != nil {
		return m.OldSnapshotThreshold
	}
	return nil
}

func (m *PostgresqlConfig10) GetWalLevel() PostgresqlConfig10_WalLevel {
	if m != nil {
		return m.WalLevel
	}
	return PostgresqlConfig10_WAL_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetSynchronousCommit() PostgresqlConfig10_SynchronousCommit {
	if m != nil {
		return m.SynchronousCommit
	}
	return PostgresqlConfig10_SYNCHRONOUS_COMMIT_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetCheckpointTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.CheckpointTimeout
	}
	return nil
}

func (m *PostgresqlConfig10) GetCheckpointCompletionTarget() *wrappers.DoubleValue {
	if m != nil {
		return m.CheckpointCompletionTarget
	}
	return nil
}

func (m *PostgresqlConfig10) GetCheckpointFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.CheckpointFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig10) GetMaxWalSize() *wrappers.Int64Value {
	if m != nil {
		return m.MaxWalSize
	}
	return nil
}

func (m *PostgresqlConfig10) GetMinWalSize() *wrappers.Int64Value {
	if m != nil {
		return m.MinWalSize
	}
	return nil
}

func (m *PostgresqlConfig10) GetMaxStandbyStreamingDelay() *wrappers.Int64Value {
	if m != nil {
		return m.MaxStandbyStreamingDelay
	}
	return nil
}

func (m *PostgresqlConfig10) GetDefaultStatisticsTarget() *wrappers.Int64Value {
	if m != nil {
		return m.DefaultStatisticsTarget
	}
	return nil
}

func (m *PostgresqlConfig10) GetConstraintExclusion() PostgresqlConfig10_ConstraintExclusion {
	if m != nil {
		return m.ConstraintExclusion
	}
	return PostgresqlConfig10_CONSTRAINT_EXCLUSION_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetCursorTupleFraction() *wrappers.DoubleValue {
	if m != nil {
		return m.CursorTupleFraction
	}
	return nil
}

func (m *PostgresqlConfig10) GetFromCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.FromCollapseLimit
	}
	return nil
}

func (m *PostgresqlConfig10) GetJoinCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.JoinCollapseLimit
	}
	return nil
}

func (m *PostgresqlConfig10) GetForceParallelMode() PostgresqlConfig10_ForceParallelMode {
	if m != nil {
		return m.ForceParallelMode
	}
	return PostgresqlConfig10_FORCE_PARALLEL_MODE_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetClientMinMessages() PostgresqlConfig10_LogLevel {
	if m != nil {
		return m.ClientMinMessages
	}
	return PostgresqlConfig10_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetLogMinMessages() PostgresqlConfig10_LogLevel {
	if m != nil {
		return m.LogMinMessages
	}
	return PostgresqlConfig10_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetLogMinErrorStatement() PostgresqlConfig10_LogLevel {
	if m != nil {
		return m.LogMinErrorStatement
	}
	return PostgresqlConfig10_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetLogMinDurationStatement() *wrappers.Int64Value {
	if m != nil {
		return m.LogMinDurationStatement
	}
	return nil
}

func (m *PostgresqlConfig10) GetLogCheckpoints() *wrappers.BoolValue {
	if m != nil {
		return m.LogCheckpoints
	}
	return nil
}

func (m *PostgresqlConfig10) GetLogConnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogConnections
	}
	return nil
}

func (m *PostgresqlConfig10) GetLogDisconnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogDisconnections
	}
	return nil
}

func (m *PostgresqlConfig10) GetLogDuration() *wrappers.BoolValue {
	if m != nil {
		return m.LogDuration
	}
	return nil
}

func (m *PostgresqlConfig10) GetLogErrorVerbosity() PostgresqlConfig10_LogErrorVerbosity {
	if m != nil {
		return m.LogErrorVerbosity
	}
	return PostgresqlConfig10_LOG_ERROR_VERBOSITY_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetLogLockWaits() *wrappers.BoolValue {
	if m != nil {
		return m.LogLockWaits
	}
	return nil
}

func (m *PostgresqlConfig10) GetLogStatement() PostgresqlConfig10_LogStatement {
	if m != nil {
		return m.LogStatement
	}
	return PostgresqlConfig10_LOG_STATEMENT_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetLogTempFiles() *wrappers.Int64Value {
	if m != nil {
		return m.LogTempFiles
	}
	return nil
}

func (m *PostgresqlConfig10) GetSearchPath() string {
	if m != nil {
		return m.SearchPath
	}
	return ""
}

func (m *PostgresqlConfig10) GetRowSecurity() *wrappers.BoolValue {
	if m != nil {
		return m.RowSecurity
	}
	return nil
}

func (m *PostgresqlConfig10) GetDefaultTransactionIsolation() PostgresqlConfig10_TransactionIsolation {
	if m != nil {
		return m.DefaultTransactionIsolation
	}
	return PostgresqlConfig10_TRANSACTION_ISOLATION_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetStatementTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.StatementTimeout
	}
	return nil
}

func (m *PostgresqlConfig10) GetLockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.LockTimeout
	}
	return nil
}

func (m *PostgresqlConfig10) GetIdleInTransactionSessionTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.IdleInTransactionSessionTimeout
	}
	return nil
}

func (m *PostgresqlConfig10) GetByteaOutput() PostgresqlConfig10_ByteaOutput {
	if m != nil {
		return m.ByteaOutput
	}
	return PostgresqlConfig10_BYTEA_OUTPUT_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetXmlbinary() PostgresqlConfig10_XmlBinary {
	if m != nil {
		return m.Xmlbinary
	}
	return PostgresqlConfig10_XML_BINARY_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetXmloption() PostgresqlConfig10_XmlOption {
	if m != nil {
		return m.Xmloption
	}
	return PostgresqlConfig10_XML_OPTION_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetGinPendingListLimit() *wrappers.Int64Value {
	if m != nil {
		return m.GinPendingListLimit
	}
	return nil
}

func (m *PostgresqlConfig10) GetDeadlockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.DeadlockTimeout
	}
	return nil
}

func (m *PostgresqlConfig10) GetMaxLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlConfig10) GetMaxPredLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxPredLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlConfig10) GetArrayNulls() *wrappers.BoolValue {
	if m != nil {
		return m.ArrayNulls
	}
	return nil
}

func (m *PostgresqlConfig10) GetBackslashQuote() PostgresqlConfig10_BackslashQuote {
	if m != nil {
		return m.BackslashQuote
	}
	return PostgresqlConfig10_BACKSLASH_QUOTE_UNSPECIFIED
}

func (m *PostgresqlConfig10) GetDefaultWithOids() *wrappers.BoolValue {
	if m != nil {
		return m.DefaultWithOids
	}
	return nil
}

func (m *PostgresqlConfig10) GetEscapeStringWarning() *wrappers.BoolValue {
	if m != nil {
		return m.EscapeStringWarning
	}
	return nil
}

func (m *PostgresqlConfig10) GetLoCompatPrivileges() *wrappers.BoolValue {
	if m != nil {
		return m.LoCompatPrivileges
	}
	return nil
}

func (m *PostgresqlConfig10) GetOperatorPrecedenceWarning() *wrappers.BoolValue {
	if m != nil {
		return m.OperatorPrecedenceWarning
	}
	return nil
}

func (m *PostgresqlConfig10) GetQuoteAllIdentifiers() *wrappers.BoolValue {
	if m != nil {
		return m.QuoteAllIdentifiers
	}
	return nil
}

func (m *PostgresqlConfig10) GetStandardConformingStrings() *wrappers.BoolValue {
	if m != nil {
		return m.StandardConformingStrings
	}
	return nil
}

func (m *PostgresqlConfig10) GetSynchronizeSeqscans() *wrappers.BoolValue {
	if m != nil {
		return m.SynchronizeSeqscans
	}
	return nil
}

func (m *PostgresqlConfig10) GetTransformNullEquals() *wrappers.BoolValue {
	if m != nil {
		return m.TransformNullEquals
	}
	return nil
}

func (m *PostgresqlConfig10) GetExitOnError() *wrappers.BoolValue {
	if m != nil {
		return m.ExitOnError
	}
	return nil
}

func (m *PostgresqlConfig10) GetSeqPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.SeqPageCost
	}
	return nil
}

func (m *PostgresqlConfig10) GetRandomPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.RandomPageCost
	}
	return nil
}

func (m *PostgresqlConfig10) GetAutovacuumMaxWorkers() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumMaxWorkers
	}
	return nil
}

func (m *PostgresqlConfig10) GetAutovacuumVacuumCostDelay() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumVacuumCostDelay
	}
	return nil
}

func (m *PostgresqlConfig10) GetAutovacuumVacuumCostLimit() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumVacuumCostLimit
	}
	return nil
}

func (m *PostgresqlConfig10) GetAutovacuumNaptime() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumNaptime
	}
	return nil
}

func (m *PostgresqlConfig10) GetArchiveTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.ArchiveTimeout
	}
	return nil
}

func (m *PostgresqlConfig10) GetTrackActivityQuerySize() *wrappers.Int64Value {
	if m != nil {
		return m.TrackActivityQuerySize
	}
	return nil
}

type PostgresqlConfigSet10 struct {
	// Effective settings for a PostgreSQL 10 cluster (a combination of settings defined
	// in [user_config] and [default_config]).
	EffectiveConfig *PostgresqlConfig10 `protobuf:"bytes,1,opt,name=effective_config,json=effectiveConfig,proto3" json:"effective_config,omitempty"`
	// User-defined settings for a PostgreSQL 10 cluster.
	UserConfig *PostgresqlConfig10 `protobuf:"bytes,2,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	// Default configuration for a PostgreSQL 10 cluster.
	DefaultConfig        *PostgresqlConfig10 `protobuf:"bytes,3,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *PostgresqlConfigSet10) Reset()         { *m = PostgresqlConfigSet10{} }
func (m *PostgresqlConfigSet10) String() string { return proto.CompactTextString(m) }
func (*PostgresqlConfigSet10) ProtoMessage()    {}
func (*PostgresqlConfigSet10) Descriptor() ([]byte, []int) {
	return fileDescriptor_postgresql10_ba5663f4ed6e84da, []int{1}
}
func (m *PostgresqlConfigSet10) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresqlConfigSet10.Unmarshal(m, b)
}
func (m *PostgresqlConfigSet10) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresqlConfigSet10.Marshal(b, m, deterministic)
}
func (dst *PostgresqlConfigSet10) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresqlConfigSet10.Merge(dst, src)
}
func (m *PostgresqlConfigSet10) XXX_Size() int {
	return xxx_messageInfo_PostgresqlConfigSet10.Size(m)
}
func (m *PostgresqlConfigSet10) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresqlConfigSet10.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresqlConfigSet10 proto.InternalMessageInfo

func (m *PostgresqlConfigSet10) GetEffectiveConfig() *PostgresqlConfig10 {
	if m != nil {
		return m.EffectiveConfig
	}
	return nil
}

func (m *PostgresqlConfigSet10) GetUserConfig() *PostgresqlConfig10 {
	if m != nil {
		return m.UserConfig
	}
	return nil
}

func (m *PostgresqlConfigSet10) GetDefaultConfig() *PostgresqlConfig10 {
	if m != nil {
		return m.DefaultConfig
	}
	return nil
}

func init() {
	proto.RegisterType((*PostgresqlConfig10)(nil), "yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10")
	proto.RegisterType((*PostgresqlConfigSet10)(nil), "yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet10")
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_WalLevel", PostgresqlConfig10_WalLevel_name, PostgresqlConfig10_WalLevel_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_SynchronousCommit", PostgresqlConfig10_SynchronousCommit_name, PostgresqlConfig10_SynchronousCommit_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_ConstraintExclusion", PostgresqlConfig10_ConstraintExclusion_name, PostgresqlConfig10_ConstraintExclusion_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_ForceParallelMode", PostgresqlConfig10_ForceParallelMode_name, PostgresqlConfig10_ForceParallelMode_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_LogLevel", PostgresqlConfig10_LogLevel_name, PostgresqlConfig10_LogLevel_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_LogErrorVerbosity", PostgresqlConfig10_LogErrorVerbosity_name, PostgresqlConfig10_LogErrorVerbosity_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_LogStatement", PostgresqlConfig10_LogStatement_name, PostgresqlConfig10_LogStatement_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_TransactionIsolation", PostgresqlConfig10_TransactionIsolation_name, PostgresqlConfig10_TransactionIsolation_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_ByteaOutput", PostgresqlConfig10_ByteaOutput_name, PostgresqlConfig10_ByteaOutput_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_XmlBinary", PostgresqlConfig10_XmlBinary_name, PostgresqlConfig10_XmlBinary_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_XmlOption", PostgresqlConfig10_XmlOption_name, PostgresqlConfig10_XmlOption_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_BackslashQuote", PostgresqlConfig10_BackslashQuote_name, PostgresqlConfig10_BackslashQuote_value)
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/postgresql/v1/config/postgresql10.proto", fileDescriptor_postgresql10_ba5663f4ed6e84da)
}

var fileDescriptor_postgresql10_ba5663f4ed6e84da = []byte{
	// 2970 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x9a, 0xdb, 0x7a, 0xdb, 0xc6,
	0xb5, 0xc7, 0x37, 0x25, 0xc5, 0x91, 0x47, 0x96, 0x04, 0x0e, 0x75, 0x80, 0xe4, 0x63, 0x98, 0x38,
	0xdb, 0xc9, 0xde, 0x92, 0x48, 0x59, 0x71, 0x9c, 0xa6, 0x71, 0x03, 0x82, 0xa0, 0xcc, 0x1a, 0x24,
	0x18, 0x80, 0x92, 0x6c, 0xe7, 0x4b, 0xd0, 0x21, 0x30, 0x24, 0x11, 0x81, 0x18, 0x0a, 0x03, 0xea,
	0xe0, 0xde, 0xf4, 0xba, 0x97, 0xb9, 0x6b, 0x1f, 0xa0, 0xef, 0xd1, 0x2b, 0xbd, 0x41, 0x1f, 0xa1,
	0x5f, 0x9f, 0x41, 0x57, 0xfd, 0x06, 0x07, 0x02, 0x14, 0xe9, 0x80, 0xb1, 0x73, 0x27, 0xad, 0x99,
	0xff, 0x6f, 0xcd, 0xcc, 0x5a, 0x98, 0x99, 0x35, 0x1f, 0xc1, 0xd3, 0x0b, 0xe4, 0x98, 0xf8, 0x7c,
	0xc7, 0xb0, 0xc9, 0xc0, 0xdc, 0xe9, 0x99, 0xad, 0x9d, 0x3e, 0xa1, 0x5e, 0xc7, 0xc5, 0xf4, 0xc4,
	0xde, 0x39, 0x2d, 0xee, 0x18, 0xc4, 0x69, 0x5b, 0x9d, 0x84, 0xb1, 0x58, 0xd8, 0xee, 0xbb, 0xc4,
	0x23, 0xf0, 0x61, 0xa0, 0xdc, 0xf6, 0x95, 0xdb, 0x3d, 0xb3, 0xb5, 0x1d, 0x77, 0xda, 0x3e, 0x2d,
	0x6e, 0x07, 0xca, 0xcd, 0x7b, 0x1d, 0x42, 0x3a, 0x36, 0xde, 0xf1, 0x45, 0xad, 0x41, 0x7b, 0xe7,
	0xcc, 0x45, 0xfd, 0x3e, 0x76, 0x69, 0x80, 0xd9, 0xbc, 0x3b, 0x32, 0x80, 0x53, 0x64, 0x5b, 0x26,
	0xf2, 0x2c, 0xe2, 0x04, 0xcd, 0xf9, 0x7f, 0x88, 0x00, 0x36, 0x86, 0x5c, 0xd1, 0x67, 0x16, 0x0b,
	0xb0, 0x0c, 0x96, 0x7b, 0xe8, 0x5c, 0x37, 0x88, 0xe3, 0x60, 0x83, 0x75, 0xa7, 0x7c, 0xe6, 0x41,
	0xe6, 0xd1, 0xc2, 0xee, 0xed, 0xed, 0xc0, 0xdf, 0x76, 0xe4, 0x6f, 0xbb, 0xea, 0x78, 0x4f, 0xf6,
	0x0e, 0x91, 0x3d, 0xc0, 0xea, 0x52, 0x0f, 0x9d, 0x8b, 0xb1, 0x04, 0x96, 0xc0, 0x12, 0xed, 0x22,
	0x17, 0x9b, 0x7a, 0x6b, 0xd0, 0x6e, 0x63, 0x97, 0xf2, 0x33, 0xe9, 0x90, 0xc5, 0x40, 0x52, 0x0a,
	0x14, 0xf0, 0x19, 0xb8, 0xe5, 0xe1, 0x5e, 0x7f, 0x48, 0x98, 0x4d, 0x27, 0x2c, 0x30, 0x41, 0xa4,
	0x3f, 0x02, 0x1b, 0x6c, 0x26, 0x7d, 0x17, 0xf7, 0xfd, 0x91, 0x78, 0x2e, 0x72, 0x28, 0x0a, 0xe7,
	0x34, 0x97, 0x0e, 0x5b, 0xef, 0xa1, 0xf3, 0x46, 0x28, 0x6e, 0x26, 0xb4, 0xf0, 0x09, 0x98, 0x3f,
	0x23, 0xee, 0xb1, 0xde, 0xc3, 0x3d, 0xfe, 0x83, 0x74, 0xce, 0x87, 0xac, 0x73, 0x0d, 0xf7, 0x60,
	0x0d, 0xac, 0xf4, 0x90, 0xe5, 0x78, 0xd8, 0x41, 0x8e, 0x81, 0xf5, 0x21, 0xe3, 0x46, 0x3a, 0x03,
	0x26, 0x84, 0x47, 0x21, 0x4e, 0x03, 0xeb, 0x2e, 0xee, 0xdb, 0xc8, 0xc0, 0x3d, 0xec, 0x78, 0x3a,
	0x25, 0xae, 0xa7, 0x7b, 0x83, 0xbe, 0x8d, 0x29, 0xff, 0x61, 0x3a, 0x71, 0x35, 0xa1, 0xd5, 0x88,
	0xeb, 0x35, 0x7d, 0x25, 0x7c, 0x01, 0x72, 0x68, 0xe0, 0x91, 0x53, 0x64, 0x0c, 0x06, 0xbd, 0x78,
	0x88, 0xf3, 0xe9, 0xc0, 0x6c, 0xac, 0x8b, 0x46, 0x28, 0x82, 0x65, 0x3f, 0x82, 0x6d, 0xcb, 0xc6,
	0xba, 0x6d, 0xf5, 0x2c, 0x8f, 0xbf, 0x39, 0x45, 0x1a, 0x30, 0x4d, 0xc5, 0xb2, 0xb1, 0xcc, 0x14,
	0x70, 0x1f, 0x64, 0xc3, 0xd1, 0x18, 0x84, 0x7a, 0xba, 0x89, 0x6d, 0x74, 0xc1, 0x83, 0x74, 0xcc,
	0x72, 0xa0, 0x12, 0x09, 0xf5, 0xca, 0x4c, 0x03, 0x65, 0xb0, 0x92, 0x04, 0xf5, 0x51, 0x07, 0xeb,
	0x5d, 0xcb, 0xe3, 0x17, 0xa6, 0x98, 0x5b, 0xcc, 0x6a, 0xa0, 0x0e, 0x7e, 0x6e, 0x79, 0xb0, 0x0e,
	0x56, 0xc7, 0x68, 0x3d, 0x8b, 0x52, 0xfe, 0xd6, 0x14, 0xd1, 0x1c, 0xc5, 0xd5, 0x2c, 0x4a, 0x61,
	0x03, 0xac, 0x8d, 0xf1, 0x4c, 0xcb, 0xf5, 0x2e, 0xf8, 0xc5, 0x74, 0x60, 0x6e, 0x14, 0x58, 0x66,
	0xba, 0xeb, 0x0b, 0x17, 0xac, 0xff, 0xd2, 0xaf, 0x5a, 0xb8, 0x20, 0x02, 0x0d, 0xb0, 0xd4, 0xea,
	0x9c, 0xb9, 0x96, 0x87, 0xdd, 0x70, 0xf9, 0x97, 0x53, 0x29, 0xa5, 0x5b, 0x57, 0x97, 0xc5, 0xf9,
	0x62, 0x61, 0xab, 0x58, 0x28, 0x14, 0x0a, 0xea, 0x62, 0x04, 0x08, 0x42, 0xa1, 0x80, 0xd5, 0x21,
	0xd1, 0x76, 0x07, 0x7a, 0x0f, 0x9d, 0xb3, 0x09, 0x53, 0x9e, 0x9b, 0x62, 0xae, 0x91, 0x52, 0x76,
	0x07, 0xb5, 0x50, 0x07, 0x9b, 0x60, 0x7d, 0x14, 0x38, 0xb0, 0x3d, 0xab, 0x6f, 0x5b, 0xd8, 0xe5,
	0xb3, 0x3e, 0xf2, 0xce, 0x18, 0xb2, 0x4c, 0x06, 0x2d, 0x1b, 0x87, 0x1f, 0x43, 0x92, 0x39, 0x94,
	0xc2, 0x57, 0x60, 0x65, 0x48, 0x6d, 0xdb, 0x03, 0xda, 0xd5, 0x51, 0xdb, 0xc3, 0x2e, 0x0f, 0xd3,
	0xa7, 0x0f, 0xae, 0x2e, 0x8b, 0x37, 0x0a, 0x5b, 0xbb, 0x85, 0xbd, 0xa7, 0x2a, 0x8c, 0x20, 0x15,
	0xc6, 0x10, 0x18, 0x02, 0x1e, 0x81, 0x5c, 0x0b, 0x19, 0xc7, 0xd8, 0x31, 0x47, 0xc8, 0xb9, 0x5f,
	0x47, 0xce, 0x86, 0x8c, 0x04, 0xb8, 0x05, 0xd6, 0x88, 0x6d, 0xea, 0xd4, 0x41, 0x7d, 0xda, 0x25,
	0x9e, 0xee, 0x75, 0x5d, 0x4c, 0xbb, 0xc4, 0x36, 0xf9, 0x95, 0x74, 0xf6, 0xf2, 0xd5, 0x65, 0x71,
	0x61, 0xab, 0xb8, 0xf5, 0xf4, 0xc9, 0x5e, 0xc1, 0x8f, 0xdb, 0x0a, 0xb1, 0x4d, 0x2d, 0x44, 0x35,
	0x23, 0x12, 0xd4, 0xc1, 0xcd, 0x33, 0x64, 0xeb, 0x36, 0x3e, 0xc5, 0x36, 0xbf, 0xfa, 0x20, 0xf3,
	0x68, 0x69, 0xb7, 0xb4, 0x3d, 0xd5, 0xa1, 0xb5, 0x3d, 0x7e, 0xe2, 0x6c, 0x1f, 0x21, 0x5b, 0x66,
	0x24, 0x75, 0xfe, 0x2c, 0xfc, 0x0b, 0xbe, 0x01, 0x90, 0x5e, 0x38, 0x46, 0xd7, 0x25, 0x0e, 0x19,
	0x50, 0xdd, 0x20, 0x3d, 0x96, 0xbb, 0x6b, 0xbe, 0xa7, 0x17, 0xef, 0xee, 0x49, 0x8b, 0x99, 0xa2,
	0x8f, 0x54, 0xb3, 0xf4, 0xba, 0x09, 0xfe, 0x08, 0xa0, 0xd1, 0xc5, 0xc6, 0x71, 0x9f, 0x58, 0x8e,
	0xa7, 0x7b, 0x56, 0x0f, 0x93, 0x81, 0xc7, 0xaf, 0xa7, 0x2f, 0x1e, 0xbc, 0xba, 0x2c, 0x2e, 0x3d,
	0x66, 0xcb, 0x16, 0xaf, 0x5f, 0x36, 0x46, 0x35, 0x03, 0x12, 0xfc, 0x11, 0xdc, 0x49, 0xf0, 0x0d,
	0xd2, 0xeb, 0xdb, 0x98, 0x9d, 0x2b, 0xba, 0x87, 0xdc, 0x0e, 0xf6, 0x78, 0x7e, 0x8a, 0x7c, 0xdd,
	0x8c, 0x09, 0xe2, 0x10, 0xd0, 0xf4, 0xf5, 0xf0, 0x07, 0xb0, 0x96, 0xe0, 0x27, 0x93, 0x6b, 0xe3,
	0xd7, 0x25, 0xd7, 0x4a, 0x8c, 0x49, 0xe4, 0xd7, 0x37, 0xe0, 0x16, 0x3b, 0x55, 0x59, 0xfc, 0xa9,
	0xf5, 0x06, 0xf3, 0x9b, 0xe9, 0x5f, 0x2c, 0xe8, 0xa1, 0xf3, 0x23, 0x64, 0x6b, 0xd6, 0x1b, 0xec,
	0xcb, 0x2d, 0x27, 0x96, 0xdf, 0x9e, 0x46, 0x6e, 0x39, 0x91, 0xfc, 0x35, 0xb8, 0xcd, 0xbc, 0x53,
	0x0f, 0x39, 0x66, 0xeb, 0x42, 0xa7, 0x9e, 0x8b, 0x51, 0xcf, 0x72, 0x3a, 0xe1, 0xbe, 0x74, 0x27,
	0x9d, 0xc6, 0xf7, 0xd0, 0xb9, 0x16, 0xc8, 0xb5, 0x48, 0x1d, 0x6c, 0x4a, 0x47, 0x60, 0xc3, 0xc4,
	0x6d, 0x34, 0xb0, 0x3d, 0xc6, 0xf7, 0x2c, 0xea, 0x59, 0x06, 0x8d, 0xa2, 0x72, 0x77, 0x8a, 0xfb,
	0x42, 0xa8, 0xd6, 0x86, 0xe2, 0x30, 0x22, 0x7f, 0xc9, 0x80, 0x15, 0x83, 0x38, 0xd4, 0x73, 0xd9,
	0x21, 0xae, 0xe3, 0x73, 0xc3, 0x1e, 0x50, 0x8b, 0x38, 0xfc, 0x3d, 0x3f, 0xa1, 0x6b, 0xef, 0x9e,
	0xd0, 0xe2, 0x90, 0x2a, 0x45, 0x50, 0x35, 0x67, 0x8c, 0x1b, 0x61, 0x03, 0xac, 0x1a, 0x03, 0x97,
	0x12, 0x37, 0xb8, 0x21, 0xe8, 0x6d, 0x37, 0xb8, 0xcc, 0xf0, 0xf7, 0xa7, 0xc8, 0xb6, 0x5c, 0x20,
	0xf5, 0x6f, 0x08, 0x95, 0x50, 0x08, 0x7f, 0x00, 0xb9, 0xb6, 0x4b, 0xd8, 0xd9, 0x62, 0xdb, 0xa8,
	0x4f, 0xa3, 0xf3, 0xfd, 0x41, 0x7a, 0x8e, 0x71, 0x57, 0x97, 0xc5, 0x5b, 0xc5, 0xad, 0xdd, 0xe2,
	0xde, 0x97, 0x7b, 0x4f, 0x1f, 0x3f, 0xd9, 0xfb, 0x52, 0xcd, 0x32, 0x92, 0x18, 0x82, 0x82, 0x33,
	0xe7, 0x07, 0x90, 0xfb, 0x89, 0x58, 0xce, 0x75, 0xfc, 0x47, 0xef, 0x84, 0x67, 0xa4, 0x51, 0xfc,
	0x9f, 0x41, 0xae, 0x4d, 0x5c, 0x03, 0xeb, 0x7d, 0xe4, 0x22, 0xdb, 0xc6, 0xb6, 0xde, 0x23, 0x26,
	0xe6, 0xf3, 0xef, 0xbb, 0xc3, 0x54, 0x18, 0xb4, 0x11, 0x32, 0x6b, 0xc4, 0xc4, 0x6a, 0xb6, 0x7d,
	0xdd, 0x04, 0x5d, 0x90, 0x33, 0x6c, 0x8b, 0xdd, 0xd9, 0xd8, 0xa7, 0xd0, 0xc3, 0x94, 0xfa, 0x67,
	0xdf, 0xc7, 0xef, 0xbb, 0x91, 0xca, 0xa4, 0x13, 0x6c, 0xa4, 0xd9, 0x00, 0x5f, 0xb3, 0x9c, 0x5a,
	0x08, 0x87, 0x36, 0xe0, 0x6c, 0xd2, 0x19, 0x75, 0xf8, 0xc9, 0x6f, 0xe6, 0x70, 0xc9, 0x26, 0x9d,
	0xa4, 0xb7, 0x0b, 0xb0, 0x1e, 0x79, 0xc3, 0xae, 0x4b, 0x5c, 0xff, 0x83, 0xf2, 0xaf, 0x9a, 0xfc,
	0xc3, 0xdf, 0xcc, 0xe9, 0x4a, 0xe0, 0x54, 0x62, 0x0e, 0xb4, 0x88, 0x0f, 0x5f, 0x82, 0xcd, 0xc8,
	0xb5, 0x39, 0x70, 0xfd, 0x82, 0x27, 0xe1, 0xfd, 0xd3, 0x29, 0x3e, 0xe3, 0x00, 0x5b, 0x0e, 0xc5,
	0x31, 0x59, 0x04, 0xcb, 0x8c, 0x1c, 0xef, 0x8a, 0x94, 0xff, 0x5f, 0x1f, 0xb7, 0x39, 0x86, 0x2b,
	0x11, 0x62, 0x87, 0x85, 0x91, 0x4d, 0x3a, 0x62, 0xac, 0x18, 0x42, 0x12, 0xe5, 0xd5, 0xa3, 0xe9,
	0x20, 0x89, 0xea, 0xaa, 0x0a, 0x20, 0x83, 0x98, 0x16, 0x4d, 0x72, 0x3e, 0x4b, 0xe5, 0x64, 0x6d,
	0xd2, 0x29, 0x8f, 0x88, 0xd8, 0x7e, 0xec, 0xa3, 0xc2, 0xd9, 0xf2, 0x9f, 0xa7, 0x42, 0x16, 0x18,
	0x24, 0xec, 0xce, 0xbe, 0x23, 0x26, 0x0f, 0x82, 0x7c, 0x8a, 0xdd, 0x16, 0xa1, 0x96, 0x77, 0xc1,
	0xff, 0xdf, 0xfb, 0x7e, 0x47, 0x32, 0xe9, 0xf8, 0x71, 0x3d, 0x8c, 0x90, 0xfe, 0xd8, 0x47, 0x4d,
	0xf0, 0x5b, 0xc0, 0x16, 0x46, 0xb7, 0x89, 0x71, 0xac, 0x9f, 0x21, 0xcb, 0xa3, 0xfc, 0xff, 0xa7,
	0x8e, 0x9e, 0xcd, 0x56, 0x26, 0xc6, 0xf1, 0x11, 0xeb, 0x0f, 0x8f, 0xc1, 0x22, 0x23, 0xc4, 0xf9,
	0xb1, 0xe5, 0x0f, 0xbc, 0xf2, 0x5e, 0x03, 0x1f, 0x66, 0x8c, 0xef, 0x2c, 0xce, 0x1f, 0x21, 0x18,
	0xee, 0xb0, 0x22, 0xa2, 0xfc, 0x76, 0x7a, 0x36, 0x32, 0x44, 0x33, 0xac, 0x87, 0x28, 0xbc, 0x0f,
	0x16, 0x28, 0x46, 0xae, 0xd1, 0xd5, 0xfb, 0xc8, 0xeb, 0xf2, 0x3b, 0x0f, 0x32, 0x8f, 0x6e, 0xaa,
	0x20, 0x30, 0x35, 0x90, 0xd7, 0x65, 0xe1, 0x74, 0xc9, 0x99, 0x4e, 0xb1, 0x31, 0x70, 0x59, 0x20,
	0x0a, 0xe9, 0xe1, 0x74, 0xc9, 0x99, 0x16, 0x76, 0x87, 0x3f, 0x67, 0xc0, 0xdd, 0xe8, 0x0c, 0x4c,
	0x94, 0xcb, 0xba, 0x45, 0x89, 0x1d, 0xe4, 0x47, 0xd1, 0x5f, 0xa0, 0xfa, 0xbb, 0x2f, 0x50, 0xa2,
	0x92, 0xae, 0x46, 0x54, 0xf5, 0x76, 0xe8, 0x74, 0x52, 0x23, 0x7c, 0x0e, 0xb2, 0xc3, 0x00, 0x0d,
	0xef, 0x63, 0xbb, 0xe9, 0x4b, 0xc7, 0x0d, 0x55, 0xd1, 0xd5, 0xeb, 0x19, 0x4b, 0x76, 0xe3, 0x78,
	0x08, 0x79, 0x3c, 0xc5, 0x8b, 0x02, 0x13, 0x44, 0x7a, 0x0b, 0x7c, 0x6c, 0x99, 0x36, 0xd6, 0x2d,
	0x67, 0x64, 0x75, 0x28, 0xa6, 0xd4, 0xbf, 0xc0, 0x85, 0xd8, 0xbd, 0x74, 0xec, 0x7d, 0xc6, 0xa9,
	0x3a, 0x89, 0xf9, 0x6a, 0x01, 0x24, 0x72, 0xd5, 0x05, 0xb7, 0x5a, 0x17, 0x1e, 0x46, 0x3a, 0x19,
	0x78, 0xfd, 0x81, 0xc7, 0x7f, 0xe1, 0xaf, 0xbb, 0xf4, 0xee, 0xeb, 0x5e, 0x62, 0x34, 0xc5, 0x87,
	0xa9, 0x0b, 0xad, 0xf8, 0x1f, 0x88, 0xc0, 0xcd, 0xf3, 0x9e, 0xdd, 0xb2, 0x1c, 0xe4, 0x5e, 0xf0,
	0x4f, 0x7c, 0x37, 0xe2, 0xbb, 0xbb, 0x79, 0xd9, 0xb3, 0x4b, 0x3e, 0x4a, 0x8d, 0xa9, 0xa1, 0x0b,
	0xd2, 0xf7, 0x33, 0xe8, 0xcb, 0xdf, 0xc0, 0x85, 0xe2, 0xa3, 0xd4, 0x98, 0xca, 0xca, 0xe7, 0x8e,
	0xe5, 0xe8, 0x7d, 0xec, 0x98, 0xec, 0x3a, 0x68, 0x5b, 0xc3, 0x8a, 0xf7, 0xe9, 0x14, 0x25, 0x65,
	0xc7, 0x72, 0x1a, 0x81, 0x52, 0xb6, 0xa2, 0xaa, 0xb7, 0x02, 0x38, 0x13, 0x23, 0x73, 0x24, 0x61,
	0xbe, 0x9a, 0xa2, 0x7a, 0x8e, 0x44, 0x51, 0x24, 0x0f, 0x83, 0x67, 0x28, 0x66, 0xa2, 0x7a, 0x1f,
	0xbb, 0xc9, 0xd4, 0xe1, 0x7f, 0x97, 0x0e, 0x5c, 0xeb, 0xa1, 0x73, 0xb6, 0x63, 0xd1, 0x06, 0x76,
	0x13, 0xf9, 0x02, 0x75, 0x70, 0x2f, 0x7c, 0xde, 0x32, 0xdf, 0x02, 0xff, 0x3a, 0x1d, 0xbe, 0x19,
	0xbc, 0x71, 0x99, 0x93, 0x1c, 0x7c, 0x0d, 0x16, 0x90, 0xeb, 0xa2, 0x0b, 0xdd, 0x19, 0xd8, 0x36,
	0xe5, 0x7f, 0x9f, 0xba, 0x95, 0x00, 0xbf, 0x7b, 0x9d, 0xf5, 0x86, 0x27, 0x60, 0x99, 0xd5, 0xa6,
	0xd4, 0x46, 0xb4, 0xab, 0x9f, 0x0c, 0x88, 0x87, 0xf9, 0x6f, 0xfc, 0xc0, 0x3f, 0x7f, 0x8f, 0x14,
	0x8e, 0x80, 0xdf, 0x31, 0x9e, 0xba, 0xd4, 0x1a, 0xf9, 0x1f, 0x56, 0x40, 0x36, 0xda, 0xbb, 0xce,
	0x2c, 0xaf, 0xab, 0x13, 0xcb, 0xa4, 0xfc, 0xb3, 0xd4, 0x51, 0x2f, 0x87, 0xa2, 0x23, 0xcb, 0xeb,
	0x2a, 0x96, 0x49, 0x61, 0x1d, 0xac, 0x62, 0x6a, 0xa0, 0x3e, 0x66, 0xe5, 0x05, 0x4b, 0xa6, 0x33,
	0xe4, 0x3a, 0x96, 0xd3, 0xe1, 0xff, 0x90, 0xca, 0xca, 0x05, 0x42, 0xcd, 0xd7, 0x1d, 0x05, 0x32,
	0x28, 0x83, 0x15, 0x9b, 0xf8, 0x85, 0x1e, 0xf2, 0xf4, 0xbe, 0x6b, 0x9d, 0x5a, 0x36, 0x66, 0xd7,
	0xaf, 0x6f, 0x53, 0x71, 0xd0, 0x26, 0xa2, 0x2f, 0x6b, 0x0c, 0x55, 0xac, 0x02, 0x22, 0x7d, 0xec,
	0x22, 0x8f, 0xb8, 0x2c, 0xf6, 0x06, 0x36, 0xb1, 0xff, 0x98, 0x18, 0x8e, 0x51, 0x48, 0x85, 0x6e,
	0x44, 0xf2, 0xc6, 0x50, 0x1d, 0x8d, 0xb4, 0x0e, 0x56, 0xfd, 0x50, 0xe9, 0xc8, 0xb6, 0x75, 0xcb,
	0xc4, 0x8e, 0x67, 0xb5, 0x2d, 0xec, 0x52, 0xbe, 0x94, 0x3e, 0x73, 0x5f, 0x28, 0xd8, 0x76, 0x35,
	0x96, 0xb1, 0xb1, 0xfa, 0x95, 0x1a, 0x72, 0x4d, 0x76, 0xe3, 0x69, 0x13, 0xd7, 0xaf, 0xd5, 0x82,
	0x65, 0xa5, 0xbc, 0x98, 0x3e, 0xd6, 0x48, 0x2e, 0x0e, 0xd5, 0xc1, 0xda, 0x52, 0x58, 0x03, 0x2b,
	0x51, 0xed, 0x6e, 0xbd, 0xc1, 0x3a, 0xc5, 0x27, 0xd4, 0x40, 0x0e, 0xe5, 0xcb, 0xe9, 0x43, 0x4d,
	0xe8, 0xb4, 0x50, 0xc6, 0xa6, 0xee, 0x7f, 0x3a, 0xcc, 0x8b, 0x9f, 0xf0, 0x3a, 0x3e, 0x19, 0x20,
	0x9b, 0xf2, 0x52, 0x3a, 0x6f, 0x28, 0x64, 0xa9, 0x2f, 0xf9, 0x32, 0xf8, 0x0c, 0x2c, 0xe2, 0x73,
	0xcb, 0xd3, 0x49, 0x78, 0x03, 0xe6, 0x2b, 0xe9, 0x27, 0x31, 0x13, 0x28, 0xc1, 0x7d, 0x16, 0x7e,
	0x0b, 0x16, 0x29, 0x3e, 0x09, 0x9e, 0x01, 0x0d, 0x42, 0x3d, 0x7e, 0x7f, 0x8a, 0x42, 0x6d, 0x81,
	0xe2, 0x93, 0x06, 0xea, 0x60, 0x91, 0x50, 0x7f, 0xff, 0x72, 0x91, 0x63, 0x92, 0x5e, 0x02, 0xf2,
	0x7c, 0x0a, 0xc8, 0x52, 0xa0, 0x1a, 0x72, 0xbe, 0x07, 0x6b, 0x89, 0x17, 0x61, 0xbf, 0xf6, 0x27,
	0xee, 0x31, 0xcb, 0x8a, 0x6a, 0x7a, 0x31, 0x36, 0x7f, 0x75, 0x59, 0x9c, 0x2b, 0x6e, 0x3d, 0xde,
	0x55, 0x57, 0x62, 0x48, 0x0d, 0x9d, 0x1f, 0x05, 0x08, 0xd8, 0x05, 0x77, 0x12, 0xf0, 0xf1, 0x77,
	0xde, 0x3f, 0x4e, 0xf9, 0x64, 0xb1, 0x55, 0xdc, 0x2a, 0x16, 0x0a, 0xea, 0x46, 0x0c, 0x3b, 0xbc,
	0xf6, 0xfa, 0xfb, 0xd3, 0x5b, 0x3d, 0x05, 0xc7, 0xc4, 0x8b, 0x29, 0x9f, 0x34, 0x03, 0x4f, 0x6f,
	0xf3, 0x15, 0x15, 0xaf, 0x30, 0xe1, 0xcb, 0x41, 0x7d, 0x76, 0x7e, 0xf0, 0x72, 0xba, 0x87, 0xec,
	0xd5, 0x65, 0x71, 0xb1, 0x38, 0xfa, 0x82, 0x14, 0x93, 0xea, 0x01, 0x08, 0x1e, 0x82, 0x65, 0x76,
	0xe1, 0xb3, 0x4e, 0xf1, 0xf0, 0x60, 0xaa, 0x4d, 0x5b, 0x17, 0xfb, 0xcf, 0x53, 0x4f, 0x02, 0xf4,
	0x52, 0x48, 0x89, 0x4e, 0xaa, 0x36, 0xd8, 0xf0, 0x5c, 0x64, 0x1c, 0xeb, 0xec, 0x00, 0x38, 0xb5,
	0xbc, 0x0b, 0xfd, 0x64, 0x80, 0xdd, 0x8b, 0xe0, 0xa1, 0xa6, 0x9e, 0xee, 0x61, 0xe9, 0xea, 0xb2,
	0x08, 0x8a, 0x85, 0xc2, 0x56, 0xb1, 0xb0, 0xbb, 0x57, 0x28, 0xa8, 0x6b, 0x3e, 0x4d, 0x08, 0x61,
	0xdf, 0x31, 0x96, 0x66, 0xbd, 0xc1, 0x79, 0x0d, 0xcc, 0x47, 0x6f, 0x7e, 0x70, 0x03, 0xac, 0x1e,
	0x09, 0xb2, 0x2e, 0x4b, 0x87, 0x92, 0xac, 0x1f, 0xd4, 0xb5, 0x86, 0x24, 0x56, 0x2b, 0x55, 0xa9,
	0xcc, 0xfd, 0x0f, 0x5c, 0x05, 0xd9, 0xb8, 0x49, 0x95, 0x1a, 0x72, 0x55, 0x14, 0xb8, 0xcc, 0xa8,
	0x59, 0x56, 0xf6, 0xab, 0xa2, 0x20, 0x73, 0x33, 0xf9, 0x7f, 0x65, 0x40, 0x76, 0xec, 0x7d, 0x0f,
	0xe6, 0xc1, 0x3d, 0xed, 0x55, 0x5d, 0x7c, 0xae, 0x2a, 0x75, 0xe5, 0x40, 0xd3, 0x45, 0xa5, 0x56,
	0xab, 0x36, 0xaf, 0xf9, 0xd9, 0x00, 0xab, 0x13, 0xfa, 0x28, 0x75, 0x2e, 0x03, 0x37, 0xc1, 0xda,
	0xa4, 0xa6, 0x4a, 0x85, 0x9b, 0x81, 0x77, 0x00, 0x3f, 0xa1, 0x4d, 0x56, 0xd8, 0x70, 0x66, 0xe1,
	0xc7, 0xe0, 0xfe, 0x84, 0x56, 0x55, 0xaa, 0x29, 0x4d, 0x49, 0x3f, 0x52, 0xab, 0x4d, 0x89, 0x9b,
	0xfb, 0xe5, 0x4e, 0x42, 0xa3, 0x21, 0xbf, 0xe2, 0x3e, 0xc8, 0xff, 0x3d, 0x03, 0x72, 0x13, 0xde,
	0x79, 0xe0, 0x27, 0xe0, 0x81, 0xa8, 0xd4, 0xb5, 0xa6, 0x2a, 0x54, 0xeb, 0x4d, 0x5d, 0x7a, 0x29,
	0xca, 0x07, 0x5a, 0x55, 0xa9, 0x5f, 0x9b, 0xdc, 0x6d, 0xb0, 0x3e, 0xb1, 0x97, 0x3f, 0xbd, 0x3b,
	0x80, 0x9f, 0xdc, 0xe8, 0x4f, 0x30, 0x0f, 0xee, 0x4d, 0x6c, 0x6d, 0x08, 0x6a, 0xb3, 0xda, 0xac,
	0x2a, 0x75, 0x6e, 0x36, 0xff, 0x73, 0x06, 0x64, 0xc7, 0xde, 0x3c, 0xd8, 0xbc, 0x2a, 0x8a, 0x2a,
	0x4a, 0xac, 0xab, 0x20, 0xcb, 0x92, 0xac, 0xd7, 0x94, 0xb2, 0x74, 0x6d, 0x64, 0x9b, 0x60, 0x6d,
	0x52, 0x27, 0x7f, 0x60, 0xb7, 0xc1, 0xfa, 0xc4, 0x36, 0x7f, 0x5c, 0xf7, 0xc1, 0xed, 0x49, 0x8d,
	0xaa, 0xb4, 0xaf, 0x4a, 0x9a, 0xc6, 0x06, 0x35, 0x03, 0xe6, 0xa3, 0x57, 0x02, 0x16, 0x5d, 0x59,
	0xd9, 0x9f, 0x98, 0x60, 0x2b, 0x80, 0x8b, 0x9b, 0xca, 0x52, 0xe9, 0x60, 0xff, 0x0b, 0x2e, 0x33,
	0xc1, 0xba, 0xc7, 0xcd, 0x4c, 0xb0, 0x3e, 0xe6, 0x66, 0x27, 0x58, 0x77, 0xb9, 0xb9, 0x09, 0xd6,
	0x22, 0xf7, 0x01, 0xcc, 0x82, 0xc5, 0xd8, 0x2a, 0x2b, 0xfb, 0xdc, 0x8d, 0xd1, 0x8e, 0x75, 0xa5,
	0x59, 0x15, 0x25, 0xee, 0x43, 0x96, 0xe0, 0xb1, 0xf5, 0x48, 0x50, 0xeb, 0xd5, 0xfa, 0x3e, 0x37,
	0x0f, 0x73, 0x60, 0x39, 0x36, 0x4b, 0xaa, 0xaa, 0xa8, 0xdc, 0xcd, 0x51, 0x63, 0x45, 0x68, 0x0a,
	0x32, 0x07, 0x46, 0x8d, 0x0d, 0xa1, 0x5e, 0x15, 0xb9, 0x85, 0xfc, 0xdf, 0x32, 0x20, 0x3b, 0x56,
	0x55, 0xb3, 0x48, 0xb1, 0xae, 0x3e, 0x4e, 0x3f, 0x94, 0xd4, 0x92, 0xa2, 0x55, 0x9b, 0xaf, 0xae,
	0xad, 0xd3, 0x5d, 0xb0, 0x31, 0xa9, 0x53, 0x53, 0x52, 0x35, 0x89, 0xcb, 0xb0, 0x78, 0x4c, 0x6a,
	0x2e, 0x4b, 0x15, 0xe1, 0x40, 0x6e, 0x06, 0x01, 0x9b, 0xd4, 0x21, 0xf8, 0x4b, 0xe2, 0x66, 0xf3,
	0x7f, 0xcd, 0x80, 0x5b, 0xc9, 0xc2, 0x39, 0xf2, 0xa8, 0x35, 0x85, 0xa6, 0x54, 0x93, 0xea, 0xd7,
	0xbf, 0xd8, 0x35, 0x00, 0x47, 0x9b, 0xeb, 0x4a, 0x5d, 0x0a, 0xb6, 0x86, 0x51, 0x7b, 0xb9, 0x2c,
	0x73, 0x33, 0xe3, 0xe6, 0x9a, 0x52, 0xe6, 0x66, 0xc7, 0xcd, 0x82, 0x2c, 0x73, 0x73, 0xf9, 0x7f,
	0x67, 0xc0, 0xca, 0xc4, 0x3a, 0xf4, 0x21, 0xf8, 0xa8, 0xa9, 0x0a, 0x75, 0x4d, 0x10, 0x59, 0xf2,
	0xeb, 0x55, 0x4d, 0x91, 0x85, 0xe6, 0xf8, 0x17, 0xf7, 0x39, 0xf8, 0x74, 0x72, 0x37, 0x55, 0x12,
	0xca, 0xfa, 0x41, 0x3d, 0xf8, 0xca, 0x9b, 0x52, 0x99, 0xcb, 0xc0, 0x47, 0xe0, 0x93, 0x5f, 0xe8,
	0x1b, 0xf7, 0x9c, 0x81, 0x9f, 0x81, 0x87, 0x6f, 0xeb, 0xd9, 0x90, 0x84, 0xa6, 0x50, 0x92, 0x25,
	0x5f, 0xc4, 0xcd, 0xc2, 0x4f, 0x41, 0x7e, 0x72, 0x57, 0x4d, 0x52, 0xab, 0x82, 0x5c, 0x7d, 0xcd,
	0x3a, 0x73, 0x73, 0xf9, 0xef, 0xc1, 0x42, 0xa2, 0x28, 0x64, 0x9b, 0x41, 0xe9, 0x55, 0x53, 0x12,
	0x74, 0xe5, 0xa0, 0xd9, 0x38, 0x68, 0x8e, 0x7f, 0x2b, 0x23, 0xad, 0xcf, 0xa5, 0x97, 0x5c, 0x06,
	0xf2, 0x60, 0x65, 0xc4, 0x2a, 0x69, 0xa2, 0xd0, 0x60, 0xe3, 0xcd, 0xab, 0xe0, 0xe6, 0xb0, 0x14,
	0x64, 0x9f, 0xfa, 0xcb, 0x9a, 0xac, 0x97, 0xaa, 0x75, 0x41, 0x7d, 0x35, 0xbe, 0xcb, 0x27, 0xda,
	0x4a, 0x82, 0x26, 0x3d, 0xd9, 0xe3, 0x32, 0x10, 0x82, 0xa5, 0x84, 0x99, 0x79, 0x9b, 0xc9, 0xbf,
	0xf4, 0x99, 0x41, 0xed, 0x17, 0x31, 0x95, 0xc6, 0x84, 0x10, 0xac, 0x83, 0x5c, 0xa2, 0xad, 0xac,
	0x88, 0x07, 0x2c, 0xbe, 0x5c, 0x86, 0x25, 0x4e, 0xa2, 0x41, 0x54, 0xea, 0x4d, 0x66, 0x9f, 0x61,
	0x7b, 0xec, 0xd2, 0x68, 0x75, 0xc1, 0x92, 0xb6, 0x24, 0x88, 0x2f, 0x34, 0x59, 0xd0, 0x9e, 0xeb,
	0xdf, 0x1d, 0xb0, 0x1d, 0x79, 0xd4, 0x49, 0x0e, 0x2c, 0x5f, 0xeb, 0x10, 0x38, 0xb8, 0xae, 0x52,
	0xea, 0xdc, 0x0c, 0x1b, 0xd1, 0x98, 0xbd, 0x52, 0xe1, 0x66, 0xe1, 0x47, 0xe0, 0xee, 0xf5, 0x06,
	0x4d, 0xa8, 0x48, 0xba, 0x54, 0x17, 0x95, 0x32, 0xfb, 0xf0, 0xe7, 0xf2, 0xff, 0x9c, 0x01, 0xab,
	0xd7, 0xab, 0x21, 0x0d, 0x7b, 0xc5, 0x02, 0xfc, 0x09, 0x70, 0xb8, 0xdd, 0xc6, 0xec, 0x80, 0xc5,
	0x7a, 0x50, 0x37, 0x85, 0x3f, 0xd6, 0xf8, 0xea, 0x9d, 0xab, 0xac, 0xd2, 0xdc, 0x7f, 0x2e, 0x8b,
	0x19, 0x75, 0x79, 0x08, 0x0e, 0x1a, 0xe0, 0x6b, 0xb0, 0x30, 0xa0, 0xd8, 0x8d, 0xdc, 0xcc, 0xbc,
	0xa7, 0x1b, 0x15, 0x30, 0x5a, 0xc8, 0xfe, 0x13, 0x58, 0x8a, 0x2a, 0xb7, 0x10, 0x3f, 0xfb, 0xbe,
	0xf8, 0xc5, 0x10, 0x18, 0x18, 0x4a, 0x87, 0xaf, 0x9b, 0x1d, 0xcb, 0xeb, 0x0e, 0x5a, 0xdb, 0x06,
	0xe9, 0xed, 0x04, 0xd4, 0xad, 0xe0, 0x87, 0x31, 0x1d, 0xb2, 0xd5, 0xc1, 0x8e, 0x7f, 0x9f, 0xd9,
	0x99, 0xea, 0x27, 0x3b, 0x5f, 0xc7, 0xc6, 0xd6, 0x0d, 0x5f, 0xf7, 0xf8, 0xbf, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x97, 0x46, 0x40, 0xbd, 0xed, 0x23, 0x00, 0x00,
}
