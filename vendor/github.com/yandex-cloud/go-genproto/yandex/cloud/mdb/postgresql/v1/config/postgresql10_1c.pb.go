// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/mdb/postgresql/v1/config/postgresql10_1c.proto

package postgresql

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	wrappers "github.com/golang/protobuf/ptypes/wrappers"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PostgresqlConfig10_1C_WalLevel int32

const (
	PostgresqlConfig10_1C_WAL_LEVEL_UNSPECIFIED PostgresqlConfig10_1C_WalLevel = 0
	PostgresqlConfig10_1C_WAL_LEVEL_REPLICA     PostgresqlConfig10_1C_WalLevel = 1
	PostgresqlConfig10_1C_WAL_LEVEL_LOGICAL     PostgresqlConfig10_1C_WalLevel = 2
)

var PostgresqlConfig10_1C_WalLevel_name = map[int32]string{
	0: "WAL_LEVEL_UNSPECIFIED",
	1: "WAL_LEVEL_REPLICA",
	2: "WAL_LEVEL_LOGICAL",
}

var PostgresqlConfig10_1C_WalLevel_value = map[string]int32{
	"WAL_LEVEL_UNSPECIFIED": 0,
	"WAL_LEVEL_REPLICA":     1,
	"WAL_LEVEL_LOGICAL":     2,
}

func (x PostgresqlConfig10_1C_WalLevel) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_WalLevel_name, int32(x))
}

func (PostgresqlConfig10_1C_WalLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 0}
}

type PostgresqlConfig10_1C_SynchronousCommit int32

const (
	PostgresqlConfig10_1C_SYNCHRONOUS_COMMIT_UNSPECIFIED  PostgresqlConfig10_1C_SynchronousCommit = 0
	PostgresqlConfig10_1C_SYNCHRONOUS_COMMIT_ON           PostgresqlConfig10_1C_SynchronousCommit = 1
	PostgresqlConfig10_1C_SYNCHRONOUS_COMMIT_OFF          PostgresqlConfig10_1C_SynchronousCommit = 2
	PostgresqlConfig10_1C_SYNCHRONOUS_COMMIT_LOCAL        PostgresqlConfig10_1C_SynchronousCommit = 3
	PostgresqlConfig10_1C_SYNCHRONOUS_COMMIT_REMOTE_WRITE PostgresqlConfig10_1C_SynchronousCommit = 4
	PostgresqlConfig10_1C_SYNCHRONOUS_COMMIT_REMOTE_APPLY PostgresqlConfig10_1C_SynchronousCommit = 5
)

var PostgresqlConfig10_1C_SynchronousCommit_name = map[int32]string{
	0: "SYNCHRONOUS_COMMIT_UNSPECIFIED",
	1: "SYNCHRONOUS_COMMIT_ON",
	2: "SYNCHRONOUS_COMMIT_OFF",
	3: "SYNCHRONOUS_COMMIT_LOCAL",
	4: "SYNCHRONOUS_COMMIT_REMOTE_WRITE",
	5: "SYNCHRONOUS_COMMIT_REMOTE_APPLY",
}

var PostgresqlConfig10_1C_SynchronousCommit_value = map[string]int32{
	"SYNCHRONOUS_COMMIT_UNSPECIFIED":  0,
	"SYNCHRONOUS_COMMIT_ON":           1,
	"SYNCHRONOUS_COMMIT_OFF":          2,
	"SYNCHRONOUS_COMMIT_LOCAL":        3,
	"SYNCHRONOUS_COMMIT_REMOTE_WRITE": 4,
	"SYNCHRONOUS_COMMIT_REMOTE_APPLY": 5,
}

func (x PostgresqlConfig10_1C_SynchronousCommit) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_SynchronousCommit_name, int32(x))
}

func (PostgresqlConfig10_1C_SynchronousCommit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 1}
}

type PostgresqlConfig10_1C_ConstraintExclusion int32

const (
	PostgresqlConfig10_1C_CONSTRAINT_EXCLUSION_UNSPECIFIED PostgresqlConfig10_1C_ConstraintExclusion = 0
	PostgresqlConfig10_1C_CONSTRAINT_EXCLUSION_ON          PostgresqlConfig10_1C_ConstraintExclusion = 1
	PostgresqlConfig10_1C_CONSTRAINT_EXCLUSION_OFF         PostgresqlConfig10_1C_ConstraintExclusion = 2
	PostgresqlConfig10_1C_CONSTRAINT_EXCLUSION_PARTITION   PostgresqlConfig10_1C_ConstraintExclusion = 3
)

var PostgresqlConfig10_1C_ConstraintExclusion_name = map[int32]string{
	0: "CONSTRAINT_EXCLUSION_UNSPECIFIED",
	1: "CONSTRAINT_EXCLUSION_ON",
	2: "CONSTRAINT_EXCLUSION_OFF",
	3: "CONSTRAINT_EXCLUSION_PARTITION",
}

var PostgresqlConfig10_1C_ConstraintExclusion_value = map[string]int32{
	"CONSTRAINT_EXCLUSION_UNSPECIFIED": 0,
	"CONSTRAINT_EXCLUSION_ON":          1,
	"CONSTRAINT_EXCLUSION_OFF":         2,
	"CONSTRAINT_EXCLUSION_PARTITION":   3,
}

func (x PostgresqlConfig10_1C_ConstraintExclusion) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_ConstraintExclusion_name, int32(x))
}

func (PostgresqlConfig10_1C_ConstraintExclusion) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 2}
}

type PostgresqlConfig10_1C_ForceParallelMode int32

const (
	PostgresqlConfig10_1C_FORCE_PARALLEL_MODE_UNSPECIFIED PostgresqlConfig10_1C_ForceParallelMode = 0
	PostgresqlConfig10_1C_FORCE_PARALLEL_MODE_ON          PostgresqlConfig10_1C_ForceParallelMode = 1
	PostgresqlConfig10_1C_FORCE_PARALLEL_MODE_OFF         PostgresqlConfig10_1C_ForceParallelMode = 2
	PostgresqlConfig10_1C_FORCE_PARALLEL_MODE_REGRESS     PostgresqlConfig10_1C_ForceParallelMode = 3
)

var PostgresqlConfig10_1C_ForceParallelMode_name = map[int32]string{
	0: "FORCE_PARALLEL_MODE_UNSPECIFIED",
	1: "FORCE_PARALLEL_MODE_ON",
	2: "FORCE_PARALLEL_MODE_OFF",
	3: "FORCE_PARALLEL_MODE_REGRESS",
}

var PostgresqlConfig10_1C_ForceParallelMode_value = map[string]int32{
	"FORCE_PARALLEL_MODE_UNSPECIFIED": 0,
	"FORCE_PARALLEL_MODE_ON":          1,
	"FORCE_PARALLEL_MODE_OFF":         2,
	"FORCE_PARALLEL_MODE_REGRESS":     3,
}

func (x PostgresqlConfig10_1C_ForceParallelMode) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_ForceParallelMode_name, int32(x))
}

func (PostgresqlConfig10_1C_ForceParallelMode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 3}
}

type PostgresqlConfig10_1C_LogLevel int32

const (
	PostgresqlConfig10_1C_LOG_LEVEL_UNSPECIFIED PostgresqlConfig10_1C_LogLevel = 0
	PostgresqlConfig10_1C_LOG_LEVEL_DEBUG5      PostgresqlConfig10_1C_LogLevel = 1
	PostgresqlConfig10_1C_LOG_LEVEL_DEBUG4      PostgresqlConfig10_1C_LogLevel = 2
	PostgresqlConfig10_1C_LOG_LEVEL_DEBUG3      PostgresqlConfig10_1C_LogLevel = 3
	PostgresqlConfig10_1C_LOG_LEVEL_DEBUG2      PostgresqlConfig10_1C_LogLevel = 4
	PostgresqlConfig10_1C_LOG_LEVEL_DEBUG1      PostgresqlConfig10_1C_LogLevel = 5
	PostgresqlConfig10_1C_LOG_LEVEL_LOG         PostgresqlConfig10_1C_LogLevel = 6
	PostgresqlConfig10_1C_LOG_LEVEL_NOTICE      PostgresqlConfig10_1C_LogLevel = 7
	PostgresqlConfig10_1C_LOG_LEVEL_WARNING     PostgresqlConfig10_1C_LogLevel = 8
	PostgresqlConfig10_1C_LOG_LEVEL_ERROR       PostgresqlConfig10_1C_LogLevel = 9
	PostgresqlConfig10_1C_LOG_LEVEL_FATAL       PostgresqlConfig10_1C_LogLevel = 10
	PostgresqlConfig10_1C_LOG_LEVEL_PANIC       PostgresqlConfig10_1C_LogLevel = 11
)

var PostgresqlConfig10_1C_LogLevel_name = map[int32]string{
	0:  "LOG_LEVEL_UNSPECIFIED",
	1:  "LOG_LEVEL_DEBUG5",
	2:  "LOG_LEVEL_DEBUG4",
	3:  "LOG_LEVEL_DEBUG3",
	4:  "LOG_LEVEL_DEBUG2",
	5:  "LOG_LEVEL_DEBUG1",
	6:  "LOG_LEVEL_LOG",
	7:  "LOG_LEVEL_NOTICE",
	8:  "LOG_LEVEL_WARNING",
	9:  "LOG_LEVEL_ERROR",
	10: "LOG_LEVEL_FATAL",
	11: "LOG_LEVEL_PANIC",
}

var PostgresqlConfig10_1C_LogLevel_value = map[string]int32{
	"LOG_LEVEL_UNSPECIFIED": 0,
	"LOG_LEVEL_DEBUG5":      1,
	"LOG_LEVEL_DEBUG4":      2,
	"LOG_LEVEL_DEBUG3":      3,
	"LOG_LEVEL_DEBUG2":      4,
	"LOG_LEVEL_DEBUG1":      5,
	"LOG_LEVEL_LOG":         6,
	"LOG_LEVEL_NOTICE":      7,
	"LOG_LEVEL_WARNING":     8,
	"LOG_LEVEL_ERROR":       9,
	"LOG_LEVEL_FATAL":       10,
	"LOG_LEVEL_PANIC":       11,
}

func (x PostgresqlConfig10_1C_LogLevel) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_LogLevel_name, int32(x))
}

func (PostgresqlConfig10_1C_LogLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 4}
}

type PostgresqlConfig10_1C_LogErrorVerbosity int32

const (
	PostgresqlConfig10_1C_LOG_ERROR_VERBOSITY_UNSPECIFIED PostgresqlConfig10_1C_LogErrorVerbosity = 0
	PostgresqlConfig10_1C_LOG_ERROR_VERBOSITY_TERSE       PostgresqlConfig10_1C_LogErrorVerbosity = 1
	PostgresqlConfig10_1C_LOG_ERROR_VERBOSITY_DEFAULT     PostgresqlConfig10_1C_LogErrorVerbosity = 2
	PostgresqlConfig10_1C_LOG_ERROR_VERBOSITY_VERBOSE     PostgresqlConfig10_1C_LogErrorVerbosity = 3
)

var PostgresqlConfig10_1C_LogErrorVerbosity_name = map[int32]string{
	0: "LOG_ERROR_VERBOSITY_UNSPECIFIED",
	1: "LOG_ERROR_VERBOSITY_TERSE",
	2: "LOG_ERROR_VERBOSITY_DEFAULT",
	3: "LOG_ERROR_VERBOSITY_VERBOSE",
}

var PostgresqlConfig10_1C_LogErrorVerbosity_value = map[string]int32{
	"LOG_ERROR_VERBOSITY_UNSPECIFIED": 0,
	"LOG_ERROR_VERBOSITY_TERSE":       1,
	"LOG_ERROR_VERBOSITY_DEFAULT":     2,
	"LOG_ERROR_VERBOSITY_VERBOSE":     3,
}

func (x PostgresqlConfig10_1C_LogErrorVerbosity) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_LogErrorVerbosity_name, int32(x))
}

func (PostgresqlConfig10_1C_LogErrorVerbosity) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 5}
}

type PostgresqlConfig10_1C_LogStatement int32

const (
	PostgresqlConfig10_1C_LOG_STATEMENT_UNSPECIFIED PostgresqlConfig10_1C_LogStatement = 0
	PostgresqlConfig10_1C_LOG_STATEMENT_NONE        PostgresqlConfig10_1C_LogStatement = 1
	PostgresqlConfig10_1C_LOG_STATEMENT_DDL         PostgresqlConfig10_1C_LogStatement = 2
	PostgresqlConfig10_1C_LOG_STATEMENT_MOD         PostgresqlConfig10_1C_LogStatement = 3
	PostgresqlConfig10_1C_LOG_STATEMENT_ALL         PostgresqlConfig10_1C_LogStatement = 4
)

var PostgresqlConfig10_1C_LogStatement_name = map[int32]string{
	0: "LOG_STATEMENT_UNSPECIFIED",
	1: "LOG_STATEMENT_NONE",
	2: "LOG_STATEMENT_DDL",
	3: "LOG_STATEMENT_MOD",
	4: "LOG_STATEMENT_ALL",
}

var PostgresqlConfig10_1C_LogStatement_value = map[string]int32{
	"LOG_STATEMENT_UNSPECIFIED": 0,
	"LOG_STATEMENT_NONE":        1,
	"LOG_STATEMENT_DDL":         2,
	"LOG_STATEMENT_MOD":         3,
	"LOG_STATEMENT_ALL":         4,
}

func (x PostgresqlConfig10_1C_LogStatement) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_LogStatement_name, int32(x))
}

func (PostgresqlConfig10_1C_LogStatement) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 6}
}

type PostgresqlConfig10_1C_TransactionIsolation int32

const (
	PostgresqlConfig10_1C_TRANSACTION_ISOLATION_UNSPECIFIED      PostgresqlConfig10_1C_TransactionIsolation = 0
	PostgresqlConfig10_1C_TRANSACTION_ISOLATION_READ_UNCOMMITTED PostgresqlConfig10_1C_TransactionIsolation = 1
	PostgresqlConfig10_1C_TRANSACTION_ISOLATION_READ_COMMITTED   PostgresqlConfig10_1C_TransactionIsolation = 2
	PostgresqlConfig10_1C_TRANSACTION_ISOLATION_REPEATABLE_READ  PostgresqlConfig10_1C_TransactionIsolation = 3
	PostgresqlConfig10_1C_TRANSACTION_ISOLATION_SERIALIZABLE     PostgresqlConfig10_1C_TransactionIsolation = 4
)

var PostgresqlConfig10_1C_TransactionIsolation_name = map[int32]string{
	0: "TRANSACTION_ISOLATION_UNSPECIFIED",
	1: "TRANSACTION_ISOLATION_READ_UNCOMMITTED",
	2: "TRANSACTION_ISOLATION_READ_COMMITTED",
	3: "TRANSACTION_ISOLATION_REPEATABLE_READ",
	4: "TRANSACTION_ISOLATION_SERIALIZABLE",
}

var PostgresqlConfig10_1C_TransactionIsolation_value = map[string]int32{
	"TRANSACTION_ISOLATION_UNSPECIFIED":      0,
	"TRANSACTION_ISOLATION_READ_UNCOMMITTED": 1,
	"TRANSACTION_ISOLATION_READ_COMMITTED":   2,
	"TRANSACTION_ISOLATION_REPEATABLE_READ":  3,
	"TRANSACTION_ISOLATION_SERIALIZABLE":     4,
}

func (x PostgresqlConfig10_1C_TransactionIsolation) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_TransactionIsolation_name, int32(x))
}

func (PostgresqlConfig10_1C_TransactionIsolation) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 7}
}

type PostgresqlConfig10_1C_ByteaOutput int32

const (
	PostgresqlConfig10_1C_BYTEA_OUTPUT_UNSPECIFIED PostgresqlConfig10_1C_ByteaOutput = 0
	PostgresqlConfig10_1C_BYTEA_OUTPUT_HEX         PostgresqlConfig10_1C_ByteaOutput = 1
	PostgresqlConfig10_1C_BYTEA_OUTPUT_ESCAPED     PostgresqlConfig10_1C_ByteaOutput = 2
)

var PostgresqlConfig10_1C_ByteaOutput_name = map[int32]string{
	0: "BYTEA_OUTPUT_UNSPECIFIED",
	1: "BYTEA_OUTPUT_HEX",
	2: "BYTEA_OUTPUT_ESCAPED",
}

var PostgresqlConfig10_1C_ByteaOutput_value = map[string]int32{
	"BYTEA_OUTPUT_UNSPECIFIED": 0,
	"BYTEA_OUTPUT_HEX":         1,
	"BYTEA_OUTPUT_ESCAPED":     2,
}

func (x PostgresqlConfig10_1C_ByteaOutput) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_ByteaOutput_name, int32(x))
}

func (PostgresqlConfig10_1C_ByteaOutput) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 8}
}

type PostgresqlConfig10_1C_XmlBinary int32

const (
	PostgresqlConfig10_1C_XML_BINARY_UNSPECIFIED PostgresqlConfig10_1C_XmlBinary = 0
	PostgresqlConfig10_1C_XML_BINARY_BASE64      PostgresqlConfig10_1C_XmlBinary = 1
	PostgresqlConfig10_1C_XML_BINARY_HEX         PostgresqlConfig10_1C_XmlBinary = 2
)

var PostgresqlConfig10_1C_XmlBinary_name = map[int32]string{
	0: "XML_BINARY_UNSPECIFIED",
	1: "XML_BINARY_BASE64",
	2: "XML_BINARY_HEX",
}

var PostgresqlConfig10_1C_XmlBinary_value = map[string]int32{
	"XML_BINARY_UNSPECIFIED": 0,
	"XML_BINARY_BASE64":      1,
	"XML_BINARY_HEX":         2,
}

func (x PostgresqlConfig10_1C_XmlBinary) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_XmlBinary_name, int32(x))
}

func (PostgresqlConfig10_1C_XmlBinary) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 9}
}

type PostgresqlConfig10_1C_XmlOption int32

const (
	PostgresqlConfig10_1C_XML_OPTION_UNSPECIFIED PostgresqlConfig10_1C_XmlOption = 0
	PostgresqlConfig10_1C_XML_OPTION_DOCUMENT    PostgresqlConfig10_1C_XmlOption = 1
	PostgresqlConfig10_1C_XML_OPTION_CONTENT     PostgresqlConfig10_1C_XmlOption = 2
)

var PostgresqlConfig10_1C_XmlOption_name = map[int32]string{
	0: "XML_OPTION_UNSPECIFIED",
	1: "XML_OPTION_DOCUMENT",
	2: "XML_OPTION_CONTENT",
}

var PostgresqlConfig10_1C_XmlOption_value = map[string]int32{
	"XML_OPTION_UNSPECIFIED": 0,
	"XML_OPTION_DOCUMENT":    1,
	"XML_OPTION_CONTENT":     2,
}

func (x PostgresqlConfig10_1C_XmlOption) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_XmlOption_name, int32(x))
}

func (PostgresqlConfig10_1C_XmlOption) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 10}
}

type PostgresqlConfig10_1C_BackslashQuote int32

const (
	PostgresqlConfig10_1C_BACKSLASH_QUOTE_UNSPECIFIED   PostgresqlConfig10_1C_BackslashQuote = 0
	PostgresqlConfig10_1C_BACKSLASH_QUOTE               PostgresqlConfig10_1C_BackslashQuote = 1
	PostgresqlConfig10_1C_BACKSLASH_QUOTE_ON            PostgresqlConfig10_1C_BackslashQuote = 2
	PostgresqlConfig10_1C_BACKSLASH_QUOTE_OFF           PostgresqlConfig10_1C_BackslashQuote = 3
	PostgresqlConfig10_1C_BACKSLASH_QUOTE_SAFE_ENCODING PostgresqlConfig10_1C_BackslashQuote = 4
)

var PostgresqlConfig10_1C_BackslashQuote_name = map[int32]string{
	0: "BACKSLASH_QUOTE_UNSPECIFIED",
	1: "BACKSLASH_QUOTE",
	2: "BACKSLASH_QUOTE_ON",
	3: "BACKSLASH_QUOTE_OFF",
	4: "BACKSLASH_QUOTE_SAFE_ENCODING",
}

var PostgresqlConfig10_1C_BackslashQuote_value = map[string]int32{
	"BACKSLASH_QUOTE_UNSPECIFIED":   0,
	"BACKSLASH_QUOTE":               1,
	"BACKSLASH_QUOTE_ON":            2,
	"BACKSLASH_QUOTE_OFF":           3,
	"BACKSLASH_QUOTE_SAFE_ENCODING": 4,
}

func (x PostgresqlConfig10_1C_BackslashQuote) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_BackslashQuote_name, int32(x))
}

func (PostgresqlConfig10_1C_BackslashQuote) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 11}
}

type PostgresqlConfig10_1C_PgHintPlanDebugPrint int32

const (
	PostgresqlConfig10_1C_PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED PostgresqlConfig10_1C_PgHintPlanDebugPrint = 0
	PostgresqlConfig10_1C_PG_HINT_PLAN_DEBUG_PRINT_OFF         PostgresqlConfig10_1C_PgHintPlanDebugPrint = 1
	PostgresqlConfig10_1C_PG_HINT_PLAN_DEBUG_PRINT_ON          PostgresqlConfig10_1C_PgHintPlanDebugPrint = 2
	PostgresqlConfig10_1C_PG_HINT_PLAN_DEBUG_PRINT_DETAILED    PostgresqlConfig10_1C_PgHintPlanDebugPrint = 3
	PostgresqlConfig10_1C_PG_HINT_PLAN_DEBUG_PRINT_VERBOSE     PostgresqlConfig10_1C_PgHintPlanDebugPrint = 4
)

var PostgresqlConfig10_1C_PgHintPlanDebugPrint_name = map[int32]string{
	0: "PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED",
	1: "PG_HINT_PLAN_DEBUG_PRINT_OFF",
	2: "PG_HINT_PLAN_DEBUG_PRINT_ON",
	3: "PG_HINT_PLAN_DEBUG_PRINT_DETAILED",
	4: "PG_HINT_PLAN_DEBUG_PRINT_VERBOSE",
}

var PostgresqlConfig10_1C_PgHintPlanDebugPrint_value = map[string]int32{
	"PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED": 0,
	"PG_HINT_PLAN_DEBUG_PRINT_OFF":         1,
	"PG_HINT_PLAN_DEBUG_PRINT_ON":          2,
	"PG_HINT_PLAN_DEBUG_PRINT_DETAILED":    3,
	"PG_HINT_PLAN_DEBUG_PRINT_VERBOSE":     4,
}

func (x PostgresqlConfig10_1C_PgHintPlanDebugPrint) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_PgHintPlanDebugPrint_name, int32(x))
}

func (PostgresqlConfig10_1C_PgHintPlanDebugPrint) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 12}
}

type PostgresqlConfig10_1C_SharedPreloadLibraries int32

const (
	PostgresqlConfig10_1C_SHARED_PRELOAD_LIBRARIES_UNSPECIFIED  PostgresqlConfig10_1C_SharedPreloadLibraries = 0
	PostgresqlConfig10_1C_SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN PostgresqlConfig10_1C_SharedPreloadLibraries = 1
	PostgresqlConfig10_1C_SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN PostgresqlConfig10_1C_SharedPreloadLibraries = 2
)

var PostgresqlConfig10_1C_SharedPreloadLibraries_name = map[int32]string{
	0: "SHARED_PRELOAD_LIBRARIES_UNSPECIFIED",
	1: "SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN",
	2: "SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN",
}

var PostgresqlConfig10_1C_SharedPreloadLibraries_value = map[string]int32{
	"SHARED_PRELOAD_LIBRARIES_UNSPECIFIED":  0,
	"SHARED_PRELOAD_LIBRARIES_AUTO_EXPLAIN": 1,
	"SHARED_PRELOAD_LIBRARIES_PG_HINT_PLAN": 2,
}

func (x PostgresqlConfig10_1C_SharedPreloadLibraries) String() string {
	return proto.EnumName(PostgresqlConfig10_1C_SharedPreloadLibraries_name, int32(x))
}

func (PostgresqlConfig10_1C_SharedPreloadLibraries) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0, 13}
}

// Options and structure of `PostgresqlConfig` reflects PostgreSQL configuration file
// parameters whose detailed description is available in
// [PostgreSQL documentation](https://www.postgresql.org/docs/10/runtime-config.html).
type PostgresqlConfig10_1C struct {
	MaxConnections                  *wrappers.Int64Value                           `protobuf:"bytes,1,opt,name=max_connections,json=maxConnections,proto3" json:"max_connections,omitempty"`
	SharedBuffers                   *wrappers.Int64Value                           `protobuf:"bytes,2,opt,name=shared_buffers,json=sharedBuffers,proto3" json:"shared_buffers,omitempty"`
	TempBuffers                     *wrappers.Int64Value                           `protobuf:"bytes,3,opt,name=temp_buffers,json=tempBuffers,proto3" json:"temp_buffers,omitempty"`
	MaxPreparedTransactions         *wrappers.Int64Value                           `protobuf:"bytes,4,opt,name=max_prepared_transactions,json=maxPreparedTransactions,proto3" json:"max_prepared_transactions,omitempty"`
	WorkMem                         *wrappers.Int64Value                           `protobuf:"bytes,5,opt,name=work_mem,json=workMem,proto3" json:"work_mem,omitempty"`
	MaintenanceWorkMem              *wrappers.Int64Value                           `protobuf:"bytes,6,opt,name=maintenance_work_mem,json=maintenanceWorkMem,proto3" json:"maintenance_work_mem,omitempty"`
	ReplacementSortTuples           *wrappers.Int64Value                           `protobuf:"bytes,7,opt,name=replacement_sort_tuples,json=replacementSortTuples,proto3" json:"replacement_sort_tuples,omitempty"`
	AutovacuumWorkMem               *wrappers.Int64Value                           `protobuf:"bytes,8,opt,name=autovacuum_work_mem,json=autovacuumWorkMem,proto3" json:"autovacuum_work_mem,omitempty"`
	TempFileLimit                   *wrappers.Int64Value                           `protobuf:"bytes,9,opt,name=temp_file_limit,json=tempFileLimit,proto3" json:"temp_file_limit,omitempty"`
	VacuumCostDelay                 *wrappers.Int64Value                           `protobuf:"bytes,10,opt,name=vacuum_cost_delay,json=vacuumCostDelay,proto3" json:"vacuum_cost_delay,omitempty"`
	VacuumCostPageHit               *wrappers.Int64Value                           `protobuf:"bytes,11,opt,name=vacuum_cost_page_hit,json=vacuumCostPageHit,proto3" json:"vacuum_cost_page_hit,omitempty"`
	VacuumCostPageMiss              *wrappers.Int64Value                           `protobuf:"bytes,12,opt,name=vacuum_cost_page_miss,json=vacuumCostPageMiss,proto3" json:"vacuum_cost_page_miss,omitempty"`
	VacuumCostPageDirty             *wrappers.Int64Value                           `protobuf:"bytes,13,opt,name=vacuum_cost_page_dirty,json=vacuumCostPageDirty,proto3" json:"vacuum_cost_page_dirty,omitempty"`
	VacuumCostLimit                 *wrappers.Int64Value                           `protobuf:"bytes,14,opt,name=vacuum_cost_limit,json=vacuumCostLimit,proto3" json:"vacuum_cost_limit,omitempty"`
	BgwriterDelay                   *wrappers.Int64Value                           `protobuf:"bytes,15,opt,name=bgwriter_delay,json=bgwriterDelay,proto3" json:"bgwriter_delay,omitempty"`
	BgwriterLruMaxpages             *wrappers.Int64Value                           `protobuf:"bytes,16,opt,name=bgwriter_lru_maxpages,json=bgwriterLruMaxpages,proto3" json:"bgwriter_lru_maxpages,omitempty"`
	BgwriterLruMultiplier           *wrappers.DoubleValue                          `protobuf:"bytes,17,opt,name=bgwriter_lru_multiplier,json=bgwriterLruMultiplier,proto3" json:"bgwriter_lru_multiplier,omitempty"`
	BgwriterFlushAfter              *wrappers.Int64Value                           `protobuf:"bytes,18,opt,name=bgwriter_flush_after,json=bgwriterFlushAfter,proto3" json:"bgwriter_flush_after,omitempty"`
	BackendFlushAfter               *wrappers.Int64Value                           `protobuf:"bytes,19,opt,name=backend_flush_after,json=backendFlushAfter,proto3" json:"backend_flush_after,omitempty"`
	OldSnapshotThreshold            *wrappers.Int64Value                           `protobuf:"bytes,20,opt,name=old_snapshot_threshold,json=oldSnapshotThreshold,proto3" json:"old_snapshot_threshold,omitempty"`
	WalLevel                        PostgresqlConfig10_1C_WalLevel                 `protobuf:"varint,21,opt,name=wal_level,json=walLevel,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_WalLevel" json:"wal_level,omitempty"`
	SynchronousCommit               PostgresqlConfig10_1C_SynchronousCommit        `protobuf:"varint,22,opt,name=synchronous_commit,json=synchronousCommit,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_SynchronousCommit" json:"synchronous_commit,omitempty"`
	CheckpointTimeout               *wrappers.Int64Value                           `protobuf:"bytes,23,opt,name=checkpoint_timeout,json=checkpointTimeout,proto3" json:"checkpoint_timeout,omitempty"`
	CheckpointCompletionTarget      *wrappers.DoubleValue                          `protobuf:"bytes,24,opt,name=checkpoint_completion_target,json=checkpointCompletionTarget,proto3" json:"checkpoint_completion_target,omitempty"`
	CheckpointFlushAfter            *wrappers.Int64Value                           `protobuf:"bytes,25,opt,name=checkpoint_flush_after,json=checkpointFlushAfter,proto3" json:"checkpoint_flush_after,omitempty"`
	MaxWalSize                      *wrappers.Int64Value                           `protobuf:"bytes,26,opt,name=max_wal_size,json=maxWalSize,proto3" json:"max_wal_size,omitempty"`
	MinWalSize                      *wrappers.Int64Value                           `protobuf:"bytes,27,opt,name=min_wal_size,json=minWalSize,proto3" json:"min_wal_size,omitempty"`
	MaxStandbyStreamingDelay        *wrappers.Int64Value                           `protobuf:"bytes,28,opt,name=max_standby_streaming_delay,json=maxStandbyStreamingDelay,proto3" json:"max_standby_streaming_delay,omitempty"`
	DefaultStatisticsTarget         *wrappers.Int64Value                           `protobuf:"bytes,29,opt,name=default_statistics_target,json=defaultStatisticsTarget,proto3" json:"default_statistics_target,omitempty"`
	ConstraintExclusion             PostgresqlConfig10_1C_ConstraintExclusion      `protobuf:"varint,30,opt,name=constraint_exclusion,json=constraintExclusion,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_ConstraintExclusion" json:"constraint_exclusion,omitempty"`
	CursorTupleFraction             *wrappers.DoubleValue                          `protobuf:"bytes,31,opt,name=cursor_tuple_fraction,json=cursorTupleFraction,proto3" json:"cursor_tuple_fraction,omitempty"`
	FromCollapseLimit               *wrappers.Int64Value                           `protobuf:"bytes,32,opt,name=from_collapse_limit,json=fromCollapseLimit,proto3" json:"from_collapse_limit,omitempty"`
	JoinCollapseLimit               *wrappers.Int64Value                           `protobuf:"bytes,33,opt,name=join_collapse_limit,json=joinCollapseLimit,proto3" json:"join_collapse_limit,omitempty"`
	ForceParallelMode               PostgresqlConfig10_1C_ForceParallelMode        `protobuf:"varint,34,opt,name=force_parallel_mode,json=forceParallelMode,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_ForceParallelMode" json:"force_parallel_mode,omitempty"`
	ClientMinMessages               PostgresqlConfig10_1C_LogLevel                 `protobuf:"varint,35,opt,name=client_min_messages,json=clientMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogLevel" json:"client_min_messages,omitempty"`
	LogMinMessages                  PostgresqlConfig10_1C_LogLevel                 `protobuf:"varint,36,opt,name=log_min_messages,json=logMinMessages,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogLevel" json:"log_min_messages,omitempty"`
	LogMinErrorStatement            PostgresqlConfig10_1C_LogLevel                 `protobuf:"varint,37,opt,name=log_min_error_statement,json=logMinErrorStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogLevel" json:"log_min_error_statement,omitempty"`
	LogMinDurationStatement         *wrappers.Int64Value                           `protobuf:"bytes,38,opt,name=log_min_duration_statement,json=logMinDurationStatement,proto3" json:"log_min_duration_statement,omitempty"`
	LogCheckpoints                  *wrappers.BoolValue                            `protobuf:"bytes,39,opt,name=log_checkpoints,json=logCheckpoints,proto3" json:"log_checkpoints,omitempty"`
	LogConnections                  *wrappers.BoolValue                            `protobuf:"bytes,40,opt,name=log_connections,json=logConnections,proto3" json:"log_connections,omitempty"`
	LogDisconnections               *wrappers.BoolValue                            `protobuf:"bytes,41,opt,name=log_disconnections,json=logDisconnections,proto3" json:"log_disconnections,omitempty"`
	LogDuration                     *wrappers.BoolValue                            `protobuf:"bytes,42,opt,name=log_duration,json=logDuration,proto3" json:"log_duration,omitempty"`
	LogErrorVerbosity               PostgresqlConfig10_1C_LogErrorVerbosity        `protobuf:"varint,43,opt,name=log_error_verbosity,json=logErrorVerbosity,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogErrorVerbosity" json:"log_error_verbosity,omitempty"`
	LogLockWaits                    *wrappers.BoolValue                            `protobuf:"bytes,44,opt,name=log_lock_waits,json=logLockWaits,proto3" json:"log_lock_waits,omitempty"`
	LogStatement                    PostgresqlConfig10_1C_LogStatement             `protobuf:"varint,45,opt,name=log_statement,json=logStatement,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogStatement" json:"log_statement,omitempty"`
	LogTempFiles                    *wrappers.Int64Value                           `protobuf:"bytes,46,opt,name=log_temp_files,json=logTempFiles,proto3" json:"log_temp_files,omitempty"`
	SearchPath                      string                                         `protobuf:"bytes,47,opt,name=search_path,json=searchPath,proto3" json:"search_path,omitempty"`
	RowSecurity                     *wrappers.BoolValue                            `protobuf:"bytes,48,opt,name=row_security,json=rowSecurity,proto3" json:"row_security,omitempty"`
	DefaultTransactionIsolation     PostgresqlConfig10_1C_TransactionIsolation     `protobuf:"varint,49,opt,name=default_transaction_isolation,json=defaultTransactionIsolation,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_TransactionIsolation" json:"default_transaction_isolation,omitempty"`
	StatementTimeout                *wrappers.Int64Value                           `protobuf:"bytes,50,opt,name=statement_timeout,json=statementTimeout,proto3" json:"statement_timeout,omitempty"`
	LockTimeout                     *wrappers.Int64Value                           `protobuf:"bytes,51,opt,name=lock_timeout,json=lockTimeout,proto3" json:"lock_timeout,omitempty"`
	IdleInTransactionSessionTimeout *wrappers.Int64Value                           `protobuf:"bytes,52,opt,name=idle_in_transaction_session_timeout,json=idleInTransactionSessionTimeout,proto3" json:"idle_in_transaction_session_timeout,omitempty"`
	ByteaOutput                     PostgresqlConfig10_1C_ByteaOutput              `protobuf:"varint,53,opt,name=bytea_output,json=byteaOutput,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_ByteaOutput" json:"bytea_output,omitempty"`
	Xmlbinary                       PostgresqlConfig10_1C_XmlBinary                `protobuf:"varint,54,opt,name=xmlbinary,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_XmlBinary" json:"xmlbinary,omitempty"`
	Xmloption                       PostgresqlConfig10_1C_XmlOption                `protobuf:"varint,55,opt,name=xmloption,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_XmlOption" json:"xmloption,omitempty"`
	GinPendingListLimit             *wrappers.Int64Value                           `protobuf:"bytes,56,opt,name=gin_pending_list_limit,json=ginPendingListLimit,proto3" json:"gin_pending_list_limit,omitempty"`
	DeadlockTimeout                 *wrappers.Int64Value                           `protobuf:"bytes,57,opt,name=deadlock_timeout,json=deadlockTimeout,proto3" json:"deadlock_timeout,omitempty"`
	MaxLocksPerTransaction          *wrappers.Int64Value                           `protobuf:"bytes,58,opt,name=max_locks_per_transaction,json=maxLocksPerTransaction,proto3" json:"max_locks_per_transaction,omitempty"`
	MaxPredLocksPerTransaction      *wrappers.Int64Value                           `protobuf:"bytes,59,opt,name=max_pred_locks_per_transaction,json=maxPredLocksPerTransaction,proto3" json:"max_pred_locks_per_transaction,omitempty"`
	ArrayNulls                      *wrappers.BoolValue                            `protobuf:"bytes,60,opt,name=array_nulls,json=arrayNulls,proto3" json:"array_nulls,omitempty"`
	BackslashQuote                  PostgresqlConfig10_1C_BackslashQuote           `protobuf:"varint,61,opt,name=backslash_quote,json=backslashQuote,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_BackslashQuote" json:"backslash_quote,omitempty"`
	DefaultWithOids                 *wrappers.BoolValue                            `protobuf:"bytes,62,opt,name=default_with_oids,json=defaultWithOids,proto3" json:"default_with_oids,omitempty"`
	EscapeStringWarning             *wrappers.BoolValue                            `protobuf:"bytes,63,opt,name=escape_string_warning,json=escapeStringWarning,proto3" json:"escape_string_warning,omitempty"`
	LoCompatPrivileges              *wrappers.BoolValue                            `protobuf:"bytes,64,opt,name=lo_compat_privileges,json=loCompatPrivileges,proto3" json:"lo_compat_privileges,omitempty"`
	OperatorPrecedenceWarning       *wrappers.BoolValue                            `protobuf:"bytes,65,opt,name=operator_precedence_warning,json=operatorPrecedenceWarning,proto3" json:"operator_precedence_warning,omitempty"`
	QuoteAllIdentifiers             *wrappers.BoolValue                            `protobuf:"bytes,66,opt,name=quote_all_identifiers,json=quoteAllIdentifiers,proto3" json:"quote_all_identifiers,omitempty"`
	StandardConformingStrings       *wrappers.BoolValue                            `protobuf:"bytes,67,opt,name=standard_conforming_strings,json=standardConformingStrings,proto3" json:"standard_conforming_strings,omitempty"`
	SynchronizeSeqscans             *wrappers.BoolValue                            `protobuf:"bytes,68,opt,name=synchronize_seqscans,json=synchronizeSeqscans,proto3" json:"synchronize_seqscans,omitempty"`
	TransformNullEquals             *wrappers.BoolValue                            `protobuf:"bytes,69,opt,name=transform_null_equals,json=transformNullEquals,proto3" json:"transform_null_equals,omitempty"`
	ExitOnError                     *wrappers.BoolValue                            `protobuf:"bytes,70,opt,name=exit_on_error,json=exitOnError,proto3" json:"exit_on_error,omitempty"`
	SeqPageCost                     *wrappers.DoubleValue                          `protobuf:"bytes,71,opt,name=seq_page_cost,json=seqPageCost,proto3" json:"seq_page_cost,omitempty"`
	RandomPageCost                  *wrappers.DoubleValue                          `protobuf:"bytes,72,opt,name=random_page_cost,json=randomPageCost,proto3" json:"random_page_cost,omitempty"`
	AutovacuumMaxWorkers            *wrappers.Int64Value                           `protobuf:"bytes,73,opt,name=autovacuum_max_workers,json=autovacuumMaxWorkers,proto3" json:"autovacuum_max_workers,omitempty"`
	AutovacuumVacuumCostDelay       *wrappers.Int64Value                           `protobuf:"bytes,74,opt,name=autovacuum_vacuum_cost_delay,json=autovacuumVacuumCostDelay,proto3" json:"autovacuum_vacuum_cost_delay,omitempty"`
	AutovacuumVacuumCostLimit       *wrappers.Int64Value                           `protobuf:"bytes,75,opt,name=autovacuum_vacuum_cost_limit,json=autovacuumVacuumCostLimit,proto3" json:"autovacuum_vacuum_cost_limit,omitempty"`
	AutovacuumNaptime               *wrappers.Int64Value                           `protobuf:"bytes,76,opt,name=autovacuum_naptime,json=autovacuumNaptime,proto3" json:"autovacuum_naptime,omitempty"`
	ArchiveTimeout                  *wrappers.Int64Value                           `protobuf:"bytes,77,opt,name=archive_timeout,json=archiveTimeout,proto3" json:"archive_timeout,omitempty"`
	TrackActivityQuerySize          *wrappers.Int64Value                           `protobuf:"bytes,78,opt,name=track_activity_query_size,json=trackActivityQuerySize,proto3" json:"track_activity_query_size,omitempty"`
	EnableBitmapscan                *wrappers.BoolValue                            `protobuf:"bytes,80,opt,name=enable_bitmapscan,json=enableBitmapscan,proto3" json:"enable_bitmapscan,omitempty"`
	EnableHashagg                   *wrappers.BoolValue                            `protobuf:"bytes,81,opt,name=enable_hashagg,json=enableHashagg,proto3" json:"enable_hashagg,omitempty"`
	EnableHashjoin                  *wrappers.BoolValue                            `protobuf:"bytes,82,opt,name=enable_hashjoin,json=enableHashjoin,proto3" json:"enable_hashjoin,omitempty"`
	EnableIndexscan                 *wrappers.BoolValue                            `protobuf:"bytes,83,opt,name=enable_indexscan,json=enableIndexscan,proto3" json:"enable_indexscan,omitempty"`
	EnableIndexonlyscan             *wrappers.BoolValue                            `protobuf:"bytes,84,opt,name=enable_indexonlyscan,json=enableIndexonlyscan,proto3" json:"enable_indexonlyscan,omitempty"`
	EnableMaterial                  *wrappers.BoolValue                            `protobuf:"bytes,85,opt,name=enable_material,json=enableMaterial,proto3" json:"enable_material,omitempty"`
	EnableMergejoin                 *wrappers.BoolValue                            `protobuf:"bytes,86,opt,name=enable_mergejoin,json=enableMergejoin,proto3" json:"enable_mergejoin,omitempty"`
	EnableNestloop                  *wrappers.BoolValue                            `protobuf:"bytes,87,opt,name=enable_nestloop,json=enableNestloop,proto3" json:"enable_nestloop,omitempty"`
	EnableSeqscan                   *wrappers.BoolValue                            `protobuf:"bytes,88,opt,name=enable_seqscan,json=enableSeqscan,proto3" json:"enable_seqscan,omitempty"`
	EnableSort                      *wrappers.BoolValue                            `protobuf:"bytes,89,opt,name=enable_sort,json=enableSort,proto3" json:"enable_sort,omitempty"`
	EnableTidscan                   *wrappers.BoolValue                            `protobuf:"bytes,90,opt,name=enable_tidscan,json=enableTidscan,proto3" json:"enable_tidscan,omitempty"`
	MaxWorkerProcesses              *wrappers.Int64Value                           `protobuf:"bytes,91,opt,name=max_worker_processes,json=maxWorkerProcesses,proto3" json:"max_worker_processes,omitempty"`
	MaxParallelWorkers              *wrappers.Int64Value                           `protobuf:"bytes,92,opt,name=max_parallel_workers,json=maxParallelWorkers,proto3" json:"max_parallel_workers,omitempty"`
	MaxParallelWorkersPerGather     *wrappers.Int64Value                           `protobuf:"bytes,93,opt,name=max_parallel_workers_per_gather,json=maxParallelWorkersPerGather,proto3" json:"max_parallel_workers_per_gather,omitempty"`
	AutovacuumVacuumScaleFactor     *wrappers.DoubleValue                          `protobuf:"bytes,94,opt,name=autovacuum_vacuum_scale_factor,json=autovacuumVacuumScaleFactor,proto3" json:"autovacuum_vacuum_scale_factor,omitempty"`
	AutovacuumAnalyzeScaleFactor    *wrappers.DoubleValue                          `protobuf:"bytes,95,opt,name=autovacuum_analyze_scale_factor,json=autovacuumAnalyzeScaleFactor,proto3" json:"autovacuum_analyze_scale_factor,omitempty"`
	DefaultTransactionReadOnly      *wrappers.BoolValue                            `protobuf:"bytes,96,opt,name=default_transaction_read_only,json=defaultTransactionReadOnly,proto3" json:"default_transaction_read_only,omitempty"`
	Timezone                        string                                         `protobuf:"bytes,97,opt,name=timezone,proto3" json:"timezone,omitempty"`
	EffectiveIoConcurrency          *wrappers.Int64Value                           `protobuf:"bytes,98,opt,name=effective_io_concurrency,json=effectiveIoConcurrency,proto3" json:"effective_io_concurrency,omitempty"`
	EffectiveCacheSize              *wrappers.Int64Value                           `protobuf:"bytes,99,opt,name=effective_cache_size,json=effectiveCacheSize,proto3" json:"effective_cache_size,omitempty"`
	SharedPreloadLibraries          []PostgresqlConfig10_1C_SharedPreloadLibraries `protobuf:"varint,100,rep,packed,name=shared_preload_libraries,json=sharedPreloadLibraries,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_SharedPreloadLibraries" json:"shared_preload_libraries,omitempty"`
	AutoExplainLogMinDuration       *wrappers.Int64Value                           `protobuf:"bytes,101,opt,name=auto_explain_log_min_duration,json=autoExplainLogMinDuration,proto3" json:"auto_explain_log_min_duration,omitempty"`
	AutoExplainLogAnalyze           *wrappers.BoolValue                            `protobuf:"bytes,102,opt,name=auto_explain_log_analyze,json=autoExplainLogAnalyze,proto3" json:"auto_explain_log_analyze,omitempty"`
	AutoExplainLogBuffers           *wrappers.BoolValue                            `protobuf:"bytes,103,opt,name=auto_explain_log_buffers,json=autoExplainLogBuffers,proto3" json:"auto_explain_log_buffers,omitempty"`
	AutoExplainLogTiming            *wrappers.BoolValue                            `protobuf:"bytes,104,opt,name=auto_explain_log_timing,json=autoExplainLogTiming,proto3" json:"auto_explain_log_timing,omitempty"`
	AutoExplainLogTriggers          *wrappers.BoolValue                            `protobuf:"bytes,105,opt,name=auto_explain_log_triggers,json=autoExplainLogTriggers,proto3" json:"auto_explain_log_triggers,omitempty"`
	AutoExplainLogVerbose           *wrappers.BoolValue                            `protobuf:"bytes,106,opt,name=auto_explain_log_verbose,json=autoExplainLogVerbose,proto3" json:"auto_explain_log_verbose,omitempty"`
	AutoExplainLogNestedStatements  *wrappers.BoolValue                            `protobuf:"bytes,107,opt,name=auto_explain_log_nested_statements,json=autoExplainLogNestedStatements,proto3" json:"auto_explain_log_nested_statements,omitempty"`
	AutoExplainSampleRate           *wrappers.DoubleValue                          `protobuf:"bytes,108,opt,name=auto_explain_sample_rate,json=autoExplainSampleRate,proto3" json:"auto_explain_sample_rate,omitempty"`
	PgHintPlanEnableHint            *wrappers.BoolValue                            `protobuf:"bytes,109,opt,name=pg_hint_plan_enable_hint,json=pgHintPlanEnableHint,proto3" json:"pg_hint_plan_enable_hint,omitempty"`
	PgHintPlanEnableHintTable       *wrappers.BoolValue                            `protobuf:"bytes,110,opt,name=pg_hint_plan_enable_hint_table,json=pgHintPlanEnableHintTable,proto3" json:"pg_hint_plan_enable_hint_table,omitempty"`
	PgHintPlanDebugPrint            PostgresqlConfig10_1C_PgHintPlanDebugPrint     `protobuf:"varint,111,opt,name=pg_hint_plan_debug_print,json=pgHintPlanDebugPrint,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_PgHintPlanDebugPrint" json:"pg_hint_plan_debug_print,omitempty"`
	PgHintPlanMessageLevel          PostgresqlConfig10_1C_LogLevel                 `protobuf:"varint,112,opt,name=pg_hint_plan_message_level,json=pgHintPlanMessageLevel,proto3,enum=yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogLevel" json:"pg_hint_plan_message_level,omitempty"`
	OnlineAnalyzeEnable             *wrappers.BoolValue                            `protobuf:"bytes,113,opt,name=online_analyze_enable,json=onlineAnalyzeEnable,proto3" json:"online_analyze_enable,omitempty"`
	PlantunerFixEmptyTable          *wrappers.BoolValue                            `protobuf:"bytes,114,opt,name=plantuner_fix_empty_table,json=plantunerFixEmptyTable,proto3" json:"plantuner_fix_empty_table,omitempty"`
	XXX_NoUnkeyedLiteral            struct{}                                       `json:"-"`
	XXX_unrecognized                []byte                                         `json:"-"`
	XXX_sizecache                   int32                                          `json:"-"`
}

func (m *PostgresqlConfig10_1C) Reset()         { *m = PostgresqlConfig10_1C{} }
func (m *PostgresqlConfig10_1C) String() string { return proto.CompactTextString(m) }
func (*PostgresqlConfig10_1C) ProtoMessage()    {}
func (*PostgresqlConfig10_1C) Descriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{0}
}

func (m *PostgresqlConfig10_1C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresqlConfig10_1C.Unmarshal(m, b)
}
func (m *PostgresqlConfig10_1C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresqlConfig10_1C.Marshal(b, m, deterministic)
}
func (m *PostgresqlConfig10_1C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresqlConfig10_1C.Merge(m, src)
}
func (m *PostgresqlConfig10_1C) XXX_Size() int {
	return xxx_messageInfo_PostgresqlConfig10_1C.Size(m)
}
func (m *PostgresqlConfig10_1C) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresqlConfig10_1C.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresqlConfig10_1C proto.InternalMessageInfo

func (m *PostgresqlConfig10_1C) GetMaxConnections() *wrappers.Int64Value {
	if m != nil {
		return m.MaxConnections
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetSharedBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.SharedBuffers
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetTempBuffers() *wrappers.Int64Value {
	if m != nil {
		return m.TempBuffers
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaxPreparedTransactions() *wrappers.Int64Value {
	if m != nil {
		return m.MaxPreparedTransactions
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.WorkMem
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaintenanceWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.MaintenanceWorkMem
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetReplacementSortTuples() *wrappers.Int64Value {
	if m != nil {
		return m.ReplacementSortTuples
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutovacuumWorkMem() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumWorkMem
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetTempFileLimit() *wrappers.Int64Value {
	if m != nil {
		return m.TempFileLimit
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetVacuumCostDelay() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostDelay
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetVacuumCostPageHit() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageHit
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetVacuumCostPageMiss() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageMiss
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetVacuumCostPageDirty() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostPageDirty
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetVacuumCostLimit() *wrappers.Int64Value {
	if m != nil {
		return m.VacuumCostLimit
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetBgwriterDelay() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterDelay
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetBgwriterLruMaxpages() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterLruMaxpages
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetBgwriterLruMultiplier() *wrappers.DoubleValue {
	if m != nil {
		return m.BgwriterLruMultiplier
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetBgwriterFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.BgwriterFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetBackendFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.BackendFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetOldSnapshotThreshold() *wrappers.Int64Value {
	if m != nil {
		return m.OldSnapshotThreshold
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetWalLevel() PostgresqlConfig10_1C_WalLevel {
	if m != nil {
		return m.WalLevel
	}
	return PostgresqlConfig10_1C_WAL_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetSynchronousCommit() PostgresqlConfig10_1C_SynchronousCommit {
	if m != nil {
		return m.SynchronousCommit
	}
	return PostgresqlConfig10_1C_SYNCHRONOUS_COMMIT_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetCheckpointTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.CheckpointTimeout
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetCheckpointCompletionTarget() *wrappers.DoubleValue {
	if m != nil {
		return m.CheckpointCompletionTarget
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetCheckpointFlushAfter() *wrappers.Int64Value {
	if m != nil {
		return m.CheckpointFlushAfter
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaxWalSize() *wrappers.Int64Value {
	if m != nil {
		return m.MaxWalSize
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMinWalSize() *wrappers.Int64Value {
	if m != nil {
		return m.MinWalSize
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaxStandbyStreamingDelay() *wrappers.Int64Value {
	if m != nil {
		return m.MaxStandbyStreamingDelay
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetDefaultStatisticsTarget() *wrappers.Int64Value {
	if m != nil {
		return m.DefaultStatisticsTarget
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetConstraintExclusion() PostgresqlConfig10_1C_ConstraintExclusion {
	if m != nil {
		return m.ConstraintExclusion
	}
	return PostgresqlConfig10_1C_CONSTRAINT_EXCLUSION_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetCursorTupleFraction() *wrappers.DoubleValue {
	if m != nil {
		return m.CursorTupleFraction
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetFromCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.FromCollapseLimit
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetJoinCollapseLimit() *wrappers.Int64Value {
	if m != nil {
		return m.JoinCollapseLimit
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetForceParallelMode() PostgresqlConfig10_1C_ForceParallelMode {
	if m != nil {
		return m.ForceParallelMode
	}
	return PostgresqlConfig10_1C_FORCE_PARALLEL_MODE_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetClientMinMessages() PostgresqlConfig10_1C_LogLevel {
	if m != nil {
		return m.ClientMinMessages
	}
	return PostgresqlConfig10_1C_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetLogMinMessages() PostgresqlConfig10_1C_LogLevel {
	if m != nil {
		return m.LogMinMessages
	}
	return PostgresqlConfig10_1C_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetLogMinErrorStatement() PostgresqlConfig10_1C_LogLevel {
	if m != nil {
		return m.LogMinErrorStatement
	}
	return PostgresqlConfig10_1C_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetLogMinDurationStatement() *wrappers.Int64Value {
	if m != nil {
		return m.LogMinDurationStatement
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetLogCheckpoints() *wrappers.BoolValue {
	if m != nil {
		return m.LogCheckpoints
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetLogConnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogConnections
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetLogDisconnections() *wrappers.BoolValue {
	if m != nil {
		return m.LogDisconnections
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetLogDuration() *wrappers.BoolValue {
	if m != nil {
		return m.LogDuration
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetLogErrorVerbosity() PostgresqlConfig10_1C_LogErrorVerbosity {
	if m != nil {
		return m.LogErrorVerbosity
	}
	return PostgresqlConfig10_1C_LOG_ERROR_VERBOSITY_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetLogLockWaits() *wrappers.BoolValue {
	if m != nil {
		return m.LogLockWaits
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetLogStatement() PostgresqlConfig10_1C_LogStatement {
	if m != nil {
		return m.LogStatement
	}
	return PostgresqlConfig10_1C_LOG_STATEMENT_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetLogTempFiles() *wrappers.Int64Value {
	if m != nil {
		return m.LogTempFiles
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetSearchPath() string {
	if m != nil {
		return m.SearchPath
	}
	return ""
}

func (m *PostgresqlConfig10_1C) GetRowSecurity() *wrappers.BoolValue {
	if m != nil {
		return m.RowSecurity
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetDefaultTransactionIsolation() PostgresqlConfig10_1C_TransactionIsolation {
	if m != nil {
		return m.DefaultTransactionIsolation
	}
	return PostgresqlConfig10_1C_TRANSACTION_ISOLATION_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetStatementTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.StatementTimeout
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetLockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.LockTimeout
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetIdleInTransactionSessionTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.IdleInTransactionSessionTimeout
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetByteaOutput() PostgresqlConfig10_1C_ByteaOutput {
	if m != nil {
		return m.ByteaOutput
	}
	return PostgresqlConfig10_1C_BYTEA_OUTPUT_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetXmlbinary() PostgresqlConfig10_1C_XmlBinary {
	if m != nil {
		return m.Xmlbinary
	}
	return PostgresqlConfig10_1C_XML_BINARY_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetXmloption() PostgresqlConfig10_1C_XmlOption {
	if m != nil {
		return m.Xmloption
	}
	return PostgresqlConfig10_1C_XML_OPTION_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetGinPendingListLimit() *wrappers.Int64Value {
	if m != nil {
		return m.GinPendingListLimit
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetDeadlockTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.DeadlockTimeout
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaxLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaxPredLocksPerTransaction() *wrappers.Int64Value {
	if m != nil {
		return m.MaxPredLocksPerTransaction
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetArrayNulls() *wrappers.BoolValue {
	if m != nil {
		return m.ArrayNulls
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetBackslashQuote() PostgresqlConfig10_1C_BackslashQuote {
	if m != nil {
		return m.BackslashQuote
	}
	return PostgresqlConfig10_1C_BACKSLASH_QUOTE_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetDefaultWithOids() *wrappers.BoolValue {
	if m != nil {
		return m.DefaultWithOids
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEscapeStringWarning() *wrappers.BoolValue {
	if m != nil {
		return m.EscapeStringWarning
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetLoCompatPrivileges() *wrappers.BoolValue {
	if m != nil {
		return m.LoCompatPrivileges
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetOperatorPrecedenceWarning() *wrappers.BoolValue {
	if m != nil {
		return m.OperatorPrecedenceWarning
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetQuoteAllIdentifiers() *wrappers.BoolValue {
	if m != nil {
		return m.QuoteAllIdentifiers
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetStandardConformingStrings() *wrappers.BoolValue {
	if m != nil {
		return m.StandardConformingStrings
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetSynchronizeSeqscans() *wrappers.BoolValue {
	if m != nil {
		return m.SynchronizeSeqscans
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetTransformNullEquals() *wrappers.BoolValue {
	if m != nil {
		return m.TransformNullEquals
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetExitOnError() *wrappers.BoolValue {
	if m != nil {
		return m.ExitOnError
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetSeqPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.SeqPageCost
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetRandomPageCost() *wrappers.DoubleValue {
	if m != nil {
		return m.RandomPageCost
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutovacuumMaxWorkers() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumMaxWorkers
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutovacuumVacuumCostDelay() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumVacuumCostDelay
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutovacuumVacuumCostLimit() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumVacuumCostLimit
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutovacuumNaptime() *wrappers.Int64Value {
	if m != nil {
		return m.AutovacuumNaptime
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetArchiveTimeout() *wrappers.Int64Value {
	if m != nil {
		return m.ArchiveTimeout
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetTrackActivityQuerySize() *wrappers.Int64Value {
	if m != nil {
		return m.TrackActivityQuerySize
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableBitmapscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableBitmapscan
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableHashagg() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHashagg
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableHashjoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnableHashjoin
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableIndexscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableIndexscan
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableIndexonlyscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableIndexonlyscan
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableMaterial() *wrappers.BoolValue {
	if m != nil {
		return m.EnableMaterial
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableMergejoin() *wrappers.BoolValue {
	if m != nil {
		return m.EnableMergejoin
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableNestloop() *wrappers.BoolValue {
	if m != nil {
		return m.EnableNestloop
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableSeqscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableSeqscan
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableSort() *wrappers.BoolValue {
	if m != nil {
		return m.EnableSort
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEnableTidscan() *wrappers.BoolValue {
	if m != nil {
		return m.EnableTidscan
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaxWorkerProcesses() *wrappers.Int64Value {
	if m != nil {
		return m.MaxWorkerProcesses
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaxParallelWorkers() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelWorkers
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetMaxParallelWorkersPerGather() *wrappers.Int64Value {
	if m != nil {
		return m.MaxParallelWorkersPerGather
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutovacuumVacuumScaleFactor() *wrappers.DoubleValue {
	if m != nil {
		return m.AutovacuumVacuumScaleFactor
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutovacuumAnalyzeScaleFactor() *wrappers.DoubleValue {
	if m != nil {
		return m.AutovacuumAnalyzeScaleFactor
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetDefaultTransactionReadOnly() *wrappers.BoolValue {
	if m != nil {
		return m.DefaultTransactionReadOnly
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func (m *PostgresqlConfig10_1C) GetEffectiveIoConcurrency() *wrappers.Int64Value {
	if m != nil {
		return m.EffectiveIoConcurrency
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetEffectiveCacheSize() *wrappers.Int64Value {
	if m != nil {
		return m.EffectiveCacheSize
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetSharedPreloadLibraries() []PostgresqlConfig10_1C_SharedPreloadLibraries {
	if m != nil {
		return m.SharedPreloadLibraries
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutoExplainLogMinDuration() *wrappers.Int64Value {
	if m != nil {
		return m.AutoExplainLogMinDuration
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutoExplainLogAnalyze() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogAnalyze
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutoExplainLogBuffers() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogBuffers
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutoExplainLogTiming() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogTiming
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutoExplainLogTriggers() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogTriggers
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutoExplainLogVerbose() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogVerbose
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutoExplainLogNestedStatements() *wrappers.BoolValue {
	if m != nil {
		return m.AutoExplainLogNestedStatements
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetAutoExplainSampleRate() *wrappers.DoubleValue {
	if m != nil {
		return m.AutoExplainSampleRate
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetPgHintPlanEnableHint() *wrappers.BoolValue {
	if m != nil {
		return m.PgHintPlanEnableHint
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetPgHintPlanEnableHintTable() *wrappers.BoolValue {
	if m != nil {
		return m.PgHintPlanEnableHintTable
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetPgHintPlanDebugPrint() PostgresqlConfig10_1C_PgHintPlanDebugPrint {
	if m != nil {
		return m.PgHintPlanDebugPrint
	}
	return PostgresqlConfig10_1C_PG_HINT_PLAN_DEBUG_PRINT_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetPgHintPlanMessageLevel() PostgresqlConfig10_1C_LogLevel {
	if m != nil {
		return m.PgHintPlanMessageLevel
	}
	return PostgresqlConfig10_1C_LOG_LEVEL_UNSPECIFIED
}

func (m *PostgresqlConfig10_1C) GetOnlineAnalyzeEnable() *wrappers.BoolValue {
	if m != nil {
		return m.OnlineAnalyzeEnable
	}
	return nil
}

func (m *PostgresqlConfig10_1C) GetPlantunerFixEmptyTable() *wrappers.BoolValue {
	if m != nil {
		return m.PlantunerFixEmptyTable
	}
	return nil
}

type PostgresqlConfigSet10_1C struct {
	// Effective settings for a PostgreSQL 10 1C cluster (a combination of settings defined
	// in [user_config] and [default_config]).
	EffectiveConfig *PostgresqlConfig10_1C `protobuf:"bytes,1,opt,name=effective_config,json=effectiveConfig,proto3" json:"effective_config,omitempty"`
	// User-defined settings for a PostgreSQL 10 1C cluster.
	UserConfig *PostgresqlConfig10_1C `protobuf:"bytes,2,opt,name=user_config,json=userConfig,proto3" json:"user_config,omitempty"`
	// Default configuration for a PostgreSQL 10 1C cluster.
	DefaultConfig        *PostgresqlConfig10_1C `protobuf:"bytes,3,opt,name=default_config,json=defaultConfig,proto3" json:"default_config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *PostgresqlConfigSet10_1C) Reset()         { *m = PostgresqlConfigSet10_1C{} }
func (m *PostgresqlConfigSet10_1C) String() string { return proto.CompactTextString(m) }
func (*PostgresqlConfigSet10_1C) ProtoMessage()    {}
func (*PostgresqlConfigSet10_1C) Descriptor() ([]byte, []int) {
	return fileDescriptor_f14eb125b963dff2, []int{1}
}

func (m *PostgresqlConfigSet10_1C) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PostgresqlConfigSet10_1C.Unmarshal(m, b)
}
func (m *PostgresqlConfigSet10_1C) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PostgresqlConfigSet10_1C.Marshal(b, m, deterministic)
}
func (m *PostgresqlConfigSet10_1C) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PostgresqlConfigSet10_1C.Merge(m, src)
}
func (m *PostgresqlConfigSet10_1C) XXX_Size() int {
	return xxx_messageInfo_PostgresqlConfigSet10_1C.Size(m)
}
func (m *PostgresqlConfigSet10_1C) XXX_DiscardUnknown() {
	xxx_messageInfo_PostgresqlConfigSet10_1C.DiscardUnknown(m)
}

var xxx_messageInfo_PostgresqlConfigSet10_1C proto.InternalMessageInfo

func (m *PostgresqlConfigSet10_1C) GetEffectiveConfig() *PostgresqlConfig10_1C {
	if m != nil {
		return m.EffectiveConfig
	}
	return nil
}

func (m *PostgresqlConfigSet10_1C) GetUserConfig() *PostgresqlConfig10_1C {
	if m != nil {
		return m.UserConfig
	}
	return nil
}

func (m *PostgresqlConfigSet10_1C) GetDefaultConfig() *PostgresqlConfig10_1C {
	if m != nil {
		return m.DefaultConfig
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_WalLevel", PostgresqlConfig10_1C_WalLevel_name, PostgresqlConfig10_1C_WalLevel_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_SynchronousCommit", PostgresqlConfig10_1C_SynchronousCommit_name, PostgresqlConfig10_1C_SynchronousCommit_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_ConstraintExclusion", PostgresqlConfig10_1C_ConstraintExclusion_name, PostgresqlConfig10_1C_ConstraintExclusion_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_ForceParallelMode", PostgresqlConfig10_1C_ForceParallelMode_name, PostgresqlConfig10_1C_ForceParallelMode_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogLevel", PostgresqlConfig10_1C_LogLevel_name, PostgresqlConfig10_1C_LogLevel_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogErrorVerbosity", PostgresqlConfig10_1C_LogErrorVerbosity_name, PostgresqlConfig10_1C_LogErrorVerbosity_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_LogStatement", PostgresqlConfig10_1C_LogStatement_name, PostgresqlConfig10_1C_LogStatement_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_TransactionIsolation", PostgresqlConfig10_1C_TransactionIsolation_name, PostgresqlConfig10_1C_TransactionIsolation_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_ByteaOutput", PostgresqlConfig10_1C_ByteaOutput_name, PostgresqlConfig10_1C_ByteaOutput_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_XmlBinary", PostgresqlConfig10_1C_XmlBinary_name, PostgresqlConfig10_1C_XmlBinary_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_XmlOption", PostgresqlConfig10_1C_XmlOption_name, PostgresqlConfig10_1C_XmlOption_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_BackslashQuote", PostgresqlConfig10_1C_BackslashQuote_name, PostgresqlConfig10_1C_BackslashQuote_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_PgHintPlanDebugPrint", PostgresqlConfig10_1C_PgHintPlanDebugPrint_name, PostgresqlConfig10_1C_PgHintPlanDebugPrint_value)
	proto.RegisterEnum("yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C_SharedPreloadLibraries", PostgresqlConfig10_1C_SharedPreloadLibraries_name, PostgresqlConfig10_1C_SharedPreloadLibraries_value)
	proto.RegisterType((*PostgresqlConfig10_1C)(nil), "yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfig10_1C")
	proto.RegisterType((*PostgresqlConfigSet10_1C)(nil), "yandex.cloud.mdb.postgresql.v1.config.PostgresqlConfigSet10_1C")
}

func init() {
	proto.RegisterFile("yandex/cloud/mdb/postgresql/v1/config/postgresql10_1c.proto", fileDescriptor_f14eb125b963dff2)
}

var fileDescriptor_f14eb125b963dff2 = []byte{
	// 3886 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x9b, 0x5d, 0x73, 0xdb, 0xc6,
	0x7a, 0xc7, 0x4b, 0xd9, 0x49, 0xec, 0x95, 0x25, 0x41, 0xab, 0x17, 0x43, 0xf2, 0x6b, 0x94, 0x38,
	0x75, 0x4e, 0x2b, 0x89, 0xb4, 0x15, 0xc7, 0xa7, 0x39, 0x27, 0x0d, 0x44, 0x42, 0x12, 0x1b, 0xf0,
	0xc5, 0x00, 0x65, 0xd9, 0x49, 0x9d, 0xed, 0x12, 0x5c, 0x92, 0x1b, 0x81, 0x58, 0x18, 0x0b, 0x5a,
	0x52, 0xa6, 0xed, 0xcc, 0x99, 0x5e, 0xb5, 0x33, 0xbd, 0xe9, 0x4c, 0x67, 0xda, 0x7e, 0x21, 0x5d,
	0x75, 0xa6, 0x57, 0xfd, 0x08, 0x6d, 0x3f, 0x83, 0xaf, 0x3a, 0xbb, 0x00, 0x08, 0xf0, 0x45, 0x01,
	0x75, 0xe4, 0x3b, 0x79, 0x77, 0xff, 0xbf, 0xe7, 0xd9, 0xdd, 0x67, 0x5f, 0x9e, 0x05, 0x0d, 0xbe,
	0x39, 0xc3, 0x6e, 0x8b, 0x9c, 0x6e, 0xdb, 0x0e, 0xeb, 0xb7, 0xb6, 0x7b, 0xad, 0xe6, 0xb6, 0xc7,
	0x78, 0xd0, 0xf1, 0x09, 0x7f, 0xeb, 0x6c, 0xbf, 0x2b, 0x6c, 0xdb, 0xcc, 0x6d, 0xd3, 0x4e, 0xaa,
	0xb0, 0x90, 0x47, 0x05, 0x7b, 0xcb, 0xf3, 0x59, 0xc0, 0xe0, 0xa3, 0x50, 0xbc, 0x25, 0xc5, 0x5b,
	0xbd, 0x56, 0x73, 0x2b, 0x69, 0xb7, 0xf5, 0xae, 0xb0, 0x15, 0x8a, 0xd7, 0xef, 0x77, 0x18, 0xeb,
	0x38, 0x64, 0x5b, 0x8a, 0x9a, 0xfd, 0xf6, 0xf6, 0x89, 0x8f, 0x3d, 0x8f, 0xf8, 0x3c, 0xc4, 0xac,
	0xdf, 0x1b, 0xf2, 0xe1, 0x1d, 0x76, 0x68, 0x0b, 0x07, 0x94, 0xb9, 0x61, 0xf5, 0xc6, 0xff, 0xfe,
	0x04, 0x56, 0xea, 0x03, 0x6e, 0x51, 0x32, 0x85, 0x17, 0x45, 0x58, 0x02, 0x0b, 0x3d, 0x7c, 0x8a,
	0x6c, 0xe6, 0xba, 0xc4, 0x16, 0x0a, 0xae, 0xe6, 0x1e, 0xe6, 0x1e, 0xcf, 0x3e, 0xb9, 0xb3, 0x15,
	0x9a, 0xdc, 0x8a, 0x4d, 0x6e, 0x95, 0xdd, 0xe0, 0xd9, 0xce, 0x4b, 0xec, 0xf4, 0x89, 0x39, 0xdf,
	0xc3, 0xa7, 0xc5, 0x44, 0x02, 0x77, 0xc1, 0x3c, 0xef, 0x62, 0x9f, 0xb4, 0x50, 0xb3, 0xdf, 0x6e,
	0x13, 0x9f, 0xab, 0x33, 0xd9, 0x90, 0xb9, 0x50, 0xb2, 0x1b, 0x2a, 0xe0, 0xb7, 0xe0, 0x56, 0x40,
	0x7a, 0xde, 0x80, 0x70, 0x2d, 0x9b, 0x30, 0x2b, 0x04, 0xb1, 0xfe, 0x08, 0xac, 0x89, 0x9e, 0x78,
	0x3e, 0xf1, 0xa4, 0x27, 0x81, 0x8f, 0x5d, 0x8e, 0xa3, 0x3e, 0x5d, 0xcf, 0x86, 0xdd, 0xee, 0xe1,
	0xd3, 0x7a, 0x24, 0x6e, 0xa4, 0xb4, 0xf0, 0x19, 0xb8, 0x71, 0xc2, 0xfc, 0x63, 0xd4, 0x23, 0x3d,
	0xf5, 0xa3, 0x6c, 0xce, 0x27, 0xa2, 0x71, 0x85, 0xf4, 0x60, 0x05, 0x2c, 0xf7, 0x30, 0x75, 0x03,
	0xe2, 0x62, 0xd7, 0x26, 0x68, 0xc0, 0xf8, 0x38, 0x9b, 0x01, 0x53, 0xc2, 0xa3, 0x08, 0x67, 0x81,
	0xdb, 0x3e, 0xf1, 0x1c, 0x6c, 0x93, 0x1e, 0x71, 0x03, 0xc4, 0x99, 0x1f, 0xa0, 0xa0, 0xef, 0x39,
	0x84, 0xab, 0x9f, 0x64, 0x13, 0x57, 0x52, 0x5a, 0x8b, 0xf9, 0x41, 0x43, 0x2a, 0xe1, 0xf7, 0x60,
	0x09, 0xf7, 0x03, 0xf6, 0x0e, 0xdb, 0xfd, 0x7e, 0x2f, 0x71, 0xf1, 0x46, 0x36, 0x70, 0x31, 0xd1,
	0xc5, 0x1e, 0x16, 0xc1, 0x82, 0x9c, 0xc1, 0x36, 0x75, 0x08, 0x72, 0x68, 0x8f, 0x06, 0xea, 0xcd,
	0x29, 0xc2, 0x40, 0x68, 0xf6, 0xa8, 0x43, 0x0c, 0xa1, 0x80, 0xfb, 0x60, 0x31, 0xf2, 0xc6, 0x66,
	0x3c, 0x40, 0x2d, 0xe2, 0xe0, 0x33, 0x15, 0x64, 0x63, 0x16, 0x42, 0x55, 0x91, 0xf1, 0xa0, 0x24,
	0x34, 0xd0, 0x00, 0xcb, 0x69, 0x90, 0x87, 0x3b, 0x04, 0x75, 0x69, 0xa0, 0xce, 0x4e, 0xd1, 0xb7,
	0x84, 0x55, 0xc7, 0x1d, 0x72, 0x40, 0x03, 0x58, 0x05, 0x2b, 0x63, 0xb4, 0x1e, 0xe5, 0x5c, 0xbd,
	0x35, 0xc5, 0x6c, 0x0e, 0xe3, 0x2a, 0x94, 0x73, 0x58, 0x07, 0xab, 0x63, 0xbc, 0x16, 0xf5, 0x83,
	0x33, 0x75, 0x2e, 0x1b, 0xb8, 0x34, 0x0c, 0x2c, 0x09, 0xdd, 0xe8, 0xc0, 0x85, 0xe3, 0x3f, 0x7f,
	0xa9, 0x81, 0x0b, 0x67, 0xa0, 0x0e, 0xe6, 0x9b, 0x9d, 0x13, 0x9f, 0x06, 0xc4, 0x8f, 0x86, 0x7f,
	0x21, 0x93, 0xb2, 0x7b, 0xeb, 0xfd, 0x79, 0xe1, 0x46, 0x21, 0xbf, 0x59, 0xc8, 0xe7, 0xf3, 0x79,
	0x73, 0x2e, 0x06, 0x84, 0x53, 0x51, 0x03, 0x2b, 0x03, 0xa2, 0xe3, 0xf7, 0x51, 0x0f, 0x9f, 0x8a,
	0x0e, 0x73, 0x55, 0x99, 0xa2, 0xaf, 0xb1, 0xd2, 0xf0, 0xfb, 0x95, 0x48, 0x07, 0x1b, 0xe0, 0xf6,
	0x30, 0xb0, 0xef, 0x04, 0xd4, 0x73, 0x28, 0xf1, 0xd5, 0x45, 0x89, 0xbc, 0x3b, 0x86, 0x2c, 0xb1,
	0x7e, 0xd3, 0x21, 0xd1, 0x62, 0x48, 0x33, 0x07, 0x52, 0xf8, 0x1a, 0x2c, 0x0f, 0xa8, 0x6d, 0xa7,
	0xcf, 0xbb, 0x08, 0xb7, 0x03, 0xe2, 0xab, 0x30, 0xbb, 0xfb, 0xe0, 0xfd, 0x79, 0xe1, 0xe3, 0xfc,
	0xe6, 0x93, 0xfc, 0xce, 0x73, 0x13, 0xc6, 0x90, 0x3d, 0xc1, 0xd0, 0x04, 0x02, 0x1e, 0x81, 0xa5,
	0x26, 0xb6, 0x8f, 0x89, 0xdb, 0x1a, 0x22, 0x2f, 0x5d, 0x8e, 0xbc, 0x18, 0x31, 0x52, 0xe0, 0x26,
	0x58, 0x65, 0x4e, 0x0b, 0x71, 0x17, 0x7b, 0xbc, 0xcb, 0x02, 0x14, 0x74, 0x7d, 0xc2, 0xbb, 0xcc,
	0x69, 0xa9, 0xcb, 0xd9, 0xec, 0x85, 0xf7, 0xe7, 0x85, 0xd9, 0xcd, 0xc2, 0xe6, 0xf3, 0x67, 0x3b,
	0x79, 0x39, 0x6f, 0xcb, 0xcc, 0x69, 0x59, 0x11, 0xaa, 0x11, 0x93, 0x60, 0x13, 0xdc, 0x3c, 0xc1,
	0x0e, 0x72, 0xc8, 0x3b, 0xe2, 0xa8, 0x2b, 0x0f, 0x73, 0x8f, 0xe7, 0x9f, 0xe8, 0x5b, 0x53, 0x9d,
	0x5b, 0x5b, 0x13, 0x0f, 0x9d, 0xad, 0x23, 0xec, 0x18, 0x02, 0x66, 0xde, 0x38, 0x89, 0xfe, 0x82,
	0x7f, 0x07, 0x20, 0x3f, 0x73, 0xed, 0xae, 0xcf, 0x5c, 0xd6, 0xe7, 0xc8, 0x66, 0x3d, 0x11, 0xbe,
	0xab, 0xd2, 0x58, 0xf5, 0x4a, 0xc6, 0xac, 0x04, 0x5b, 0x94, 0x54, 0x73, 0x91, 0x8f, 0x16, 0xc1,
	0x9f, 0x00, 0xb4, 0xbb, 0xc4, 0x3e, 0xf6, 0x18, 0x75, 0x03, 0x14, 0xd0, 0x1e, 0x61, 0xfd, 0x40,
	0xbd, 0x9d, 0x3d, 0x84, 0xf0, 0xfd, 0x79, 0x61, 0xfe, 0xa9, 0x18, 0xbc, 0x64, 0x14, 0x17, 0x13,
	0x54, 0x23, 0x24, 0xc1, 0x9f, 0xc0, 0xdd, 0x14, 0xdf, 0x66, 0x3d, 0xcf, 0x21, 0xe2, 0x74, 0x41,
	0x01, 0xf6, 0x3b, 0x24, 0x50, 0xd5, 0x29, 0xa2, 0x76, 0x3d, 0x21, 0x14, 0x07, 0x80, 0x86, 0xd4,
	0xc3, 0x37, 0x60, 0x35, 0xc5, 0x4f, 0x87, 0xd8, 0xda, 0xe5, 0x42, 0x6c, 0x39, 0xc1, 0xa4, 0xa2,
	0xec, 0xf7, 0xe0, 0x96, 0x38, 0x5b, 0x45, 0x14, 0x70, 0xfa, 0x0b, 0x51, 0xd7, 0xb3, 0xd7, 0x2d,
	0xe8, 0xe1, 0xd3, 0x23, 0xec, 0x58, 0xf4, 0x17, 0x22, 0xe5, 0xd4, 0x4d, 0xe4, 0x77, 0xa6, 0x91,
	0x53, 0x37, 0x96, 0xff, 0x00, 0xee, 0x08, 0xeb, 0x3c, 0xc0, 0x6e, 0xab, 0x79, 0x86, 0x78, 0xe0,
	0x13, 0xdc, 0xa3, 0x6e, 0x27, 0xda, 0x9d, 0xee, 0x66, 0xd3, 0xd4, 0x1e, 0x3e, 0xb5, 0x42, 0xb9,
	0x15, 0xab, 0xc3, 0xad, 0xe9, 0x08, 0xac, 0xb5, 0x48, 0x1b, 0xf7, 0x9d, 0x40, 0xf0, 0x03, 0xca,
	0x03, 0x6a, 0xf3, 0x78, 0x56, 0xee, 0x4d, 0x71, 0x6b, 0x88, 0xd4, 0xd6, 0x40, 0x1c, 0xcd, 0xc8,
	0x3f, 0xe4, 0xc0, 0xb2, 0xcd, 0x5c, 0x1e, 0xf8, 0xe2, 0x28, 0x47, 0xe4, 0xd4, 0x76, 0xfa, 0x9c,
	0x32, 0x57, 0xbd, 0x2f, 0x63, 0xba, 0x7e, 0xa5, 0x98, 0x2e, 0x0e, 0xc0, 0x7a, 0xcc, 0x35, 0x97,
	0xec, 0xf1, 0x42, 0x58, 0x07, 0x2b, 0x76, 0xdf, 0xe7, 0xcc, 0x0f, 0xaf, 0x0a, 0xa8, 0xed, 0x87,
	0xb7, 0x1a, 0xf5, 0xc1, 0x14, 0x01, 0xb7, 0x14, 0x4a, 0xe5, 0x55, 0x61, 0x2f, 0x12, 0xc2, 0x37,
	0x60, 0xa9, 0xed, 0x33, 0x71, 0xc8, 0x38, 0x0e, 0xf6, 0x78, 0x7c, 0xd0, 0x3f, 0xcc, 0x0e, 0x33,
	0xe5, 0xfd, 0x79, 0xe1, 0x56, 0x61, 0xf3, 0x49, 0x61, 0xe7, 0xeb, 0x9d, 0xe7, 0x4f, 0x9f, 0xed,
	0x7c, 0x6d, 0x2e, 0x0a, 0x52, 0x31, 0x02, 0x85, 0x87, 0xcf, 0x1b, 0xb0, 0xf4, 0x33, 0xa3, 0xee,
	0x28, 0xfe, 0xd3, 0x3f, 0x0a, 0x2f, 0x48, 0xc3, 0xf8, 0xbf, 0x07, 0x4b, 0x6d, 0xe6, 0xdb, 0x04,
	0x79, 0xd8, 0xc7, 0x8e, 0x43, 0x1c, 0xd4, 0x63, 0x2d, 0xa2, 0x6e, 0x7c, 0x80, 0x7d, 0x66, 0x4f,
	0x70, 0xeb, 0x11, 0xb6, 0xc2, 0x5a, 0xc4, 0x5c, 0x6c, 0x8f, 0x16, 0xc1, 0x3e, 0x58, 0xb2, 0x1d,
	0x2a, 0xee, 0x6f, 0x62, 0x41, 0xf4, 0x08, 0xe7, 0xf2, 0x1c, 0xfc, 0xec, 0x03, 0x6c, 0xaa, 0x06,
	0xeb, 0x84, 0x9b, 0xea, 0x62, 0x68, 0xa1, 0x42, 0xdd, 0x4a, 0xc4, 0x87, 0x0c, 0x28, 0x0e, 0xeb,
	0x0c, 0xdb, 0xfc, 0xfc, 0x43, 0xda, 0x9c, 0x77, 0x58, 0x27, 0x6d, 0xf0, 0x6f, 0xc1, 0xed, 0xd8,
	0x20, 0xf1, 0x7d, 0xe6, 0xcb, 0xc5, 0x25, 0x2f, 0x9f, 0xea, 0xa3, 0x0f, 0x69, 0x77, 0x39, 0xb4,
	0xab, 0x0b, 0x1b, 0x56, 0x6c, 0x02, 0xbe, 0x02, 0xeb, 0xb1, 0xf5, 0x56, 0xdf, 0x97, 0x89, 0x50,
	0xca, 0x81, 0x2f, 0xa6, 0x58, 0xd5, 0x21, 0xb6, 0x14, 0x89, 0x13, 0x72, 0x11, 0x2c, 0x08, 0x72,
	0xb2, 0x49, 0x72, 0xf5, 0x4f, 0x25, 0x6e, 0x7d, 0x0c, 0xb7, 0xcb, 0x98, 0x13, 0x65, 0x4b, 0x0e,
	0xeb, 0x14, 0x13, 0xc5, 0x00, 0x92, 0xca, 0xb9, 0x1e, 0x4f, 0x07, 0x49, 0xa5, 0x5c, 0x65, 0x00,
	0x05, 0xa4, 0x45, 0x79, 0x9a, 0xf3, 0x65, 0x26, 0x67, 0xd1, 0x61, 0x9d, 0xd2, 0x90, 0x48, 0x6c,
	0xcf, 0x12, 0x15, 0xf5, 0x56, 0xfd, 0x4d, 0x26, 0x64, 0x56, 0x40, 0xa2, 0xe6, 0x62, 0x4d, 0x09,
	0x79, 0x38, 0xcf, 0xef, 0x88, 0xdf, 0x64, 0x9c, 0x06, 0x67, 0xea, 0x9f, 0x7d, 0x80, 0x35, 0x65,
	0xb0, 0x8e, 0x9c, 0xda, 0x97, 0x31, 0x55, 0xba, 0x3f, 0x5c, 0x04, 0xbf, 0x03, 0x62, 0x6c, 0x90,
	0xc3, 0xec, 0x63, 0x74, 0x82, 0x69, 0xc0, 0xd5, 0x3f, 0xcf, 0xec, 0x80, 0xe8, 0xb0, 0xc1, 0xec,
	0xe3, 0x23, 0xd1, 0x1e, 0xba, 0x60, 0x4e, 0x10, 0x92, 0x10, 0xd9, 0x94, 0xbe, 0x97, 0xaf, 0xea,
	0xfb, 0x20, 0x6e, 0xa4, 0xbd, 0x24, 0x8a, 0xb4, 0xd0, 0xe3, 0x41, 0xb2, 0xc4, 0xd5, 0xad, 0xec,
	0x98, 0x14, 0x88, 0x46, 0x94, 0x2a, 0x71, 0xf8, 0x00, 0xcc, 0x72, 0x82, 0x7d, 0xbb, 0x8b, 0x3c,
	0x1c, 0x74, 0xd5, 0xed, 0x87, 0xb9, 0xc7, 0x37, 0x4d, 0x10, 0x16, 0xd5, 0x71, 0xd0, 0x15, 0x93,
	0xea, 0xb3, 0x13, 0xc4, 0x89, 0xdd, 0xf7, 0xc5, 0x74, 0xe4, 0xb3, 0x27, 0xd5, 0x67, 0x27, 0x56,
	0xd4, 0x1c, 0xfe, 0x6b, 0x0e, 0xdc, 0x8b, 0x0f, 0xc6, 0x54, 0x26, 0x8d, 0x28, 0x67, 0x4e, 0x18,
	0x25, 0x05, 0x39, 0x46, 0x2f, 0xae, 0x34, 0x46, 0xa9, 0x3c, 0xbb, 0x1c, 0x83, 0xcd, 0x3b, 0x91,
	0xdd, 0x49, 0x95, 0xf0, 0x00, 0x2c, 0x0e, 0xa6, 0x69, 0x70, 0x4f, 0x7b, 0x92, 0x3d, 0x7a, 0xca,
	0x40, 0x15, 0x5f, 0xc9, 0xbe, 0x15, 0x51, 0x6f, 0x1f, 0x0f, 0x20, 0x4f, 0xa7, 0x78, 0x6f, 0x10,
	0x82, 0x58, 0x4f, 0xc1, 0x67, 0xb4, 0xe5, 0x10, 0x44, 0xdd, 0xa1, 0x01, 0xe2, 0x84, 0x73, 0x79,
	0xb1, 0x8b, 0xb0, 0x3b, 0xd9, 0xd8, 0x07, 0x82, 0x53, 0x76, 0x53, 0xfd, 0xb5, 0x42, 0x48, 0x6c,
	0xea, 0x18, 0xdc, 0x6a, 0x9e, 0x05, 0x04, 0x23, 0xd6, 0x0f, 0xbc, 0x7e, 0xa0, 0x7e, 0x25, 0x87,
	0xfe, 0xe0, 0x4a, 0x43, 0xbf, 0x2b, 0x80, 0x35, 0xc9, 0x33, 0x67, 0x9b, 0xc9, 0x3f, 0x60, 0x0b,
	0xdc, 0x3c, 0xed, 0x39, 0x4d, 0xea, 0x62, 0xff, 0x4c, 0x7d, 0x26, 0x2d, 0xed, 0x5d, 0xc9, 0xd2,
	0xab, 0x9e, 0xb3, 0x2b, 0x69, 0x66, 0x02, 0x8e, 0xac, 0x30, 0x4f, 0x86, 0xd2, 0xd7, 0x1f, 0xc6,
	0x4a, 0x4d, 0xd2, 0xcc, 0x04, 0x2c, 0xb2, 0xec, 0x0e, 0x75, 0x91, 0x47, 0xdc, 0x96, 0xb8, 0x2f,
	0x3a, 0x74, 0x90, 0x18, 0x3f, 0x9f, 0x22, 0xf3, 0xec, 0x50, 0xb7, 0x1e, 0x2a, 0x0d, 0x1a, 0x27,
	0xc7, 0x7b, 0x40, 0x69, 0x11, 0xdc, 0x1a, 0x8a, 0x9c, 0xdf, 0x4e, 0x91, 0x64, 0xc7, 0xa2, 0x78,
	0x4a, 0x5f, 0x86, 0xaf, 0x55, 0xa2, 0x88, 0x23, 0x8f, 0xf8, 0xe9, 0x18, 0x52, 0xff, 0x22, 0x1b,
	0xb8, 0xda, 0xc3, 0xa7, 0x62, 0x03, 0xe3, 0x75, 0xe2, 0xa7, 0x02, 0x07, 0x22, 0x70, 0x3f, 0x7a,
	0x05, 0x6b, 0x5d, 0x00, 0xff, 0x26, 0x1b, 0xbe, 0x1e, 0x3e, 0x85, 0xb5, 0x26, 0x19, 0xf8, 0x06,
	0xcc, 0x62, 0xdf, 0xc7, 0x67, 0xc8, 0xed, 0x3b, 0x0e, 0x57, 0x7f, 0x97, 0xb9, 0xad, 0x00, 0xd9,
	0xbc, 0x2a, 0x5a, 0xc3, 0x00, 0x2c, 0x88, 0x14, 0x96, 0x3b, 0x98, 0x77, 0xd1, 0xdb, 0x3e, 0x0b,
	0x88, 0xfa, 0x7b, 0x39, 0xf7, 0xdf, 0x5f, 0x2d, 0x96, 0x63, 0xe6, 0x0b, 0x81, 0x34, 0xe7, 0x9b,
	0x43, 0xff, 0x86, 0x7b, 0x60, 0x31, 0xde, 0xca, 0x4e, 0x68, 0xd0, 0x45, 0x8c, 0xb6, 0xb8, 0xfa,
	0x6d, 0xa6, 0xe3, 0x0b, 0x91, 0xe8, 0x88, 0x06, 0xdd, 0x1a, 0x6d, 0x71, 0x58, 0x05, 0x2b, 0x84,
	0xdb, 0xd8, 0x23, 0x22, 0x05, 0x11, 0xf1, 0x74, 0x82, 0x7d, 0x97, 0xba, 0x1d, 0xf5, 0x2f, 0x33,
	0x59, 0x4b, 0xa1, 0xd0, 0x92, 0xba, 0xa3, 0x50, 0x06, 0x0d, 0xb0, 0xec, 0x30, 0x99, 0x0c, 0xe2,
	0x00, 0x79, 0x3e, 0x7d, 0x47, 0x1d, 0x22, 0x6e, 0x66, 0xdf, 0x65, 0xe2, 0xa0, 0xc3, 0x8a, 0x52,
	0x56, 0x1f, 0xa8, 0x44, 0x96, 0xc4, 0x3c, 0xe2, 0xe3, 0x80, 0xf9, 0x62, 0xfa, 0x6d, 0xd2, 0x22,
	0xf2, 0xd9, 0x31, 0xf2, 0x51, 0xcb, 0x84, 0xae, 0xc5, 0xf2, 0xfa, 0x40, 0x1d, 0x7b, 0x5a, 0x05,
	0x2b, 0x72, 0xb6, 0x10, 0x76, 0x1c, 0x44, 0x5b, 0xc4, 0x0d, 0x68, 0x9b, 0x12, 0x9f, 0xab, 0xbb,
	0xd9, 0x3d, 0x97, 0x42, 0xcd, 0x71, 0xca, 0x89, 0x4c, 0xf8, 0x2a, 0xb3, 0x39, 0xec, 0xb7, 0xc4,
	0x35, 0xa8, 0xcd, 0x7c, 0x99, 0xcf, 0x85, 0xc3, 0xca, 0xd5, 0x62, 0xb6, 0xaf, 0xb1, 0xbc, 0x38,
	0x50, 0x87, 0x63, 0xcb, 0x61, 0x05, 0x2c, 0xc7, 0xf9, 0x3d, 0xfd, 0x85, 0x20, 0x4e, 0xde, 0x72,
	0x1b, 0xbb, 0x5c, 0x2d, 0x65, 0xbb, 0x9a, 0xd2, 0x59, 0x91, 0x4c, 0x74, 0x5d, 0xae, 0x1e, 0x61,
	0x45, 0xc6, 0x3c, 0x22, 0x6f, 0xfb, 0xd8, 0xe1, 0xaa, 0x9e, 0xcd, 0x1b, 0x08, 0x45, 0xf4, 0xeb,
	0x52, 0x06, 0xbf, 0x05, 0x73, 0xe4, 0x94, 0x06, 0x88, 0x45, 0x37, 0x63, 0x75, 0x2f, 0xfb, 0x60,
	0x16, 0x82, 0x5a, 0x78, 0xc9, 0x85, 0xdf, 0x81, 0x39, 0x4e, 0xde, 0x86, 0x0f, 0x86, 0x36, 0xe3,
	0x81, 0xba, 0x3f, 0x45, 0x26, 0x37, 0xcb, 0xc9, 0xdb, 0x3a, 0xee, 0x90, 0x22, 0xe3, 0x72, 0x0b,
	0xf3, 0xb1, 0xdb, 0x62, 0xbd, 0x14, 0xe4, 0x60, 0x0a, 0xc8, 0x7c, 0xa8, 0x1a, 0x70, 0x7e, 0x04,
	0xab, 0xa9, 0xb7, 0x63, 0xf9, 0x3e, 0xc0, 0xfc, 0x63, 0x11, 0x15, 0xe5, 0xec, 0x6c, 0xed, 0xc6,
	0xfb, 0xf3, 0xc2, 0xf5, 0xc2, 0xe6, 0xd3, 0x27, 0xe6, 0x72, 0x02, 0xa9, 0xe0, 0xd3, 0xa3, 0x10,
	0x01, 0xbb, 0xe0, 0x6e, 0x0a, 0x3e, 0xfe, 0x22, 0xfc, 0x57, 0x53, 0x3e, 0x6b, 0x6c, 0x16, 0x36,
	0x0b, 0xf9, 0xbc, 0xb9, 0x96, 0xc0, 0x5e, 0x8e, 0xbc, 0x13, 0xff, 0x7c, 0xa1, 0xa5, 0xf0, 0xa4,
	0xf8, 0x7e, 0xca, 0xc7, 0xcf, 0xd0, 0xd2, 0x45, 0xb6, 0xe2, 0xec, 0x16, 0xa6, 0x6c, 0xb9, 0xd8,
	0x13, 0x47, 0x88, 0x6a, 0x64, 0x5b, 0x58, 0x7c, 0x7f, 0x5e, 0x98, 0x2b, 0x0c, 0xbf, 0x32, 0x25,
	0xa4, 0x6a, 0x08, 0x82, 0xaf, 0xc0, 0x82, 0xb8, 0xff, 0xd1, 0x77, 0x64, 0x70, 0x36, 0x55, 0xa6,
	0x7c, 0xc2, 0x2a, 0x0c, 0x3f, 0x61, 0xcd, 0x47, 0x9c, 0xf8, 0xb8, 0x6a, 0x83, 0xb5, 0xc0, 0xc7,
	0xf6, 0x31, 0x12, 0xa7, 0xc0, 0x3b, 0x1a, 0x9c, 0xa1, 0xb7, 0x7d, 0xe2, 0x9f, 0x85, 0xcf, 0x39,
	0xd5, 0x6c, 0x1b, 0xf3, 0xef, 0xcf, 0x0b, 0xa0, 0x90, 0xcf, 0x6f, 0x16, 0xf2, 0x4f, 0x76, 0xf2,
	0x79, 0x73, 0x55, 0xd2, 0xb4, 0x08, 0xf6, 0x42, 0xb0, 0xe4, 0x53, 0xcf, 0x3e, 0x58, 0x24, 0x2e,
	0x6e, 0x3a, 0x04, 0x35, 0x69, 0xd0, 0xc3, 0x9e, 0x58, 0x83, 0x6a, 0x3d, 0x73, 0x85, 0x28, 0xa1,
	0x68, 0x77, 0xa0, 0x11, 0x57, 0xec, 0x08, 0xd4, 0xc5, 0xbc, 0x8b, 0x3b, 0x1d, 0xf5, 0x45, 0x26,
	0x65, 0x2e, 0x54, 0x1c, 0x84, 0x02, 0x91, 0xa6, 0xa5, 0x10, 0x3f, 0x33, 0xea, 0xaa, 0x66, 0x76,
	0x9a, 0x96, 0x30, 0x84, 0x02, 0xea, 0x20, 0xf2, 0x0d, 0x51, 0x71, 0xbe, 0xc9, 0xfe, 0x58, 0xd9,
	0x47, 0x4f, 0xa8, 0x29, 0xc7, 0x12, 0xb1, 0xa9, 0xa5, 0x31, 0xcc, 0x75, 0xce, 0x24, 0xaa, 0x31,
	0xc5, 0xc9, 0x93, 0xa0, 0x62, 0x59, 0xaa, 0x6b, 0x3d, 0x1c, 0x10, 0x9f, 0x62, 0x47, 0x3d, 0x9c,
	0xb6, 0x6b, 0x95, 0x48, 0x91, 0xea, 0x5a, 0x8f, 0xf8, 0x1d, 0x22, 0x07, 0xe8, 0xe5, 0xb4, 0x5d,
	0xab, 0xc4, 0x92, 0x94, 0x2f, 0x2e, 0xe1, 0x81, 0xc3, 0x98, 0xa7, 0x1e, 0x4d, 0xeb, 0x4b, 0x35,
	0x52, 0xa4, 0xa6, 0x3b, 0xda, 0xef, 0xd5, 0x57, 0xd3, 0x4e, 0x77, 0xb4, 0xd3, 0x8b, 0x8b, 0x4d,
	0x8c, 0x60, 0x7e, 0xa0, 0xbe, 0xce, 0xbe, 0xd8, 0x44, 0x7a, 0xe6, 0x07, 0x29, 0xfb, 0x01, 0x6d,
	0x49, 0xfb, 0x3f, 0x4c, 0x6b, 0xbf, 0x11, 0x0a, 0xe0, 0x6b, 0xb0, 0x9c, 0xec, 0xa1, 0xc8, 0xf3,
	0x99, 0x4d, 0x38, 0x27, 0x5c, 0xfd, 0x71, 0xea, 0x07, 0x5c, 0xb1, 0xb6, 0x4c, 0xd8, 0x8b, 0x37,
	0xd1, 0x7a, 0x8c, 0x88, 0xd1, 0x83, 0x37, 0xaf, 0x78, 0x9f, 0xfe, 0xeb, 0xcb, 0xa3, 0xe3, 0xd7,
	0xac, 0x78, 0x9f, 0xee, 0x81, 0x07, 0x93, 0xd0, 0xf2, 0xd6, 0xd9, 0xc1, 0x41, 0x97, 0xf8, 0xea,
	0x9b, 0xcb, 0x59, 0xb9, 0x33, 0x6e, 0xa5, 0x4e, 0xfc, 0x7d, 0xc9, 0x82, 0x2e, 0xb8, 0x3f, 0xbe,
	0x59, 0x73, 0x1b, 0x3b, 0x04, 0xb5, 0xb1, 0x1d, 0x30, 0x5f, 0xfd, 0x29, 0xfb, 0x24, 0xdb, 0x9d,
	0x7d, 0x7f, 0x5e, 0xf8, 0x24, 0xbf, 0x95, 0xdf, 0x2c, 0x6c, 0xe5, 0xcd, 0x3b, 0xa3, 0xdb, 0xb5,
	0x25, 0x70, 0x7b, 0x92, 0x06, 0x3d, 0xf0, 0x20, 0x65, 0x0f, 0xbb, 0xd8, 0x39, 0x13, 0x77, 0x8a,
	0xb4, 0x41, 0x74, 0x59, 0x83, 0xa9, 0xe3, 0x46, 0x0b, 0x81, 0x69, 0x8b, 0x6f, 0x26, 0xe7, 0xdd,
	0x3e, 0xc1, 0x2d, 0x24, 0xd6, 0xaf, 0xfa, 0x37, 0x99, 0x81, 0xb5, 0x3e, 0x9e, 0x40, 0x9b, 0x04,
	0xb7, 0x6a, 0xae, 0x73, 0x06, 0xd7, 0xc1, 0x0d, 0x71, 0x34, 0xfc, 0xc2, 0x5c, 0xa2, 0x62, 0xf9,
	0x68, 0x30, 0xf8, 0x37, 0xc4, 0x40, 0x25, 0xed, 0x36, 0x11, 0x9b, 0x32, 0x41, 0x54, 0xdc, 0x4c,
	0x5d, 0xbb, 0xef, 0xfb, 0xc4, 0xb5, 0xcf, 0xd4, 0xe6, 0x25, 0x26, 0x51, 0xec, 0xef, 0x03, 0x50,
	0x99, 0x15, 0x13, 0x0c, 0xc4, 0x60, 0x39, 0x31, 0x61, 0x63, 0xbb, 0x4b, 0xc2, 0x23, 0xc4, 0x9e,
	0xf2, 0x98, 0xca, 0x6f, 0x7e, 0xb5, 0xf3, 0xdb, 0xaf, 0xbf, 0xfa, 0xea, 0x79, 0xe1, 0xe9, 0xf3,
	0xe7, 0xcf, 0x4d, 0x38, 0x80, 0x15, 0x05, 0x4b, 0x1e, 0x21, 0xff, 0x9c, 0x03, 0x6a, 0xf4, 0x63,
	0x04, 0xcf, 0x27, 0x0e, 0xc3, 0x2d, 0xe4, 0xd0, 0xa6, 0x8f, 0x7d, 0x4a, 0xb8, 0xda, 0x7a, 0x78,
	0xed, 0xf1, 0xfc, 0x13, 0xeb, 0x6a, 0x1f, 0x94, 0x24, 0xbc, 0x1e, 0xb2, 0x8d, 0x18, 0x6d, 0xae,
	0xf2, 0x89, 0xe5, 0xd0, 0x03, 0xf7, 0xc4, 0x84, 0x23, 0x72, 0xea, 0x39, 0x98, 0xba, 0x68, 0xf4,
	0x65, 0x52, 0x25, 0x53, 0x1e, 0xff, 0x9b, 0x43, 0x8f, 0xdb, 0xf2, 0x96, 0xa1, 0x87, 0x4c, 0x63,
	0xe8, 0xb5, 0x12, 0x5a, 0x40, 0x1d, 0xb3, 0x18, 0x85, 0xae, 0xda, 0xce, 0x8c, 0x9e, 0x95, 0x61,
	0x70, 0x14, 0xa2, 0x13, 0xa1, 0xf1, 0x4f, 0x35, 0x3a, 0x97, 0x85, 0xc6, 0xbf, 0xd9, 0x78, 0x01,
	0x6e, 0x8f, 0x41, 0x03, 0x2a, 0x6e, 0xf3, 0x6a, 0x37, 0x93, 0xb9, 0x3c, 0xcc, 0x6c, 0x48, 0x1d,
	0x3c, 0x04, 0x6b, 0xe3, 0x48, 0x9f, 0x76, 0x3a, 0xc2, 0x51, 0x9a, 0x09, 0x5d, 0x1d, 0x81, 0x46,
	0xca, 0x89, 0xdd, 0x0f, 0xdf, 0x3a, 0x89, 0xfa, 0xf3, 0x65, 0xbb, 0x1f, 0xbe, 0x5d, 0x12, 0xd8,
	0x06, 0x1b, 0x63, 0x50, 0x71, 0x08, 0x92, 0x56, 0xf2, 0x16, 0xc9, 0xd5, 0xe3, 0x4c, 0xfc, 0xfd,
	0x61, 0x7c, 0x55, 0x22, 0x06, 0xcf, 0x8d, 0x1c, 0x36, 0x47, 0x9c, 0xe7, 0xb8, 0xe7, 0x39, 0x04,
	0xf9, 0x38, 0x20, 0xaa, 0x73, 0xd9, 0xed, 0x2b, 0xdd, 0x17, 0x4b, 0x82, 0x4c, 0x1c, 0x10, 0x68,
	0x02, 0xd5, 0xeb, 0xa0, 0x2e, 0x75, 0x03, 0xe4, 0x39, 0xd8, 0x45, 0xf1, 0xd5, 0x89, 0xba, 0x81,
	0xda, 0xcb, 0x9e, 0x4b, 0xaf, 0x73, 0x40, 0xdd, 0xa0, 0xee, 0x60, 0x57, 0x0f, 0x2f, 0x50, 0xd4,
	0x15, 0xd7, 0xe5, 0xfb, 0x17, 0x31, 0x51, 0x20, 0xfe, 0x54, 0xdd, 0xec, 0x4c, 0x71, 0x12, 0xb9,
	0x21, 0xfe, 0x80, 0xff, 0x98, 0x1b, 0xf1, 0xb9, 0x45, 0x9a, 0xfd, 0x8e, 0xc8, 0xc4, 0xdd, 0x40,
	0x65, 0x1f, 0xe0, 0x79, 0xb3, 0x3e, 0x30, 0x5d, 0x12, 0xe4, 0xba, 0x00, 0xa7, 0xbb, 0x9a, 0x94,
	0xc2, 0x3f, 0xe4, 0xc0, 0xfa, 0x90, 0x2f, 0xd1, 0x77, 0x9a, 0xe8, 0xab, 0xbb, 0xf7, 0x21, 0x3f,
	0x9a, 0xac, 0x26, 0x1e, 0x44, 0x1f, 0x6c, 0xc2, 0x6f, 0xf0, 0x55, 0xb0, 0xc2, 0x5c, 0x87, 0xba,
	0x64, 0x70, 0xd0, 0x85, 0x03, 0xae, 0xbe, 0xcd, 0xbe, 0x65, 0x86, 0xc2, 0x68, 0xb3, 0x08, 0x07,
	0x5a, 0x2c, 0x45, 0xd1, 0x95, 0xa0, 0xef, 0x12, 0x1f, 0xb5, 0xe9, 0x29, 0x22, 0x3d, 0x2f, 0x38,
	0x8b, 0x66, 0xce, 0xcf, 0x5e, 0x8a, 0x03, 0xf1, 0x1e, 0x3d, 0xd5, 0x85, 0x54, 0x4e, 0xdb, 0x86,
	0x05, 0x6e, 0xc4, 0x3f, 0x20, 0x80, 0x6b, 0x60, 0xe5, 0x48, 0x33, 0x90, 0xa1, 0xbf, 0xd4, 0x0d,
	0x74, 0x58, 0xb5, 0xea, 0x7a, 0xb1, 0xbc, 0x57, 0xd6, 0x4b, 0xca, 0x9f, 0xc0, 0x15, 0xb0, 0x98,
	0x54, 0x99, 0x7a, 0xdd, 0x28, 0x17, 0x35, 0x25, 0x37, 0x5c, 0x6c, 0xd4, 0xf6, 0xcb, 0x45, 0xcd,
	0x50, 0x66, 0x36, 0xfe, 0x3b, 0x07, 0x16, 0xc7, 0x7e, 0x29, 0x00, 0x37, 0xc0, 0x7d, 0xeb, 0x75,
	0xb5, 0x78, 0x60, 0xd6, 0xaa, 0xb5, 0x43, 0x0b, 0x15, 0x6b, 0x95, 0x4a, 0xb9, 0x31, 0x62, 0x67,
	0x0d, 0xac, 0x4c, 0x68, 0x53, 0xab, 0x2a, 0x39, 0xb8, 0x0e, 0x56, 0x27, 0x55, 0xed, 0xed, 0x29,
	0x33, 0xf0, 0x2e, 0x50, 0x27, 0xd4, 0x19, 0x35, 0xe1, 0xce, 0x35, 0xf8, 0x19, 0x78, 0x30, 0xa1,
	0xd6, 0xd4, 0x2b, 0xb5, 0x86, 0x8e, 0x8e, 0xcc, 0x72, 0x43, 0x57, 0xae, 0xff, 0x7a, 0x23, 0xad,
	0x5e, 0x37, 0x5e, 0x2b, 0x1f, 0x6d, 0xfc, 0x47, 0x0e, 0x2c, 0x4d, 0xf8, 0x5c, 0x0c, 0x3f, 0x07,
	0x0f, 0x8b, 0xb5, 0xaa, 0xd5, 0x30, 0xb5, 0x72, 0xb5, 0x81, 0xf4, 0x57, 0x45, 0xe3, 0xd0, 0x2a,
	0xd7, 0xaa, 0x23, 0x9d, 0xbb, 0x03, 0x6e, 0x4f, 0x6c, 0x25, 0xbb, 0x77, 0x17, 0xa8, 0x93, 0x2b,
	0x65, 0x07, 0x37, 0xc0, 0xfd, 0x89, 0xb5, 0x75, 0xcd, 0x6c, 0x94, 0x1b, 0xe5, 0x5a, 0x55, 0xb9,
	0xb6, 0xf1, 0x2f, 0x39, 0xb0, 0x38, 0xf6, 0xdd, 0x54, 0xf4, 0x6b, 0xaf, 0x66, 0x16, 0x75, 0xd1,
	0x54, 0x33, 0x0c, 0xdd, 0x40, 0x95, 0x5a, 0x49, 0x1f, 0xf1, 0x6c, 0x1d, 0xac, 0x4e, 0x6a, 0x24,
	0x1d, 0xbb, 0x03, 0x6e, 0x4f, 0xac, 0x93, 0x7e, 0x3d, 0x00, 0x77, 0x26, 0x55, 0x9a, 0xfa, 0xbe,
	0xa9, 0x5b, 0x96, 0x70, 0x6a, 0x06, 0xdc, 0x88, 0xd7, 0x8a, 0x98, 0x5d, 0xa3, 0xb6, 0x3f, 0x31,
	0xc0, 0x96, 0x81, 0x92, 0x54, 0x95, 0xf4, 0xdd, 0xc3, 0xfd, 0xaf, 0x94, 0xdc, 0x84, 0xd2, 0x1d,
	0x65, 0x66, 0x42, 0xe9, 0x53, 0xe5, 0xda, 0x84, 0xd2, 0x27, 0xca, 0xf5, 0x09, 0xa5, 0x05, 0xe5,
	0x23, 0xb8, 0x08, 0xe6, 0x92, 0x52, 0xa3, 0xb6, 0xaf, 0x7c, 0x3c, 0xdc, 0xb0, 0x5a, 0x6b, 0x94,
	0x8b, 0xba, 0xf2, 0x89, 0x08, 0xf0, 0xa4, 0xf4, 0x48, 0x33, 0xab, 0xe5, 0xea, 0xbe, 0x72, 0x03,
	0x2e, 0x81, 0x85, 0xa4, 0x58, 0x37, 0xcd, 0x9a, 0xa9, 0xdc, 0x1c, 0x2e, 0xdc, 0xd3, 0x1a, 0x9a,
	0xa1, 0x80, 0xe1, 0xc2, 0xba, 0x56, 0x2d, 0x17, 0x95, 0xd9, 0x8d, 0x7f, 0xcf, 0x81, 0xc5, 0xb1,
	0xaf, 0x71, 0x62, 0xa6, 0x44, 0x53, 0x89, 0x43, 0x2f, 0x75, 0x73, 0xb7, 0x66, 0x95, 0x1b, 0xaf,
	0x47, 0xc6, 0xe9, 0x1e, 0x58, 0x9b, 0xd4, 0xa8, 0xa1, 0x9b, 0x96, 0xae, 0xe4, 0xc4, 0x7c, 0x4c,
	0xaa, 0x2e, 0xe9, 0x7b, 0xda, 0xa1, 0xd1, 0x08, 0x27, 0x6c, 0x52, 0x83, 0xf0, 0x2f, 0x5d, 0xb9,
	0xb6, 0xf1, 0x4f, 0x39, 0x70, 0x2b, 0xfd, 0xb5, 0x2d, 0xb6, 0x68, 0x35, 0xb4, 0x86, 0x5e, 0xd1,
	0xab, 0xa3, 0x2b, 0x76, 0x15, 0xc0, 0xe1, 0xea, 0x6a, 0xad, 0xaa, 0x87, 0x5b, 0xc3, 0x70, 0x79,
	0xa9, 0x64, 0x28, 0x33, 0xe3, 0xc5, 0x95, 0x5a, 0x49, 0xb9, 0x36, 0x5e, 0xac, 0x19, 0x86, 0x72,
	0x7d, 0xe3, 0x7f, 0x72, 0x60, 0x79, 0xe2, 0x97, 0xab, 0x47, 0xe0, 0xd3, 0x86, 0xa9, 0x55, 0x2d,
	0xad, 0x28, 0x82, 0x1f, 0x95, 0xad, 0x9a, 0xa1, 0x35, 0xc6, 0x57, 0xdc, 0x6f, 0xc0, 0x17, 0x93,
	0x9b, 0x99, 0xba, 0x56, 0x42, 0x87, 0xd5, 0x70, 0x95, 0x37, 0xf4, 0x92, 0x92, 0x83, 0x8f, 0xc1,
	0xe7, 0xbf, 0xd2, 0x36, 0x69, 0x39, 0x03, 0xbf, 0x04, 0x8f, 0x2e, 0x6a, 0x59, 0xd7, 0xb5, 0x86,
	0xb6, 0x6b, 0xe8, 0x52, 0xa4, 0x5c, 0x83, 0x5f, 0x80, 0x8d, 0xc9, 0x4d, 0x2d, 0xdd, 0x2c, 0x6b,
	0x46, 0xf9, 0x07, 0xd1, 0x58, 0xb9, 0xbe, 0xf1, 0x23, 0x98, 0x4d, 0x7d, 0x43, 0x12, 0x9b, 0xc1,
	0xee, 0xeb, 0x86, 0xae, 0xa1, 0xda, 0x61, 0xa3, 0x7e, 0xd8, 0x18, 0x5f, 0x2b, 0x43, 0xb5, 0x07,
	0xfa, 0x2b, 0x25, 0x07, 0x55, 0xb0, 0x3c, 0x54, 0xaa, 0x5b, 0x45, 0xad, 0x2e, 0xfc, 0xdd, 0x30,
	0xc1, 0xcd, 0xc1, 0x67, 0x23, 0xb1, 0xd4, 0x5f, 0x55, 0x0c, 0xb4, 0x5b, 0xae, 0x6a, 0xe6, 0xeb,
	0xf1, 0x5d, 0x3e, 0x55, 0xb7, 0xab, 0x59, 0xfa, 0xb3, 0x1d, 0x25, 0x07, 0x21, 0x98, 0x4f, 0x15,
	0x0b, 0x6b, 0x33, 0x1b, 0xaf, 0x24, 0x33, 0xfc, 0x48, 0x14, 0x33, 0x6b, 0xf5, 0x09, 0x53, 0x70,
	0x1b, 0x2c, 0xa5, 0xea, 0x4a, 0xb5, 0xe2, 0xa1, 0x98, 0x5f, 0x25, 0x27, 0x02, 0x27, 0x55, 0x51,
	0xac, 0x55, 0x1b, 0xa2, 0x7c, 0x46, 0xec, 0xb1, 0xf3, 0xc3, 0xdf, 0x20, 0x44, 0xd0, 0xee, 0x6a,
	0xc5, 0xef, 0x2d, 0x43, 0xb3, 0x0e, 0xd0, 0x8b, 0x43, 0xb1, 0x23, 0x0f, 0x1b, 0x59, 0x02, 0x0b,
	0x23, 0x0d, 0x42, 0x03, 0xa3, 0xaa, 0x5a, 0x55, 0x99, 0x11, 0x1e, 0x8d, 0x95, 0xef, 0xed, 0x29,
	0xd7, 0xe0, 0xa7, 0xe0, 0xde, 0x68, 0x85, 0xa5, 0xed, 0xe9, 0x48, 0xaf, 0x16, 0x6b, 0x25, 0xb1,
	0xf0, 0xaf, 0x6f, 0xfc, 0x57, 0x0e, 0x2c, 0x4f, 0xba, 0x88, 0x88, 0xe8, 0xa9, 0xef, 0xa3, 0x03,
	0xb1, 0x3b, 0xd7, 0x0d, 0xad, 0x1a, 0x6e, 0x35, 0xa8, 0x6e, 0x96, 0xc7, 0x16, 0xcc, 0x43, 0x70,
	0xf7, 0xc2, 0x96, 0xc2, 0x0f, 0xb9, 0x88, 0x2f, 0x6e, 0x21, 0x7a, 0xf0, 0x08, 0x7c, 0x7a, 0x61,
	0x83, 0x92, 0xde, 0xd0, 0xca, 0x86, 0x2e, 0x82, 0xef, 0x73, 0xf0, 0xf0, 0xc2, 0x66, 0xf1, 0x82,
	0xbf, 0xbe, 0xf1, 0x6f, 0x39, 0xb0, 0x3a, 0x39, 0x0b, 0x13, 0x9d, 0xb2, 0x0e, 0x34, 0x53, 0x2f,
	0xa1, 0xba, 0xa9, 0x1b, 0x35, 0xad, 0x84, 0x8c, 0xf2, 0xae, 0xa9, 0x99, 0x65, 0xdd, 0x1a, 0xe9,
	0xd4, 0x97, 0xe0, 0xd1, 0x85, 0x2d, 0xb5, 0xc3, 0x46, 0x0d, 0xe9, 0xaf, 0xea, 0x86, 0x56, 0x16,
	0xe7, 0xc9, 0xaf, 0x35, 0x4d, 0xbb, 0xab, 0xcc, 0x6c, 0xfc, 0xe7, 0x0c, 0x50, 0x47, 0xaf, 0x5f,
	0x16, 0x09, 0xc2, 0x1f, 0xdb, 0xf7, 0x80, 0x92, 0xca, 0x7e, 0x65, 0x5d, 0xf4, 0x6b, 0xfb, 0xdf,
	0x5d, 0xe5, 0x66, 0xb7, 0x7b, 0xfd, 0xff, 0xce, 0x0b, 0x39, 0x73, 0x21, 0x49, 0x86, 0x65, 0x1d,
	0x7c, 0x03, 0x66, 0xfb, 0x9c, 0xf8, 0xb1, 0xa5, 0x99, 0xab, 0x5b, 0x32, 0x81, 0x00, 0x46, 0x78,
	0x1b, 0xcc, 0xc7, 0x2f, 0x15, 0x91, 0x85, 0x6b, 0x1f, 0xc0, 0xc2, 0x5c, 0xc4, 0x0c, 0xcb, 0x76,
	0xff, 0x90, 0x03, 0x5f, 0x0e, 0xe1, 0xb0, 0x47, 0x2f, 0x44, 0xfe, 0xd0, 0xe8, 0xd0, 0xa0, 0xdb,
	0x6f, 0x6e, 0xd9, 0xac, 0xb7, 0x1d, 0xaa, 0x36, 0xc3, 0xff, 0x11, 0xd1, 0x61, 0x9b, 0x1d, 0xe2,
	0xca, 0x4b, 0xe6, 0xf6, 0x54, 0xff, 0x5d, 0xe3, 0x9b, 0xa4, 0xb0, 0xf9, 0xb1, 0xd4, 0x3d, 0xfd,
	0xff, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8d, 0x73, 0x10, 0xef, 0xe9, 0x31, 0x00, 0x00,
}
