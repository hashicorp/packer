// Code generated by protoc-gen-goext. DO NOT EDIT.

package triggers

import (
	duration "github.com/golang/protobuf/ptypes/duration"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
)

func (m *Trigger) SetId(v string) {
	m.Id = v
}

func (m *Trigger) SetFolderId(v string) {
	m.FolderId = v
}

func (m *Trigger) SetCreatedAt(v *timestamp.Timestamp) {
	m.CreatedAt = v
}

func (m *Trigger) SetName(v string) {
	m.Name = v
}

func (m *Trigger) SetDescription(v string) {
	m.Description = v
}

func (m *Trigger) SetLabels(v map[string]string) {
	m.Labels = v
}

func (m *Trigger) SetRule(v *Trigger_Rule) {
	m.Rule = v
}

func (m *Trigger) SetStatus(v Trigger_Status) {
	m.Status = v
}

type Trigger_Rule_Rule = isTrigger_Rule_Rule

func (m *Trigger_Rule) SetRule(v Trigger_Rule_Rule) {
	m.Rule = v
}

func (m *Trigger_Rule) SetTimer(v *Trigger_Timer) {
	m.Rule = &Trigger_Rule_Timer{
		Timer: v,
	}
}

func (m *Trigger_Rule) SetMessageQueue(v *Trigger_MessageQueue) {
	m.Rule = &Trigger_Rule_MessageQueue{
		MessageQueue: v,
	}
}

func (m *Trigger_Rule) SetIotMessage(v *Trigger_IoTMessage) {
	m.Rule = &Trigger_Rule_IotMessage{
		IotMessage: v,
	}
}

func (m *Trigger_Rule) SetObjectStorage(v *Trigger_ObjectStorage) {
	m.Rule = &Trigger_Rule_ObjectStorage{
		ObjectStorage: v,
	}
}

func (m *Trigger_Rule) SetContainerRegistry(v *Trigger_ContainerRegistry) {
	m.Rule = &Trigger_Rule_ContainerRegistry{
		ContainerRegistry: v,
	}
}

type Trigger_Timer_Action = isTrigger_Timer_Action

func (m *Trigger_Timer) SetAction(v Trigger_Timer_Action) {
	m.Action = v
}

func (m *Trigger_Timer) SetCronExpression(v string) {
	m.CronExpression = v
}

func (m *Trigger_Timer) SetInvokeFunction(v *InvokeFunctionOnce) {
	m.Action = &Trigger_Timer_InvokeFunction{
		InvokeFunction: v,
	}
}

func (m *Trigger_Timer) SetInvokeFunctionWithRetry(v *InvokeFunctionWithRetry) {
	m.Action = &Trigger_Timer_InvokeFunctionWithRetry{
		InvokeFunctionWithRetry: v,
	}
}

type Trigger_MessageQueue_Action = isTrigger_MessageQueue_Action

func (m *Trigger_MessageQueue) SetAction(v Trigger_MessageQueue_Action) {
	m.Action = v
}

func (m *Trigger_MessageQueue) SetQueueId(v string) {
	m.QueueId = v
}

func (m *Trigger_MessageQueue) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *Trigger_MessageQueue) SetBatchSettings(v *BatchSettings) {
	m.BatchSettings = v
}

func (m *Trigger_MessageQueue) SetVisibilityTimeout(v *duration.Duration) {
	m.VisibilityTimeout = v
}

func (m *Trigger_MessageQueue) SetInvokeFunction(v *InvokeFunctionOnce) {
	m.Action = &Trigger_MessageQueue_InvokeFunction{
		InvokeFunction: v,
	}
}

type Trigger_IoTMessage_Action = isTrigger_IoTMessage_Action

func (m *Trigger_IoTMessage) SetAction(v Trigger_IoTMessage_Action) {
	m.Action = v
}

func (m *Trigger_IoTMessage) SetRegistryId(v string) {
	m.RegistryId = v
}

func (m *Trigger_IoTMessage) SetDeviceId(v string) {
	m.DeviceId = v
}

func (m *Trigger_IoTMessage) SetMqttTopic(v string) {
	m.MqttTopic = v
}

func (m *Trigger_IoTMessage) SetInvokeFunction(v *InvokeFunctionWithRetry) {
	m.Action = &Trigger_IoTMessage_InvokeFunction{
		InvokeFunction: v,
	}
}

type Trigger_ObjectStorage_Action = isTrigger_ObjectStorage_Action

func (m *Trigger_ObjectStorage) SetAction(v Trigger_ObjectStorage_Action) {
	m.Action = v
}

func (m *Trigger_ObjectStorage) SetEventType(v []Trigger_ObjectStorageEventType) {
	m.EventType = v
}

func (m *Trigger_ObjectStorage) SetBucketId(v string) {
	m.BucketId = v
}

func (m *Trigger_ObjectStorage) SetPrefix(v string) {
	m.Prefix = v
}

func (m *Trigger_ObjectStorage) SetSuffix(v string) {
	m.Suffix = v
}

func (m *Trigger_ObjectStorage) SetInvokeFunction(v *InvokeFunctionWithRetry) {
	m.Action = &Trigger_ObjectStorage_InvokeFunction{
		InvokeFunction: v,
	}
}

type Trigger_ContainerRegistry_Action = isTrigger_ContainerRegistry_Action

func (m *Trigger_ContainerRegistry) SetAction(v Trigger_ContainerRegistry_Action) {
	m.Action = v
}

func (m *Trigger_ContainerRegistry) SetEventType(v []Trigger_ContainerRegistryEventType) {
	m.EventType = v
}

func (m *Trigger_ContainerRegistry) SetRegistryId(v string) {
	m.RegistryId = v
}

func (m *Trigger_ContainerRegistry) SetImageName(v string) {
	m.ImageName = v
}

func (m *Trigger_ContainerRegistry) SetTag(v string) {
	m.Tag = v
}

func (m *Trigger_ContainerRegistry) SetInvokeFunction(v *InvokeFunctionWithRetry) {
	m.Action = &Trigger_ContainerRegistry_InvokeFunction{
		InvokeFunction: v,
	}
}

func (m *InvokeFunctionOnce) SetFunctionId(v string) {
	m.FunctionId = v
}

func (m *InvokeFunctionOnce) SetFunctionTag(v string) {
	m.FunctionTag = v
}

func (m *InvokeFunctionOnce) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *InvokeFunctionWithRetry) SetFunctionId(v string) {
	m.FunctionId = v
}

func (m *InvokeFunctionWithRetry) SetFunctionTag(v string) {
	m.FunctionTag = v
}

func (m *InvokeFunctionWithRetry) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *InvokeFunctionWithRetry) SetRetrySettings(v *RetrySettings) {
	m.RetrySettings = v
}

func (m *InvokeFunctionWithRetry) SetDeadLetterQueue(v *PutQueueMessage) {
	m.DeadLetterQueue = v
}

func (m *PutQueueMessage) SetQueueId(v string) {
	m.QueueId = v
}

func (m *PutQueueMessage) SetServiceAccountId(v string) {
	m.ServiceAccountId = v
}

func (m *BatchSettings) SetSize(v int64) {
	m.Size = v
}

func (m *BatchSettings) SetCutoff(v *duration.Duration) {
	m.Cutoff = v
}

func (m *RetrySettings) SetRetryAttempts(v int64) {
	m.RetryAttempts = v
}

func (m *RetrySettings) SetInterval(v *duration.Duration) {
	m.Interval = v
}
