// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/containerregistry/v1/lifecycle_policy_service.proto

package containerregistry

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud"
	_ "github.com/yandex-cloud/go-genproto/yandex/cloud/api"
	operation "github.com/yandex-cloud/go-genproto/yandex/cloud/operation"
	field_mask "google.golang.org/genproto/protobuf/field_mask"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GetLifecyclePolicyRequest struct {
	LifecyclePolicyId    string   `protobuf:"bytes,1,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetLifecyclePolicyRequest) Reset()         { *m = GetLifecyclePolicyRequest{} }
func (m *GetLifecyclePolicyRequest) String() string { return proto.CompactTextString(m) }
func (*GetLifecyclePolicyRequest) ProtoMessage()    {}
func (*GetLifecyclePolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{0}
}

func (m *GetLifecyclePolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetLifecyclePolicyRequest.Unmarshal(m, b)
}
func (m *GetLifecyclePolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetLifecyclePolicyRequest.Marshal(b, m, deterministic)
}
func (m *GetLifecyclePolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetLifecyclePolicyRequest.Merge(m, src)
}
func (m *GetLifecyclePolicyRequest) XXX_Size() int {
	return xxx_messageInfo_GetLifecyclePolicyRequest.Size(m)
}
func (m *GetLifecyclePolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetLifecyclePolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetLifecyclePolicyRequest proto.InternalMessageInfo

func (m *GetLifecyclePolicyRequest) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

type ListLifecyclePoliciesRequest struct {
	// Types that are valid to be assigned to Id:
	//	*ListLifecyclePoliciesRequest_RegistryId
	//	*ListLifecyclePoliciesRequest_RepositoryId
	Id                   isListLifecyclePoliciesRequest_Id `protobuf_oneof:"id"`
	PageSize             int64                             `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string                            `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter               string                            `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy              string                            `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                          `json:"-"`
	XXX_unrecognized     []byte                            `json:"-"`
	XXX_sizecache        int32                             `json:"-"`
}

func (m *ListLifecyclePoliciesRequest) Reset()         { *m = ListLifecyclePoliciesRequest{} }
func (m *ListLifecyclePoliciesRequest) String() string { return proto.CompactTextString(m) }
func (*ListLifecyclePoliciesRequest) ProtoMessage()    {}
func (*ListLifecyclePoliciesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{1}
}

func (m *ListLifecyclePoliciesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLifecyclePoliciesRequest.Unmarshal(m, b)
}
func (m *ListLifecyclePoliciesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLifecyclePoliciesRequest.Marshal(b, m, deterministic)
}
func (m *ListLifecyclePoliciesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLifecyclePoliciesRequest.Merge(m, src)
}
func (m *ListLifecyclePoliciesRequest) XXX_Size() int {
	return xxx_messageInfo_ListLifecyclePoliciesRequest.Size(m)
}
func (m *ListLifecyclePoliciesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLifecyclePoliciesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListLifecyclePoliciesRequest proto.InternalMessageInfo

type isListLifecyclePoliciesRequest_Id interface {
	isListLifecyclePoliciesRequest_Id()
}

type ListLifecyclePoliciesRequest_RegistryId struct {
	RegistryId string `protobuf:"bytes,1,opt,name=registry_id,json=registryId,proto3,oneof"`
}

type ListLifecyclePoliciesRequest_RepositoryId struct {
	RepositoryId string `protobuf:"bytes,6,opt,name=repository_id,json=repositoryId,proto3,oneof"`
}

func (*ListLifecyclePoliciesRequest_RegistryId) isListLifecyclePoliciesRequest_Id() {}

func (*ListLifecyclePoliciesRequest_RepositoryId) isListLifecyclePoliciesRequest_Id() {}

func (m *ListLifecyclePoliciesRequest) GetId() isListLifecyclePoliciesRequest_Id {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *ListLifecyclePoliciesRequest) GetRegistryId() string {
	if x, ok := m.GetId().(*ListLifecyclePoliciesRequest_RegistryId); ok {
		return x.RegistryId
	}
	return ""
}

func (m *ListLifecyclePoliciesRequest) GetRepositoryId() string {
	if x, ok := m.GetId().(*ListLifecyclePoliciesRequest_RepositoryId); ok {
		return x.RepositoryId
	}
	return ""
}

func (m *ListLifecyclePoliciesRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListLifecyclePoliciesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListLifecyclePoliciesRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListLifecyclePoliciesRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ListLifecyclePoliciesRequest) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ListLifecyclePoliciesRequest_RegistryId)(nil),
		(*ListLifecyclePoliciesRequest_RepositoryId)(nil),
	}
}

type ListLifecyclePoliciesResponse struct {
	LifecyclePolicies    []*LifecyclePolicy `protobuf:"bytes,1,rep,name=lifecycle_policies,json=lifecyclePolicies,proto3" json:"lifecycle_policies,omitempty"`
	NextPageToken        string             `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *ListLifecyclePoliciesResponse) Reset()         { *m = ListLifecyclePoliciesResponse{} }
func (m *ListLifecyclePoliciesResponse) String() string { return proto.CompactTextString(m) }
func (*ListLifecyclePoliciesResponse) ProtoMessage()    {}
func (*ListLifecyclePoliciesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{2}
}

func (m *ListLifecyclePoliciesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListLifecyclePoliciesResponse.Unmarshal(m, b)
}
func (m *ListLifecyclePoliciesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListLifecyclePoliciesResponse.Marshal(b, m, deterministic)
}
func (m *ListLifecyclePoliciesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListLifecyclePoliciesResponse.Merge(m, src)
}
func (m *ListLifecyclePoliciesResponse) XXX_Size() int {
	return xxx_messageInfo_ListLifecyclePoliciesResponse.Size(m)
}
func (m *ListLifecyclePoliciesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListLifecyclePoliciesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListLifecyclePoliciesResponse proto.InternalMessageInfo

func (m *ListLifecyclePoliciesResponse) GetLifecyclePolicies() []*LifecyclePolicy {
	if m != nil {
		return m.LifecyclePolicies
	}
	return nil
}

func (m *ListLifecyclePoliciesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type CreateLifecyclePolicyRequest struct {
	RepositoryId         string                 `protobuf:"bytes,1,opt,name=repository_id,json=repositoryId,proto3" json:"repository_id,omitempty"`
	Name                 string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status               LifecyclePolicy_Status `protobuf:"varint,4,opt,name=status,proto3,enum=yandex.cloud.containerregistry.v1.LifecyclePolicy_Status" json:"status,omitempty"`
	Rules                []*LifecycleRule       `protobuf:"bytes,5,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *CreateLifecyclePolicyRequest) Reset()         { *m = CreateLifecyclePolicyRequest{} }
func (m *CreateLifecyclePolicyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLifecyclePolicyRequest) ProtoMessage()    {}
func (*CreateLifecyclePolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{3}
}

func (m *CreateLifecyclePolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLifecyclePolicyRequest.Unmarshal(m, b)
}
func (m *CreateLifecyclePolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLifecyclePolicyRequest.Marshal(b, m, deterministic)
}
func (m *CreateLifecyclePolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLifecyclePolicyRequest.Merge(m, src)
}
func (m *CreateLifecyclePolicyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLifecyclePolicyRequest.Size(m)
}
func (m *CreateLifecyclePolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLifecyclePolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLifecyclePolicyRequest proto.InternalMessageInfo

func (m *CreateLifecyclePolicyRequest) GetRepositoryId() string {
	if m != nil {
		return m.RepositoryId
	}
	return ""
}

func (m *CreateLifecyclePolicyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateLifecyclePolicyRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CreateLifecyclePolicyRequest) GetStatus() LifecyclePolicy_Status {
	if m != nil {
		return m.Status
	}
	return LifecyclePolicy_STATUS_UNSPECIFIED
}

func (m *CreateLifecyclePolicyRequest) GetRules() []*LifecycleRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type UpdateLifecyclePolicyRequest struct {
	LifecyclePolicyId    string                 `protobuf:"bytes,1,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	UpdateMask           *field_mask.FieldMask  `protobuf:"bytes,2,opt,name=update_mask,json=updateMask,proto3" json:"update_mask,omitempty"`
	Name                 string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Description          string                 `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Status               LifecyclePolicy_Status `protobuf:"varint,5,opt,name=status,proto3,enum=yandex.cloud.containerregistry.v1.LifecyclePolicy_Status" json:"status,omitempty"`
	Rules                []*LifecycleRule       `protobuf:"bytes,6,rep,name=rules,proto3" json:"rules,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *UpdateLifecyclePolicyRequest) Reset()         { *m = UpdateLifecyclePolicyRequest{} }
func (m *UpdateLifecyclePolicyRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLifecyclePolicyRequest) ProtoMessage()    {}
func (*UpdateLifecyclePolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{4}
}

func (m *UpdateLifecyclePolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLifecyclePolicyRequest.Unmarshal(m, b)
}
func (m *UpdateLifecyclePolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLifecyclePolicyRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLifecyclePolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLifecyclePolicyRequest.Merge(m, src)
}
func (m *UpdateLifecyclePolicyRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLifecyclePolicyRequest.Size(m)
}
func (m *UpdateLifecyclePolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLifecyclePolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLifecyclePolicyRequest proto.InternalMessageInfo

func (m *UpdateLifecyclePolicyRequest) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

func (m *UpdateLifecyclePolicyRequest) GetUpdateMask() *field_mask.FieldMask {
	if m != nil {
		return m.UpdateMask
	}
	return nil
}

func (m *UpdateLifecyclePolicyRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *UpdateLifecyclePolicyRequest) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *UpdateLifecyclePolicyRequest) GetStatus() LifecyclePolicy_Status {
	if m != nil {
		return m.Status
	}
	return LifecyclePolicy_STATUS_UNSPECIFIED
}

func (m *UpdateLifecyclePolicyRequest) GetRules() []*LifecycleRule {
	if m != nil {
		return m.Rules
	}
	return nil
}

type DeleteLifecyclePolicyRequest struct {
	LifecyclePolicyId    string   `protobuf:"bytes,1,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLifecyclePolicyRequest) Reset()         { *m = DeleteLifecyclePolicyRequest{} }
func (m *DeleteLifecyclePolicyRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLifecyclePolicyRequest) ProtoMessage()    {}
func (*DeleteLifecyclePolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{5}
}

func (m *DeleteLifecyclePolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLifecyclePolicyRequest.Unmarshal(m, b)
}
func (m *DeleteLifecyclePolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLifecyclePolicyRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLifecyclePolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLifecyclePolicyRequest.Merge(m, src)
}
func (m *DeleteLifecyclePolicyRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLifecyclePolicyRequest.Size(m)
}
func (m *DeleteLifecyclePolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLifecyclePolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLifecyclePolicyRequest proto.InternalMessageInfo

func (m *DeleteLifecyclePolicyRequest) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

type CreateLifecyclePolicyMetadata struct {
	LifecyclePolicyId    string   `protobuf:"bytes,1,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateLifecyclePolicyMetadata) Reset()         { *m = CreateLifecyclePolicyMetadata{} }
func (m *CreateLifecyclePolicyMetadata) String() string { return proto.CompactTextString(m) }
func (*CreateLifecyclePolicyMetadata) ProtoMessage()    {}
func (*CreateLifecyclePolicyMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{6}
}

func (m *CreateLifecyclePolicyMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLifecyclePolicyMetadata.Unmarshal(m, b)
}
func (m *CreateLifecyclePolicyMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLifecyclePolicyMetadata.Marshal(b, m, deterministic)
}
func (m *CreateLifecyclePolicyMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLifecyclePolicyMetadata.Merge(m, src)
}
func (m *CreateLifecyclePolicyMetadata) XXX_Size() int {
	return xxx_messageInfo_CreateLifecyclePolicyMetadata.Size(m)
}
func (m *CreateLifecyclePolicyMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLifecyclePolicyMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLifecyclePolicyMetadata proto.InternalMessageInfo

func (m *CreateLifecyclePolicyMetadata) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

type UpdateLifecyclePolicyMetadata struct {
	LifecyclePolicyId    string   `protobuf:"bytes,1,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateLifecyclePolicyMetadata) Reset()         { *m = UpdateLifecyclePolicyMetadata{} }
func (m *UpdateLifecyclePolicyMetadata) String() string { return proto.CompactTextString(m) }
func (*UpdateLifecyclePolicyMetadata) ProtoMessage()    {}
func (*UpdateLifecyclePolicyMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{7}
}

func (m *UpdateLifecyclePolicyMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLifecyclePolicyMetadata.Unmarshal(m, b)
}
func (m *UpdateLifecyclePolicyMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLifecyclePolicyMetadata.Marshal(b, m, deterministic)
}
func (m *UpdateLifecyclePolicyMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLifecyclePolicyMetadata.Merge(m, src)
}
func (m *UpdateLifecyclePolicyMetadata) XXX_Size() int {
	return xxx_messageInfo_UpdateLifecyclePolicyMetadata.Size(m)
}
func (m *UpdateLifecyclePolicyMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLifecyclePolicyMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLifecyclePolicyMetadata proto.InternalMessageInfo

func (m *UpdateLifecyclePolicyMetadata) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

type DeleteLifecyclePolicyMetadata struct {
	LifecyclePolicyId    string   `protobuf:"bytes,1,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLifecyclePolicyMetadata) Reset()         { *m = DeleteLifecyclePolicyMetadata{} }
func (m *DeleteLifecyclePolicyMetadata) String() string { return proto.CompactTextString(m) }
func (*DeleteLifecyclePolicyMetadata) ProtoMessage()    {}
func (*DeleteLifecyclePolicyMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{8}
}

func (m *DeleteLifecyclePolicyMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLifecyclePolicyMetadata.Unmarshal(m, b)
}
func (m *DeleteLifecyclePolicyMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLifecyclePolicyMetadata.Marshal(b, m, deterministic)
}
func (m *DeleteLifecyclePolicyMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLifecyclePolicyMetadata.Merge(m, src)
}
func (m *DeleteLifecyclePolicyMetadata) XXX_Size() int {
	return xxx_messageInfo_DeleteLifecyclePolicyMetadata.Size(m)
}
func (m *DeleteLifecyclePolicyMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLifecyclePolicyMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLifecyclePolicyMetadata proto.InternalMessageInfo

func (m *DeleteLifecyclePolicyMetadata) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

type DryRunLifecyclePolicyRequest struct {
	LifecyclePolicyId    string   `protobuf:"bytes,1,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DryRunLifecyclePolicyRequest) Reset()         { *m = DryRunLifecyclePolicyRequest{} }
func (m *DryRunLifecyclePolicyRequest) String() string { return proto.CompactTextString(m) }
func (*DryRunLifecyclePolicyRequest) ProtoMessage()    {}
func (*DryRunLifecyclePolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{9}
}

func (m *DryRunLifecyclePolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DryRunLifecyclePolicyRequest.Unmarshal(m, b)
}
func (m *DryRunLifecyclePolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DryRunLifecyclePolicyRequest.Marshal(b, m, deterministic)
}
func (m *DryRunLifecyclePolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DryRunLifecyclePolicyRequest.Merge(m, src)
}
func (m *DryRunLifecyclePolicyRequest) XXX_Size() int {
	return xxx_messageInfo_DryRunLifecyclePolicyRequest.Size(m)
}
func (m *DryRunLifecyclePolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DryRunLifecyclePolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DryRunLifecyclePolicyRequest proto.InternalMessageInfo

func (m *DryRunLifecyclePolicyRequest) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

type DryRunLifecyclePolicyMetadata struct {
	DryRunLifecyclePolicyResultId string   `protobuf:"bytes,1,opt,name=dry_run_lifecycle_policy_result_id,json=dryRunLifecyclePolicyResultId,proto3" json:"dry_run_lifecycle_policy_result_id,omitempty"`
	LifecyclePolicyId             string   `protobuf:"bytes,2,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *DryRunLifecyclePolicyMetadata) Reset()         { *m = DryRunLifecyclePolicyMetadata{} }
func (m *DryRunLifecyclePolicyMetadata) String() string { return proto.CompactTextString(m) }
func (*DryRunLifecyclePolicyMetadata) ProtoMessage()    {}
func (*DryRunLifecyclePolicyMetadata) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{10}
}

func (m *DryRunLifecyclePolicyMetadata) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DryRunLifecyclePolicyMetadata.Unmarshal(m, b)
}
func (m *DryRunLifecyclePolicyMetadata) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DryRunLifecyclePolicyMetadata.Marshal(b, m, deterministic)
}
func (m *DryRunLifecyclePolicyMetadata) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DryRunLifecyclePolicyMetadata.Merge(m, src)
}
func (m *DryRunLifecyclePolicyMetadata) XXX_Size() int {
	return xxx_messageInfo_DryRunLifecyclePolicyMetadata.Size(m)
}
func (m *DryRunLifecyclePolicyMetadata) XXX_DiscardUnknown() {
	xxx_messageInfo_DryRunLifecyclePolicyMetadata.DiscardUnknown(m)
}

var xxx_messageInfo_DryRunLifecyclePolicyMetadata proto.InternalMessageInfo

func (m *DryRunLifecyclePolicyMetadata) GetDryRunLifecyclePolicyResultId() string {
	if m != nil {
		return m.DryRunLifecyclePolicyResultId
	}
	return ""
}

func (m *DryRunLifecyclePolicyMetadata) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

type DryRunLifecyclePolicyResult struct {
	DryRunLifecyclePolicyResultId string               `protobuf:"bytes,1,opt,name=dry_run_lifecycle_policy_result_id,json=dryRunLifecyclePolicyResultId,proto3" json:"dry_run_lifecycle_policy_result_id,omitempty"`
	LifecyclePolicyId             string               `protobuf:"bytes,2,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	RunAt                         *timestamp.Timestamp `protobuf:"bytes,3,opt,name=run_at,json=runAt,proto3" json:"run_at,omitempty"`
	AffectedImagesCount           int64                `protobuf:"varint,4,opt,name=affected_images_count,json=affectedImagesCount,proto3" json:"affected_images_count,omitempty"`
	XXX_NoUnkeyedLiteral          struct{}             `json:"-"`
	XXX_unrecognized              []byte               `json:"-"`
	XXX_sizecache                 int32                `json:"-"`
}

func (m *DryRunLifecyclePolicyResult) Reset()         { *m = DryRunLifecyclePolicyResult{} }
func (m *DryRunLifecyclePolicyResult) String() string { return proto.CompactTextString(m) }
func (*DryRunLifecyclePolicyResult) ProtoMessage()    {}
func (*DryRunLifecyclePolicyResult) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{11}
}

func (m *DryRunLifecyclePolicyResult) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DryRunLifecyclePolicyResult.Unmarshal(m, b)
}
func (m *DryRunLifecyclePolicyResult) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DryRunLifecyclePolicyResult.Marshal(b, m, deterministic)
}
func (m *DryRunLifecyclePolicyResult) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DryRunLifecyclePolicyResult.Merge(m, src)
}
func (m *DryRunLifecyclePolicyResult) XXX_Size() int {
	return xxx_messageInfo_DryRunLifecyclePolicyResult.Size(m)
}
func (m *DryRunLifecyclePolicyResult) XXX_DiscardUnknown() {
	xxx_messageInfo_DryRunLifecyclePolicyResult.DiscardUnknown(m)
}

var xxx_messageInfo_DryRunLifecyclePolicyResult proto.InternalMessageInfo

func (m *DryRunLifecyclePolicyResult) GetDryRunLifecyclePolicyResultId() string {
	if m != nil {
		return m.DryRunLifecyclePolicyResultId
	}
	return ""
}

func (m *DryRunLifecyclePolicyResult) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

func (m *DryRunLifecyclePolicyResult) GetRunAt() *timestamp.Timestamp {
	if m != nil {
		return m.RunAt
	}
	return nil
}

func (m *DryRunLifecyclePolicyResult) GetAffectedImagesCount() int64 {
	if m != nil {
		return m.AffectedImagesCount
	}
	return 0
}

type GetDryRunLifecyclePolicyResultRequest struct {
	DryRunLifecyclePolicyResultId string   `protobuf:"bytes,1,opt,name=dry_run_lifecycle_policy_result_id,json=dryRunLifecyclePolicyResultId,proto3" json:"dry_run_lifecycle_policy_result_id,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *GetDryRunLifecyclePolicyResultRequest) Reset()         { *m = GetDryRunLifecyclePolicyResultRequest{} }
func (m *GetDryRunLifecyclePolicyResultRequest) String() string { return proto.CompactTextString(m) }
func (*GetDryRunLifecyclePolicyResultRequest) ProtoMessage()    {}
func (*GetDryRunLifecyclePolicyResultRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{12}
}

func (m *GetDryRunLifecyclePolicyResultRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetDryRunLifecyclePolicyResultRequest.Unmarshal(m, b)
}
func (m *GetDryRunLifecyclePolicyResultRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetDryRunLifecyclePolicyResultRequest.Marshal(b, m, deterministic)
}
func (m *GetDryRunLifecyclePolicyResultRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetDryRunLifecyclePolicyResultRequest.Merge(m, src)
}
func (m *GetDryRunLifecyclePolicyResultRequest) XXX_Size() int {
	return xxx_messageInfo_GetDryRunLifecyclePolicyResultRequest.Size(m)
}
func (m *GetDryRunLifecyclePolicyResultRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetDryRunLifecyclePolicyResultRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetDryRunLifecyclePolicyResultRequest proto.InternalMessageInfo

func (m *GetDryRunLifecyclePolicyResultRequest) GetDryRunLifecyclePolicyResultId() string {
	if m != nil {
		return m.DryRunLifecyclePolicyResultId
	}
	return ""
}

type ListDryRunLifecyclePolicyResultsRequest struct {
	LifecyclePolicyId    string   `protobuf:"bytes,1,opt,name=lifecycle_policy_id,json=lifecyclePolicyId,proto3" json:"lifecycle_policy_id,omitempty"`
	PageSize             int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken            string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter               string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy              string   `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDryRunLifecyclePolicyResultsRequest) Reset() {
	*m = ListDryRunLifecyclePolicyResultsRequest{}
}
func (m *ListDryRunLifecyclePolicyResultsRequest) String() string { return proto.CompactTextString(m) }
func (*ListDryRunLifecyclePolicyResultsRequest) ProtoMessage()    {}
func (*ListDryRunLifecyclePolicyResultsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{13}
}

func (m *ListDryRunLifecyclePolicyResultsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultsRequest.Unmarshal(m, b)
}
func (m *ListDryRunLifecyclePolicyResultsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultsRequest.Marshal(b, m, deterministic)
}
func (m *ListDryRunLifecyclePolicyResultsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDryRunLifecyclePolicyResultsRequest.Merge(m, src)
}
func (m *ListDryRunLifecyclePolicyResultsRequest) XXX_Size() int {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultsRequest.Size(m)
}
func (m *ListDryRunLifecyclePolicyResultsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDryRunLifecyclePolicyResultsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDryRunLifecyclePolicyResultsRequest proto.InternalMessageInfo

func (m *ListDryRunLifecyclePolicyResultsRequest) GetLifecyclePolicyId() string {
	if m != nil {
		return m.LifecyclePolicyId
	}
	return ""
}

func (m *ListDryRunLifecyclePolicyResultsRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDryRunLifecyclePolicyResultsRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListDryRunLifecyclePolicyResultsRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListDryRunLifecyclePolicyResultsRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type ListDryRunLifecyclePolicyResultsResponse struct {
	DryRunLifecyclePolicyResults []*DryRunLifecyclePolicyResult `protobuf:"bytes,1,rep,name=dry_run_lifecycle_policy_results,json=dryRunLifecyclePolicyResults,proto3" json:"dry_run_lifecycle_policy_results,omitempty"`
	NextPageToken                string                         `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral         struct{}                       `json:"-"`
	XXX_unrecognized             []byte                         `json:"-"`
	XXX_sizecache                int32                          `json:"-"`
}

func (m *ListDryRunLifecyclePolicyResultsResponse) Reset() {
	*m = ListDryRunLifecyclePolicyResultsResponse{}
}
func (m *ListDryRunLifecyclePolicyResultsResponse) String() string { return proto.CompactTextString(m) }
func (*ListDryRunLifecyclePolicyResultsResponse) ProtoMessage()    {}
func (*ListDryRunLifecyclePolicyResultsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{14}
}

func (m *ListDryRunLifecyclePolicyResultsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultsResponse.Unmarshal(m, b)
}
func (m *ListDryRunLifecyclePolicyResultsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultsResponse.Marshal(b, m, deterministic)
}
func (m *ListDryRunLifecyclePolicyResultsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDryRunLifecyclePolicyResultsResponse.Merge(m, src)
}
func (m *ListDryRunLifecyclePolicyResultsResponse) XXX_Size() int {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultsResponse.Size(m)
}
func (m *ListDryRunLifecyclePolicyResultsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDryRunLifecyclePolicyResultsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDryRunLifecyclePolicyResultsResponse proto.InternalMessageInfo

func (m *ListDryRunLifecyclePolicyResultsResponse) GetDryRunLifecyclePolicyResults() []*DryRunLifecyclePolicyResult {
	if m != nil {
		return m.DryRunLifecyclePolicyResults
	}
	return nil
}

func (m *ListDryRunLifecyclePolicyResultsResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type ListDryRunLifecyclePolicyResultAffectedImagesRequest struct {
	DryRunLifecyclePolicyResultId string   `protobuf:"bytes,1,opt,name=dry_run_lifecycle_policy_result_id,json=dryRunLifecyclePolicyResultId,proto3" json:"dry_run_lifecycle_policy_result_id,omitempty"`
	PageSize                      int64    `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken                     string   `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	Filter                        string   `protobuf:"bytes,4,opt,name=filter,proto3" json:"filter,omitempty"`
	OrderBy                       string   `protobuf:"bytes,5,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) Reset() {
	*m = ListDryRunLifecyclePolicyResultAffectedImagesRequest{}
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) String() string {
	return proto.CompactTextString(m)
}
func (*ListDryRunLifecyclePolicyResultAffectedImagesRequest) ProtoMessage() {}
func (*ListDryRunLifecyclePolicyResultAffectedImagesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{15}
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesRequest.Unmarshal(m, b)
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesRequest.Marshal(b, m, deterministic)
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesRequest.Merge(m, src)
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) XXX_Size() int {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesRequest.Size(m)
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesRequest proto.InternalMessageInfo

func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) GetDryRunLifecyclePolicyResultId() string {
	if m != nil {
		return m.DryRunLifecyclePolicyResultId
	}
	return ""
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) GetPageSize() int64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) GetFilter() string {
	if m != nil {
		return m.Filter
	}
	return ""
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesRequest) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

type ListDryRunLifecyclePolicyResultAffectedImagesResponse struct {
	AffectedImages       []*Image `protobuf:"bytes,1,rep,name=affected_images,json=affectedImages,proto3" json:"affected_images,omitempty"`
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) Reset() {
	*m = ListDryRunLifecyclePolicyResultAffectedImagesResponse{}
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) String() string {
	return proto.CompactTextString(m)
}
func (*ListDryRunLifecyclePolicyResultAffectedImagesResponse) ProtoMessage() {}
func (*ListDryRunLifecyclePolicyResultAffectedImagesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d0dc6994f9cdf613, []int{16}
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesResponse.Unmarshal(m, b)
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesResponse.Marshal(b, m, deterministic)
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesResponse.Merge(m, src)
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) XXX_Size() int {
	return xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesResponse.Size(m)
}
func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListDryRunLifecyclePolicyResultAffectedImagesResponse proto.InternalMessageInfo

func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) GetAffectedImages() []*Image {
	if m != nil {
		return m.AffectedImages
	}
	return nil
}

func (m *ListDryRunLifecyclePolicyResultAffectedImagesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

func init() {
	proto.RegisterType((*GetLifecyclePolicyRequest)(nil), "yandex.cloud.containerregistry.v1.GetLifecyclePolicyRequest")
	proto.RegisterType((*ListLifecyclePoliciesRequest)(nil), "yandex.cloud.containerregistry.v1.ListLifecyclePoliciesRequest")
	proto.RegisterType((*ListLifecyclePoliciesResponse)(nil), "yandex.cloud.containerregistry.v1.ListLifecyclePoliciesResponse")
	proto.RegisterType((*CreateLifecyclePolicyRequest)(nil), "yandex.cloud.containerregistry.v1.CreateLifecyclePolicyRequest")
	proto.RegisterType((*UpdateLifecyclePolicyRequest)(nil), "yandex.cloud.containerregistry.v1.UpdateLifecyclePolicyRequest")
	proto.RegisterType((*DeleteLifecyclePolicyRequest)(nil), "yandex.cloud.containerregistry.v1.DeleteLifecyclePolicyRequest")
	proto.RegisterType((*CreateLifecyclePolicyMetadata)(nil), "yandex.cloud.containerregistry.v1.CreateLifecyclePolicyMetadata")
	proto.RegisterType((*UpdateLifecyclePolicyMetadata)(nil), "yandex.cloud.containerregistry.v1.UpdateLifecyclePolicyMetadata")
	proto.RegisterType((*DeleteLifecyclePolicyMetadata)(nil), "yandex.cloud.containerregistry.v1.DeleteLifecyclePolicyMetadata")
	proto.RegisterType((*DryRunLifecyclePolicyRequest)(nil), "yandex.cloud.containerregistry.v1.DryRunLifecyclePolicyRequest")
	proto.RegisterType((*DryRunLifecyclePolicyMetadata)(nil), "yandex.cloud.containerregistry.v1.DryRunLifecyclePolicyMetadata")
	proto.RegisterType((*DryRunLifecyclePolicyResult)(nil), "yandex.cloud.containerregistry.v1.DryRunLifecyclePolicyResult")
	proto.RegisterType((*GetDryRunLifecyclePolicyResultRequest)(nil), "yandex.cloud.containerregistry.v1.GetDryRunLifecyclePolicyResultRequest")
	proto.RegisterType((*ListDryRunLifecyclePolicyResultsRequest)(nil), "yandex.cloud.containerregistry.v1.ListDryRunLifecyclePolicyResultsRequest")
	proto.RegisterType((*ListDryRunLifecyclePolicyResultsResponse)(nil), "yandex.cloud.containerregistry.v1.ListDryRunLifecyclePolicyResultsResponse")
	proto.RegisterType((*ListDryRunLifecyclePolicyResultAffectedImagesRequest)(nil), "yandex.cloud.containerregistry.v1.ListDryRunLifecyclePolicyResultAffectedImagesRequest")
	proto.RegisterType((*ListDryRunLifecyclePolicyResultAffectedImagesResponse)(nil), "yandex.cloud.containerregistry.v1.ListDryRunLifecyclePolicyResultAffectedImagesResponse")
}

func init() {
	proto.RegisterFile("yandex/cloud/containerregistry/v1/lifecycle_policy_service.proto", fileDescriptor_d0dc6994f9cdf613)
}

var fileDescriptor_d0dc6994f9cdf613 = []byte{
	// 1212 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x58, 0xd1, 0x6f, 0xdb, 0xd4,
	0x17, 0xfe, 0x39, 0x49, 0xf3, 0x5b, 0x4f, 0xb7, 0x55, 0xbb, 0xd3, 0x50, 0x08, 0x0d, 0xa4, 0x16,
	0x6c, 0x51, 0x21, 0x4e, 0x1c, 0xd6, 0x8a, 0xb1, 0x0e, 0xba, 0x6c, 0xac, 0x0b, 0x6c, 0xda, 0x70,
	0x87, 0x0a, 0x94, 0x29, 0xba, 0x8d, 0x6f, 0xc2, 0x55, 0x1d, 0xdb, 0xd8, 0xd7, 0x65, 0x29, 0x20,
	0xf1, 0x80, 0x90, 0xe8, 0x9f, 0x00, 0x12, 0x0f, 0x48, 0x48, 0x08, 0x4d, 0x3c, 0xf4, 0x2f, 0x80,
	0xa7, 0xf6, 0xb9, 0x48, 0xbc, 0xf0, 0x8e, 0x78, 0xe6, 0x91, 0x17, 0x90, 0xaf, 0xed, 0xb6, 0x71,
	0x12, 0xc7, 0x6d, 0x5a, 0xb1, 0xb7, 0x24, 0xf7, 0xdc, 0xcf, 0xdf, 0x3d, 0xdf, 0x39, 0xe7, 0x7e,
	0x0e, 0x2c, 0x74, 0xb0, 0xae, 0x92, 0x47, 0xa5, 0x86, 0x66, 0x38, 0x6a, 0xa9, 0x61, 0xe8, 0x0c,
	0x53, 0x9d, 0x58, 0x16, 0x69, 0x51, 0x9b, 0x59, 0x9d, 0xd2, 0xba, 0x5c, 0xd2, 0x68, 0x93, 0x34,
	0x3a, 0x0d, 0x8d, 0xd4, 0x4d, 0x43, 0xa3, 0x8d, 0x4e, 0xdd, 0x26, 0xd6, 0x3a, 0x6d, 0x10, 0xc9,
	0xb4, 0x0c, 0x66, 0xa0, 0x69, 0x0f, 0x41, 0xe2, 0x08, 0x52, 0x0f, 0x82, 0xb4, 0x2e, 0x67, 0xf3,
	0x5d, 0x0f, 0xc1, 0x26, 0x2d, 0x19, 0x26, 0xb1, 0x30, 0xa3, 0x86, 0xee, 0x81, 0x64, 0x8b, 0xc3,
	0x69, 0xd0, 0x36, 0x6e, 0xf9, 0xcf, 0xcc, 0xbe, 0x72, 0x78, 0xd6, 0xfe, 0xce, 0x8b, 0x5d, 0x3b,
	0xf7, 0x68, 0xf4, 0x10, 0xca, 0x75, 0xc5, 0xad, 0x63, 0x8d, 0xaa, 0x07, 0x97, 0xf3, 0x2d, 0xc3,
	0x68, 0x69, 0xa4, 0xc4, 0xbf, 0xad, 0x3a, 0xcd, 0x52, 0x93, 0x12, 0x4d, 0xad, 0xb7, 0xb1, 0xbd,
	0xe6, 0x47, 0x3c, 0x17, 0x8e, 0x60, 0xb4, 0x4d, 0x6c, 0x86, 0xdb, 0xa6, 0x17, 0x20, 0xbe, 0x07,
	0x4f, 0x2f, 0x12, 0x76, 0x27, 0xa0, 0x79, 0x9f, 0xb3, 0x54, 0xc8, 0x47, 0x0e, 0xb1, 0x19, 0x9a,
	0x87, 0xf3, 0x3d, 0x69, 0xa7, 0x6a, 0x46, 0xc8, 0x0b, 0x85, 0xf1, 0xea, 0xe9, 0x3f, 0xb7, 0x65,
	0x61, 0x73, 0x47, 0x4e, 0xcd, 0x5f, 0x9b, 0x2d, 0x2b, 0xe7, 0xb4, 0x6e, 0x88, 0x9a, 0x2a, 0x7e,
	0x9f, 0x80, 0xa9, 0x3b, 0xd4, 0x0e, 0x81, 0x53, 0x62, 0x07, 0xf0, 0x2f, 0xc2, 0x44, 0x90, 0xab,
	0x7d, 0xd8, 0x53, 0x01, 0xe4, 0xed, 0xff, 0x29, 0x10, 0x2c, 0xd7, 0x54, 0x54, 0x82, 0x33, 0x16,
	0x31, 0x0d, 0x9b, 0x32, 0xc3, 0x0b, 0x4f, 0xf7, 0x84, 0x9f, 0xde, 0x0f, 0xa8, 0xa9, 0xe8, 0x12,
	0x8c, 0x9b, 0xb8, 0x45, 0xea, 0x36, 0xdd, 0x20, 0x99, 0x44, 0x5e, 0x28, 0x24, 0xab, 0xf0, 0xf7,
	0xb6, 0x9c, 0x2e, 0x17, 0xe5, 0x72, 0xb9, 0xac, 0x9c, 0x72, 0x17, 0x97, 0xe8, 0x06, 0x41, 0x05,
	0x00, 0x1e, 0xc8, 0x8c, 0x35, 0xa2, 0x67, 0x92, 0x1c, 0x76, 0x7c, 0x73, 0x47, 0x1e, 0x9b, 0xbf,
	0x26, 0x97, 0xcb, 0x0a, 0x47, 0x79, 0xe0, 0xae, 0x21, 0x11, 0xd2, 0x4d, 0xaa, 0x31, 0x62, 0x65,
	0x52, 0x3c, 0x0a, 0x36, 0x77, 0xe4, 0x34, 0x8f, 0x2a, 0x2b, 0xfe, 0x0a, 0x7a, 0x1e, 0x4e, 0x19,
	0x96, 0x4a, 0xac, 0xfa, 0x6a, 0x27, 0x33, 0x16, 0xc6, 0xfa, 0x3f, 0x5f, 0xaa, 0x76, 0xaa, 0x00,
	0x09, 0xaa, 0xa2, 0xd4, 0xcf, 0xbf, 0xc8, 0x82, 0xf8, 0xa3, 0x00, 0xb9, 0x01, 0x79, 0xb2, 0x4d,
	0x43, 0xb7, 0x09, 0xc2, 0x80, 0x42, 0x3a, 0x50, 0x62, 0x67, 0x84, 0x7c, 0xb2, 0x30, 0x51, 0xa9,
	0x48, 0x43, 0x2b, 0x5f, 0x0a, 0xcb, 0x1b, 0x12, 0x8b, 0x12, 0x1b, 0x5d, 0x84, 0x49, 0x9d, 0x3c,
	0x62, 0xf5, 0x03, 0x99, 0x70, 0x73, 0x36, 0xae, 0x9c, 0x71, 0x7f, 0xbe, 0x1f, 0xa4, 0x40, 0xfc,
	0x2d, 0x01, 0x53, 0x37, 0x2c, 0x82, 0x19, 0x19, 0x50, 0x33, 0x72, 0x58, 0xa7, 0x7e, 0xd5, 0xd2,
	0xad, 0xd4, 0x2c, 0xa4, 0x74, 0xdc, 0xf6, 0x44, 0x1a, 0xaf, 0x4e, 0xff, 0xb5, 0x2d, 0xe7, 0x3e,
	0x5d, 0xc1, 0xc5, 0x8d, 0x87, 0x2b, 0x45, 0x5c, 0xdc, 0x28, 0x17, 0xaf, 0x3c, 0xfc, 0x44, 0x7e,
	0x69, 0x4e, 0xfe, 0x6c, 0xc5, 0xff, 0xa6, 0xf0, 0x70, 0xb7, 0x7c, 0x54, 0x62, 0x37, 0x2c, 0x6a,
	0xba, 0x2d, 0xd1, 0x2d, 0x5c, 0x65, 0x76, 0x4e, 0x39, 0xb8, 0x8a, 0x96, 0x21, 0x6d, 0x33, 0xcc,
	0x1c, 0x9b, 0x4b, 0x77, 0xb6, 0x72, 0xe5, 0xf0, 0x69, 0x93, 0x96, 0x38, 0x40, 0x35, 0xe5, 0x1e,
	0x45, 0xf1, 0xe1, 0xd0, 0x2d, 0x18, 0xb3, 0x1c, 0x8d, 0xd8, 0x99, 0x31, 0x2e, 0x47, 0xf9, 0x30,
	0xb8, 0x8a, 0xa3, 0x11, 0xc5, 0xdb, 0x2e, 0x7e, 0x9b, 0x84, 0xa9, 0x77, 0x4c, 0x75, 0x70, 0x62,
	0x47, 0x6a, 0x46, 0x74, 0x15, 0x26, 0x1c, 0x8e, 0xce, 0xa7, 0x03, 0x4f, 0xf5, 0x44, 0x25, 0x2b,
	0x79, 0xe3, 0x41, 0x0a, 0xc6, 0x83, 0x74, 0xcb, 0x1d, 0x20, 0x77, 0xb1, 0xbd, 0xa6, 0x80, 0x17,
	0xee, 0x7e, 0xde, 0x13, 0x28, 0x39, 0x92, 0x40, 0xa9, 0x98, 0x02, 0x8d, 0x9d, 0x90, 0x40, 0xe9,
	0xd1, 0x04, 0xfa, 0x00, 0xa6, 0x6e, 0x12, 0x8d, 0x9c, 0x8c, 0x3e, 0xe2, 0x3d, 0xc8, 0xf5, 0x6d,
	0xab, 0xbb, 0x84, 0x61, 0x15, 0x33, 0x8c, 0xa4, 0x08, 0xf8, 0x01, 0x80, 0x7d, 0xcb, 0x69, 0x14,
	0xc0, 0xbe, 0xe7, 0x3f, 0x32, 0xa0, 0x9b, 0x50, 0xab, 0xa3, 0x38, 0xfa, 0x89, 0x24, 0xf4, 0x6b,
	0x01, 0x72, 0x7d, 0xe1, 0xf7, 0xf8, 0xd6, 0x40, 0x54, 0xad, 0x4e, 0xdd, 0x72, 0xf4, 0x7a, 0xcf,
	0x73, 0x2c, 0x62, 0x3b, 0x1a, 0xdb, 0xa7, 0x9f, 0x53, 0xfb, 0x33, 0x75, 0xa3, 0x6a, 0xea, 0xa0,
	0xa3, 0x27, 0x06, 0x1d, 0xfd, 0x1f, 0x01, 0x9e, 0xb9, 0x39, 0x18, 0xf1, 0x3f, 0xa4, 0x86, 0x64,
	0x48, 0xbb, 0x8f, 0xc5, 0x8c, 0x77, 0x7b, 0xbf, 0x19, 0xf1, 0x20, 0xb0, 0x10, 0x6e, 0x67, 0xe8,
	0xd7, 0x19, 0xaa, 0xc0, 0x05, 0xdc, 0x6c, 0x92, 0x06, 0x23, 0x6a, 0x9d, 0xfb, 0x23, 0xbb, 0xde,
	0x30, 0x1c, 0x9d, 0xf1, 0x8e, 0x4f, 0x2a, 0xe7, 0x83, 0xc5, 0x1a, 0x5f, 0xbb, 0xe1, 0x2e, 0x89,
	0x9f, 0x0b, 0xf0, 0xc2, 0x22, 0x61, 0x11, 0x49, 0x08, 0xca, 0x60, 0x39, 0x7e, 0x2e, 0x42, 0x55,
	0x11, 0x9d, 0x19, 0xf1, 0x8b, 0x04, 0x5c, 0x72, 0xef, 0xdd, 0x08, 0x0e, 0xf6, 0xf1, 0x0c, 0xdf,
	0x27, 0xd9, 0x8a, 0x88, 0xbf, 0x0b, 0x50, 0x18, 0x9e, 0x06, 0xdf, 0x89, 0x7c, 0x29, 0x40, 0x7e,
	0x88, 0x1a, 0x81, 0x31, 0x79, 0x2d, 0xc6, 0xa0, 0x8d, 0x92, 0x7f, 0x2a, 0x42, 0xbd, 0xf8, 0x7e,
	0xe5, 0x71, 0x02, 0x2e, 0x0f, 0x39, 0xdd, 0xf5, 0xae, 0xf2, 0x3c, 0xe9, 0xb2, 0x7b, 0xb2, 0x8b,
	0x61, 0x4b, 0x80, 0xd9, 0x43, 0xa6, 0xcb, 0xaf, 0x8c, 0xb7, 0x61, 0x32, 0x34, 0x04, 0xfc, 0x3a,
	0x28, 0xc4, 0xa8, 0x03, 0x8e, 0xa5, 0x9c, 0xed, 0x1e, 0x14, 0x71, 0x35, 0xae, 0xfc, 0x31, 0x01,
	0x4f, 0x85, 0xa8, 0x2e, 0x79, 0x2f, 0x87, 0xe8, 0x63, 0x48, 0x2e, 0x12, 0x86, 0xe6, 0x63, 0x70,
	0x18, 0xf8, 0x1a, 0x94, 0x3d, 0x82, 0xc5, 0x46, 0x5f, 0x09, 0x90, 0x72, 0x13, 0x89, 0x5e, 0x8f,
	0xb5, 0x79, 0xf0, 0x5b, 0x52, 0x76, 0xe1, 0xe8, 0x00, 0xbe, 0x34, 0xdf, 0x09, 0x90, 0xf6, 0xcc,
	0x45, 0x2c, 0x36, 0x51, 0xf6, 0x3e, 0x3b, 0xdd, 0x0d, 0xb0, 0xff, 0xc2, 0x7a, 0x2f, 0xf8, 0x24,
	0x5e, 0xde, 0xda, 0x9d, 0x29, 0x0f, 0xb3, 0x33, 0x93, 0xe1, 0x84, 0xb9, 0x24, 0x3d, 0xc3, 0x12,
	0x8b, 0x64, 0x94, 0x55, 0x3e, 0x04, 0xc9, 0x68, 0x8b, 0xd4, 0x43, 0xf2, 0x07, 0x01, 0xd2, 0x9e,
	0x09, 0x8a, 0x45, 0x32, 0xca, 0x2f, 0xc6, 0x21, 0xf9, 0xea, 0xd6, 0xee, 0xcc, 0xdc, 0x30, 0xdb,
	0x75, 0x21, 0x7c, 0x3f, 0xbf, 0xd1, 0x36, 0x59, 0x07, 0xfd, 0xe4, 0x52, 0xe5, 0x5d, 0x1c, 0x8f,
	0x6a, 0x84, 0x13, 0x8b, 0x43, 0x75, 0x61, 0x6b, 0x77, 0x66, 0x7e, 0x98, 0xe3, 0x8a, 0xf4, 0x3c,
	0xdf, 0x08, 0x30, 0xb9, 0xe7, 0x08, 0xfc, 0xdf, 0x6e, 0xc7, 0xeb, 0xdb, 0xe1, 0x2e, 0x22, 0x3b,
	0xe2, 0x6d, 0x84, 0x1e, 0x0b, 0x70, 0x6e, 0x7f, 0x30, 0x06, 0xb7, 0xd0, 0x9b, 0x31, 0x7b, 0x33,
	0x86, 0xc5, 0xc8, 0xbe, 0x75, 0x2c, 0x58, 0x7e, 0xcb, 0xff, 0x2a, 0xc0, 0xb3, 0x61, 0xba, 0xdd,
	0x83, 0x1b, 0x2d, 0x8f, 0xfe, 0xbc, 0xbe, 0x37, 0x67, 0xf6, 0xdd, 0xe3, 0x07, 0xf6, 0x4e, 0x55,
	0x75, 0x4d, 0x63, 0x17, 0x36, 0x36, 0x69, 0x5f, 0xfc, 0xf7, 0x97, 0x5b, 0x94, 0x7d, 0xe8, 0xac,
	0x4a, 0x0d, 0xa3, 0x5d, 0xf2, 0x76, 0x14, 0xbd, 0xff, 0xd0, 0x5a, 0x46, 0xb1, 0x45, 0x74, 0xde,
	0x2b, 0xa5, 0xa1, 0x7f, 0xdf, 0x5d, 0xed, 0xf9, 0x71, 0x35, 0xcd, 0xb7, 0xbe, 0xfc, 0x6f, 0x00,
	0x00, 0x00, 0xff, 0xff, 0xac, 0x20, 0xde, 0xe1, 0xb2, 0x14, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// LifecyclePolicyServiceClient is the client API for LifecyclePolicyService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LifecyclePolicyServiceClient interface {
	Get(ctx context.Context, in *GetLifecyclePolicyRequest, opts ...grpc.CallOption) (*LifecyclePolicy, error)
	List(ctx context.Context, in *ListLifecyclePoliciesRequest, opts ...grpc.CallOption) (*ListLifecyclePoliciesResponse, error)
	Create(ctx context.Context, in *CreateLifecyclePolicyRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Update(ctx context.Context, in *UpdateLifecyclePolicyRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	Delete(ctx context.Context, in *DeleteLifecyclePolicyRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	DryRun(ctx context.Context, in *DryRunLifecyclePolicyRequest, opts ...grpc.CallOption) (*operation.Operation, error)
	GetDryRunResult(ctx context.Context, in *GetDryRunLifecyclePolicyResultRequest, opts ...grpc.CallOption) (*DryRunLifecyclePolicyResult, error)
	ListDryRunResults(ctx context.Context, in *ListDryRunLifecyclePolicyResultsRequest, opts ...grpc.CallOption) (*ListDryRunLifecyclePolicyResultsResponse, error)
	ListDryRunResultAffectedImages(ctx context.Context, in *ListDryRunLifecyclePolicyResultAffectedImagesRequest, opts ...grpc.CallOption) (*ListDryRunLifecyclePolicyResultAffectedImagesResponse, error)
}

type lifecyclePolicyServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewLifecyclePolicyServiceClient(cc grpc.ClientConnInterface) LifecyclePolicyServiceClient {
	return &lifecyclePolicyServiceClient{cc}
}

func (c *lifecyclePolicyServiceClient) Get(ctx context.Context, in *GetLifecyclePolicyRequest, opts ...grpc.CallOption) (*LifecyclePolicy, error) {
	out := new(LifecyclePolicy)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecyclePolicyServiceClient) List(ctx context.Context, in *ListLifecyclePoliciesRequest, opts ...grpc.CallOption) (*ListLifecyclePoliciesResponse, error) {
	out := new(ListLifecyclePoliciesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/List", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecyclePolicyServiceClient) Create(ctx context.Context, in *CreateLifecyclePolicyRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecyclePolicyServiceClient) Update(ctx context.Context, in *UpdateLifecyclePolicyRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecyclePolicyServiceClient) Delete(ctx context.Context, in *DeleteLifecyclePolicyRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecyclePolicyServiceClient) DryRun(ctx context.Context, in *DryRunLifecyclePolicyRequest, opts ...grpc.CallOption) (*operation.Operation, error) {
	out := new(operation.Operation)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/DryRun", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecyclePolicyServiceClient) GetDryRunResult(ctx context.Context, in *GetDryRunLifecyclePolicyResultRequest, opts ...grpc.CallOption) (*DryRunLifecyclePolicyResult, error) {
	out := new(DryRunLifecyclePolicyResult)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/GetDryRunResult", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecyclePolicyServiceClient) ListDryRunResults(ctx context.Context, in *ListDryRunLifecyclePolicyResultsRequest, opts ...grpc.CallOption) (*ListDryRunLifecyclePolicyResultsResponse, error) {
	out := new(ListDryRunLifecyclePolicyResultsResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/ListDryRunResults", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *lifecyclePolicyServiceClient) ListDryRunResultAffectedImages(ctx context.Context, in *ListDryRunLifecyclePolicyResultAffectedImagesRequest, opts ...grpc.CallOption) (*ListDryRunLifecyclePolicyResultAffectedImagesResponse, error) {
	out := new(ListDryRunLifecyclePolicyResultAffectedImagesResponse)
	err := c.cc.Invoke(ctx, "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/ListDryRunResultAffectedImages", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LifecyclePolicyServiceServer is the server API for LifecyclePolicyService service.
type LifecyclePolicyServiceServer interface {
	Get(context.Context, *GetLifecyclePolicyRequest) (*LifecyclePolicy, error)
	List(context.Context, *ListLifecyclePoliciesRequest) (*ListLifecyclePoliciesResponse, error)
	Create(context.Context, *CreateLifecyclePolicyRequest) (*operation.Operation, error)
	Update(context.Context, *UpdateLifecyclePolicyRequest) (*operation.Operation, error)
	Delete(context.Context, *DeleteLifecyclePolicyRequest) (*operation.Operation, error)
	DryRun(context.Context, *DryRunLifecyclePolicyRequest) (*operation.Operation, error)
	GetDryRunResult(context.Context, *GetDryRunLifecyclePolicyResultRequest) (*DryRunLifecyclePolicyResult, error)
	ListDryRunResults(context.Context, *ListDryRunLifecyclePolicyResultsRequest) (*ListDryRunLifecyclePolicyResultsResponse, error)
	ListDryRunResultAffectedImages(context.Context, *ListDryRunLifecyclePolicyResultAffectedImagesRequest) (*ListDryRunLifecyclePolicyResultAffectedImagesResponse, error)
}

// UnimplementedLifecyclePolicyServiceServer can be embedded to have forward compatible implementations.
type UnimplementedLifecyclePolicyServiceServer struct {
}

func (*UnimplementedLifecyclePolicyServiceServer) Get(ctx context.Context, req *GetLifecyclePolicyRequest) (*LifecyclePolicy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedLifecyclePolicyServiceServer) List(ctx context.Context, req *ListLifecyclePoliciesRequest) (*ListLifecyclePoliciesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method List not implemented")
}
func (*UnimplementedLifecyclePolicyServiceServer) Create(ctx context.Context, req *CreateLifecyclePolicyRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedLifecyclePolicyServiceServer) Update(ctx context.Context, req *UpdateLifecyclePolicyRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Update not implemented")
}
func (*UnimplementedLifecyclePolicyServiceServer) Delete(ctx context.Context, req *DeleteLifecyclePolicyRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}
func (*UnimplementedLifecyclePolicyServiceServer) DryRun(ctx context.Context, req *DryRunLifecyclePolicyRequest) (*operation.Operation, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DryRun not implemented")
}
func (*UnimplementedLifecyclePolicyServiceServer) GetDryRunResult(ctx context.Context, req *GetDryRunLifecyclePolicyResultRequest) (*DryRunLifecyclePolicyResult, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetDryRunResult not implemented")
}
func (*UnimplementedLifecyclePolicyServiceServer) ListDryRunResults(ctx context.Context, req *ListDryRunLifecyclePolicyResultsRequest) (*ListDryRunLifecyclePolicyResultsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDryRunResults not implemented")
}
func (*UnimplementedLifecyclePolicyServiceServer) ListDryRunResultAffectedImages(ctx context.Context, req *ListDryRunLifecyclePolicyResultAffectedImagesRequest) (*ListDryRunLifecyclePolicyResultAffectedImagesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListDryRunResultAffectedImages not implemented")
}

func RegisterLifecyclePolicyServiceServer(s *grpc.Server, srv LifecyclePolicyServiceServer) {
	s.RegisterService(&_LifecyclePolicyService_serviceDesc, srv)
}

func _LifecyclePolicyService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetLifecyclePolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).Get(ctx, req.(*GetLifecyclePolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecyclePolicyService_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListLifecyclePoliciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).List(ctx, req.(*ListLifecyclePoliciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecyclePolicyService_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLifecyclePolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).Create(ctx, req.(*CreateLifecyclePolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecyclePolicyService_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLifecyclePolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).Update(ctx, req.(*UpdateLifecyclePolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecyclePolicyService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLifecyclePolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).Delete(ctx, req.(*DeleteLifecyclePolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecyclePolicyService_DryRun_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DryRunLifecyclePolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).DryRun(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/DryRun",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).DryRun(ctx, req.(*DryRunLifecyclePolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecyclePolicyService_GetDryRunResult_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetDryRunLifecyclePolicyResultRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).GetDryRunResult(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/GetDryRunResult",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).GetDryRunResult(ctx, req.(*GetDryRunLifecyclePolicyResultRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecyclePolicyService_ListDryRunResults_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDryRunLifecyclePolicyResultsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).ListDryRunResults(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/ListDryRunResults",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).ListDryRunResults(ctx, req.(*ListDryRunLifecyclePolicyResultsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _LifecyclePolicyService_ListDryRunResultAffectedImages_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListDryRunLifecyclePolicyResultAffectedImagesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LifecyclePolicyServiceServer).ListDryRunResultAffectedImages(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/yandex.cloud.containerregistry.v1.LifecyclePolicyService/ListDryRunResultAffectedImages",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LifecyclePolicyServiceServer).ListDryRunResultAffectedImages(ctx, req.(*ListDryRunLifecyclePolicyResultAffectedImagesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _LifecyclePolicyService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "yandex.cloud.containerregistry.v1.LifecyclePolicyService",
	HandlerType: (*LifecyclePolicyServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _LifecyclePolicyService_Get_Handler,
		},
		{
			MethodName: "List",
			Handler:    _LifecyclePolicyService_List_Handler,
		},
		{
			MethodName: "Create",
			Handler:    _LifecyclePolicyService_Create_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _LifecyclePolicyService_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _LifecyclePolicyService_Delete_Handler,
		},
		{
			MethodName: "DryRun",
			Handler:    _LifecyclePolicyService_DryRun_Handler,
		},
		{
			MethodName: "GetDryRunResult",
			Handler:    _LifecyclePolicyService_GetDryRunResult_Handler,
		},
		{
			MethodName: "ListDryRunResults",
			Handler:    _LifecyclePolicyService_ListDryRunResults_Handler,
		},
		{
			MethodName: "ListDryRunResultAffectedImages",
			Handler:    _LifecyclePolicyService_ListDryRunResultAffectedImages_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yandex/cloud/containerregistry/v1/lifecycle_policy_service.proto",
}
