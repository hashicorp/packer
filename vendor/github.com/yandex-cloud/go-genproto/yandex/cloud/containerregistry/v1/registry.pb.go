// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yandex/cloud/containerregistry/v1/registry.proto

package containerregistry

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Registry_Status int32

const (
	Registry_STATUS_UNSPECIFIED Registry_Status = 0
	// Registry is being created.
	Registry_CREATING Registry_Status = 1
	// Registry is ready to use.
	Registry_ACTIVE Registry_Status = 2
	// Registry is being deleted.
	Registry_DELETING Registry_Status = 3
)

var Registry_Status_name = map[int32]string{
	0: "STATUS_UNSPECIFIED",
	1: "CREATING",
	2: "ACTIVE",
	3: "DELETING",
}

var Registry_Status_value = map[string]int32{
	"STATUS_UNSPECIFIED": 0,
	"CREATING":           1,
	"ACTIVE":             2,
	"DELETING":           3,
}

func (x Registry_Status) String() string {
	return proto.EnumName(Registry_Status_name, int32(x))
}

func (Registry_Status) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_af015c3b55615c1a, []int{0, 0}
}

// A Registry resource. For more information, see [Registry](/docs/cloud/containerregistry/registry).
type Registry struct {
	// Output only. ID of the registry.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// ID of the folder that the registry belongs to.
	FolderId string `protobuf:"bytes,2,opt,name=folder_id,json=folderId,proto3" json:"folder_id,omitempty"`
	// Name of the registry.
	Name string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	// Output only. Status of the registry.
	Status Registry_Status `protobuf:"varint,4,opt,name=status,proto3,enum=yandex.cloud.containerregistry.v1.Registry_Status" json:"status,omitempty"`
	// Output only. Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
	CreatedAt *timestamp.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// Resource labels as `key:value` pairs. Ðœaximum of 64 per resource.
	Labels               map[string]string `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Registry) Reset()         { *m = Registry{} }
func (m *Registry) String() string { return proto.CompactTextString(m) }
func (*Registry) ProtoMessage()    {}
func (*Registry) Descriptor() ([]byte, []int) {
	return fileDescriptor_af015c3b55615c1a, []int{0}
}

func (m *Registry) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Registry.Unmarshal(m, b)
}
func (m *Registry) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Registry.Marshal(b, m, deterministic)
}
func (m *Registry) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Registry.Merge(m, src)
}
func (m *Registry) XXX_Size() int {
	return xxx_messageInfo_Registry.Size(m)
}
func (m *Registry) XXX_DiscardUnknown() {
	xxx_messageInfo_Registry.DiscardUnknown(m)
}

var xxx_messageInfo_Registry proto.InternalMessageInfo

func (m *Registry) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Registry) GetFolderId() string {
	if m != nil {
		return m.FolderId
	}
	return ""
}

func (m *Registry) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Registry) GetStatus() Registry_Status {
	if m != nil {
		return m.Status
	}
	return Registry_STATUS_UNSPECIFIED
}

func (m *Registry) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *Registry) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func init() {
	proto.RegisterEnum("yandex.cloud.containerregistry.v1.Registry_Status", Registry_Status_name, Registry_Status_value)
	proto.RegisterType((*Registry)(nil), "yandex.cloud.containerregistry.v1.Registry")
	proto.RegisterMapType((map[string]string)(nil), "yandex.cloud.containerregistry.v1.Registry.LabelsEntry")
}

func init() {
	proto.RegisterFile("yandex/cloud/containerregistry/v1/registry.proto", fileDescriptor_af015c3b55615c1a)
}

var fileDescriptor_af015c3b55615c1a = []byte{
	// 400 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x92, 0xc1, 0x6b, 0xd4, 0x40,
	0x14, 0xc6, 0x4d, 0xd2, 0x86, 0xdd, 0xb7, 0x52, 0x96, 0x41, 0x24, 0xac, 0x07, 0xd7, 0x82, 0x90,
	0x4b, 0x67, 0x6c, 0x3c, 0x68, 0xf5, 0x14, 0xb7, 0x51, 0x23, 0xa5, 0x4a, 0x92, 0x2a, 0x78, 0x59,
	0x26, 0x99, 0x69, 0x1c, 0x4c, 0x32, 0x4b, 0x32, 0x59, 0xcc, 0xcd, 0x3f, 0xc7, 0x3f, 0x53, 0x3a,
	0x93, 0x80, 0x52, 0xa1, 0x78, 0x7b, 0xf9, 0x5e, 0x7e, 0x6f, 0xde, 0xf7, 0xf1, 0xe0, 0xd9, 0x40,
	0x1b, 0xc6, 0x7f, 0x90, 0xa2, 0x92, 0x3d, 0x23, 0x85, 0x6c, 0x14, 0x15, 0x0d, 0x6f, 0x5b, 0x5e,
	0x8a, 0x4e, 0xb5, 0x03, 0xd9, 0x9f, 0x92, 0xa9, 0xc6, 0xbb, 0x56, 0x2a, 0x89, 0x9e, 0x18, 0x02,
	0x6b, 0x02, 0xdf, 0x22, 0xf0, 0xfe, 0x74, 0xf5, 0xb8, 0x94, 0xb2, 0xac, 0x38, 0xd1, 0x40, 0xde,
	0x5f, 0x13, 0x25, 0x6a, 0xde, 0x29, 0x5a, 0xef, 0xcc, 0x8c, 0xe3, 0x5f, 0x0e, 0xcc, 0x92, 0x11,
	0x40, 0x47, 0x60, 0x0b, 0xe6, 0x59, 0x6b, 0xcb, 0x9f, 0x27, 0xb6, 0x60, 0xe8, 0x11, 0xcc, 0xaf,
	0x65, 0xc5, 0x78, 0xbb, 0x15, 0xcc, 0xb3, 0xb5, 0x3c, 0x33, 0x42, 0xcc, 0x10, 0x82, 0x83, 0x86,
	0xd6, 0xdc, 0x73, 0xb4, 0xae, 0x6b, 0xf4, 0x01, 0xdc, 0x4e, 0x51, 0xd5, 0x77, 0xde, 0xc1, 0xda,
	0xf2, 0x8f, 0x82, 0x00, 0xdf, 0xb9, 0x22, 0x9e, 0x5e, 0xc7, 0xa9, 0x26, 0x93, 0x71, 0x02, 0x3a,
	0x03, 0x28, 0x5a, 0x4e, 0x15, 0x67, 0x5b, 0xaa, 0xbc, 0xc3, 0xb5, 0xe5, 0x2f, 0x82, 0x15, 0x36,
	0x7e, 0xf0, 0xe4, 0x07, 0x67, 0x93, 0x9f, 0x64, 0x3e, 0xfe, 0x1d, 0x2a, 0xf4, 0x11, 0xdc, 0x8a,
	0xe6, 0xbc, 0xea, 0x3c, 0x77, 0xed, 0xf8, 0x8b, 0xe0, 0xc5, 0xff, 0xac, 0x71, 0xa1, 0xc9, 0xa8,
	0x51, 0xed, 0x90, 0x8c, 0x63, 0x56, 0x67, 0xb0, 0xf8, 0x43, 0x46, 0x4b, 0x70, 0xbe, 0xf3, 0x61,
	0x0c, 0xea, 0xa6, 0x44, 0x0f, 0xe0, 0x70, 0x4f, 0xab, 0x9e, 0x8f, 0x29, 0x99, 0x8f, 0x57, 0xf6,
	0x4b, 0xeb, 0xf8, 0x3d, 0xb8, 0xc6, 0x18, 0x7a, 0x08, 0x28, 0xcd, 0xc2, 0xec, 0x2a, 0xdd, 0x5e,
	0x5d, 0xa6, 0x9f, 0xa2, 0x4d, 0xfc, 0x36, 0x8e, 0xce, 0x97, 0xf7, 0xd0, 0x7d, 0x98, 0x6d, 0x92,
	0x28, 0xcc, 0xe2, 0xcb, 0x77, 0x4b, 0x0b, 0x01, 0xb8, 0xe1, 0x26, 0x8b, 0x3f, 0x47, 0x4b, 0xfb,
	0xa6, 0x73, 0x1e, 0x5d, 0x44, 0xba, 0xe3, 0xbc, 0xf9, 0x69, 0xc1, 0xd3, 0xbf, 0x7c, 0xd0, 0x9d,
	0xf8, 0xa7, 0x97, 0xaf, 0x5f, 0x4a, 0xa1, 0xbe, 0xf5, 0x39, 0x2e, 0x64, 0x4d, 0x0c, 0x71, 0x62,
	0xae, 0xaa, 0x94, 0x27, 0x25, 0x6f, 0x74, 0x78, 0xe4, 0xce, 0x73, 0x7b, 0x7d, 0x4b, 0xcc, 0x5d,
	0x8d, 0x3e, 0xff, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x0d, 0x12, 0xef, 0xfc, 0xac, 0x02, 0x00, 0x00,
}
