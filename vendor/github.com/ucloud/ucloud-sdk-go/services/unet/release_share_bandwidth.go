//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UNet ReleaseShareBandwidth

package unet

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// ReleaseShareBandwidthRequest is request schema for ReleaseShareBandwidth action
type ReleaseShareBandwidthRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 项目ID。不填写为默认项目，子帐号必须填写。 请参考[GetProjectList接口](../summary/get_project_list.html)
	// ProjectId *string `required:"false"`

	// 共享带宽ID
	ShareBandwidthId *string `required:"true"`

	// 关闭共享带宽后，各EIP恢复为的带宽值
	EIPBandwidth *int `required:"true"`

	// Bandwidth 带宽计费, Traffic 转流量计费
	PayMode *string `required:"false"`
}

// ReleaseShareBandwidthResponse is response schema for ReleaseShareBandwidth action
type ReleaseShareBandwidthResponse struct {
	response.CommonBase
}

// NewReleaseShareBandwidthRequest will create request of ReleaseShareBandwidth action.
func (c *UNetClient) NewReleaseShareBandwidthRequest() *ReleaseShareBandwidthRequest {
	req := &ReleaseShareBandwidthRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(true)
	return req
}

// ReleaseShareBandwidth - 关闭共享带宽
func (c *UNetClient) ReleaseShareBandwidth(req *ReleaseShareBandwidthRequest) (*ReleaseShareBandwidthResponse, error) {
	var err error
	var res ReleaseShareBandwidthResponse

	err = c.Client.InvokeAction("ReleaseShareBandwidth", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
