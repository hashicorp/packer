//Code is generated by ucloud code generator, don't modify it by hand, it will cause undefined behaviors.
//go:generate ucloud-gen-go-api UHost CreateIsolationGroup

package uhost

import (
	"github.com/ucloud/ucloud-sdk-go/ucloud/request"
	"github.com/ucloud/ucloud-sdk-go/ucloud/response"
)

// CreateIsolationGroupRequest is request schema for CreateIsolationGroup action
type CreateIsolationGroupRequest struct {
	request.CommonBase

	// [公共参数] 地域。 参见 [地域和可用区列表](../summary/regionlist.html)
	// Region *string `required:"true"`

	// [公共参数] 项目id
	// ProjectId *string `required:"false"`

	// 硬件隔离组名称。请遵照[[api:uhost-api:specification|字段规范]]设定隔离组名称。
	GroupName *string `required:"true"`

	// 备注。请遵照[[api:uhost-api:specification|字段规范]]设定隔离组备注。
	Remark *string `required:"false"`
}

// CreateIsolationGroupResponse is response schema for CreateIsolationGroup action
type CreateIsolationGroupResponse struct {
	response.CommonBase

	// 硬件隔离组id
	GroupId string
}

// NewCreateIsolationGroupRequest will create request of CreateIsolationGroup action.
func (c *UHostClient) NewCreateIsolationGroupRequest() *CreateIsolationGroupRequest {
	req := &CreateIsolationGroupRequest{}

	// setup request with client config
	c.Client.SetupRequest(req)

	// setup retryable with default retry policy (retry for non-create action and common error)
	req.SetRetryable(false)
	return req
}

// CreateIsolationGroup - 创建硬件隔离组，组内机器严格隔离在不同宿主机上。
func (c *UHostClient) CreateIsolationGroup(req *CreateIsolationGroupRequest) (*CreateIsolationGroupResponse, error) {
	var err error
	var res CreateIsolationGroupResponse

	err = c.Client.InvokeAction("CreateIsolationGroup", req, &res)
	if err != nil {
		return &res, err
	}

	return &res, nil
}
