// Code generated by "stringer -type CSErrorCode"; DO NOT EDIT.

package egoscale

import "strconv"

const _CSErrorCode_name = "CloudRuntimeExceptionExecutionExceptionHypervisorVersionChangedExceptionCloudExceptionAccountLimitExceptionAgentUnavailableExceptionCloudAuthenticationExceptionConcurrentOperationExceptionConflictingNetworkSettingsExceptionDiscoveredWithErrorExceptionHAStateExceptionInsufficientAddressCapacityExceptionInsufficientCapacityExceptionInsufficientNetworkCapacityExceptionInsufficientServerCapacityExceptionInsufficientStorageCapacityExceptionInternalErrorExceptionInvalidParameterValueExceptionManagementServerExceptionNetworkRuleConflictExceptionPermissionDeniedExceptionResourceAllocationExceptionResourceInUseExceptionResourceUnavailableExceptionStorageUnavailableExceptionUnsupportedServiceExceptionVirtualMachineMigrationExceptionAsyncCommandQueuedRequestLimitExceptionServerAPIException"

var _CSErrorCode_map = map[CSErrorCode]string{
	4250: _CSErrorCode_name[0:21],
	4260: _CSErrorCode_name[21:39],
	4265: _CSErrorCode_name[39:72],
	4275: _CSErrorCode_name[72:86],
	4280: _CSErrorCode_name[86:107],
	4285: _CSErrorCode_name[107:132],
	4290: _CSErrorCode_name[132:160],
	4300: _CSErrorCode_name[160:188],
	4305: _CSErrorCode_name[188:223],
	4310: _CSErrorCode_name[223:251],
	4315: _CSErrorCode_name[251:267],
	4320: _CSErrorCode_name[267:303],
	4325: _CSErrorCode_name[303:332],
	4330: _CSErrorCode_name[332:368],
	4335: _CSErrorCode_name[368:403],
	4340: _CSErrorCode_name[403:439],
	4345: _CSErrorCode_name[439:461],
	4350: _CSErrorCode_name[461:491],
	4355: _CSErrorCode_name[491:516],
	4360: _CSErrorCode_name[516:544],
	4365: _CSErrorCode_name[544:569],
	4370: _CSErrorCode_name[569:596],
	4375: _CSErrorCode_name[596:618],
	4380: _CSErrorCode_name[618:646],
	4385: _CSErrorCode_name[646:673],
	4390: _CSErrorCode_name[673:700],
	4395: _CSErrorCode_name[700:732],
	4540: _CSErrorCode_name[732:750],
	4545: _CSErrorCode_name[750:771],
	9999: _CSErrorCode_name[771:789],
}

func (i CSErrorCode) String() string {
	if str, ok := _CSErrorCode_map[i]; ok {
		return str
	}
	return "CSErrorCode(" + strconv.FormatInt(int64(i), 10) + ")"
}
